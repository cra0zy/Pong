Bridge.assembly("Pong.Web",function($asm,globals){"use strict";var $m=Bridge.setMetadata,$n=["System","Microsoft.Xna.Framework","FarseerPhysics","FarseerPhysics.Dynamics","FarseerPhysics.Common","System.Collections.Generic","FarseerPhysics.Dynamics.Joints","FarseerPhysics.Collision.Shapes","FarseerPhysics.Dynamics.Contacts","FarseerPhysics.Controllers","FarseerPhysics.Common.PhysicsLogic","FarseerPhysics.Collision","System.Diagnostics","Microsoft.Xna.Framework.Content","FarseerPhysics.Content","FarseerPhysics.Common.TextureTools","FarseerPhysics.Common.Decomposition","FarseerPhysics.Common.PolygonManipulation","FarseerPhysics.Common.Decomposition.Seidel","FarseerPhysics.Common.Decomposition.CDT.Delaunay","FarseerPhysics.Common.Decomposition.CDT","FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep","FarseerPhysics.Common.Decomposition.CDT.Polygon","FarseerPhysics.Common.Decomposition.CDT.Util","FarseerPhysics.Common.ConvexHull","Pong","Microsoft.Xna.Framework.Graphics","System.Threading.Tasks","Microsoft.Xna.Framework.Input"];$m("FarseerPhysics.ConvertUnits",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"SetDisplayUnitToSimUnitRatio",is:!0,t:8,pi:[{n:"displayUnitsPerSimUnit",pt:$n[0].Single,ps:0}],sn:"SetDisplayUnitToSimUnitRatio",rt:$n[0].Void,p:[$n[0].Single]},{a:2,n:"ToDisplayUnits",is:!0,t:8,pi:[{n:"simUnits",pt:$n[1].Vector2,ps:0}],sn:"ToDisplayUnits",rt:$n[1].Vector2,p:[$n[1].Vector2]},{a:2,n:"ToDisplayUnits",is:!0,t:8,pi:[{n:"simUnits",pt:$n[1].Vector3,ps:0}],sn:"ToDisplayUnits$2",rt:$n[1].Vector3,p:[$n[1].Vector3]},{a:2,n:"ToDisplayUnits",is:!0,t:8,pi:[{n:"simUnits",pt:$n[0].Int32,ps:0}],sn:"ToDisplayUnits$3",rt:$n[0].Single,p:[$n[0].Int32],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"ToDisplayUnits",is:!0,t:8,pi:[{n:"simUnits",pt:$n[0].Single,ps:0}],sn:"ToDisplayUnits$4",rt:$n[0].Single,p:[$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"ToDisplayUnits",is:!0,t:8,pi:[{n:"simUnits",ref:!0,pt:$n[1].Vector2,ps:0},{n:"displayUnits",out:!0,pt:$n[1].Vector2,ps:1}],sn:"ToDisplayUnits$5",rt:$n[0].Void,p:[$n[1].Vector2,$n[1].Vector2]},{a:2,n:"ToDisplayUnits",is:!0,t:8,pi:[{n:"x",pt:$n[0].Single,ps:0},{n:"y",pt:$n[0].Single,ps:1}],sn:"ToDisplayUnits$1",rt:$n[1].Vector2,p:[$n[0].Single,$n[0].Single]},{a:2,n:"ToDisplayUnits",is:!0,t:8,pi:[{n:"x",pt:$n[0].Single,ps:0},{n:"y",pt:$n[0].Single,ps:1},{n:"displayUnits",out:!0,pt:$n[1].Vector2,ps:2}],sn:"ToDisplayUnits$6",rt:$n[0].Void,p:[$n[0].Single,$n[0].Single,$n[1].Vector2]},{a:2,n:"ToSimUnits",is:!0,t:8,pi:[{n:"displayUnits",pt:$n[1].Vector2,ps:0}],sn:"ToSimUnits",rt:$n[1].Vector2,p:[$n[1].Vector2]},{a:2,n:"ToSimUnits",is:!0,t:8,pi:[{n:"displayUnits",pt:$n[1].Vector3,ps:0}],sn:"ToSimUnits$3",rt:$n[1].Vector3,p:[$n[1].Vector3]},{a:2,n:"ToSimUnits",is:!0,t:8,pi:[{n:"displayUnits",pt:$n[0].Double,ps:0}],sn:"ToSimUnits$4",rt:$n[0].Single,p:[$n[0].Double],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"ToSimUnits",is:!0,t:8,pi:[{n:"displayUnits",pt:$n[0].Int32,ps:0}],sn:"ToSimUnits$5",rt:$n[0].Single,p:[$n[0].Int32],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"ToSimUnits",is:!0,t:8,pi:[{n:"displayUnits",pt:$n[0].Single,ps:0}],sn:"ToSimUnits$6",rt:$n[0].Single,p:[$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"ToSimUnits",is:!0,t:8,pi:[{n:"displayUnits",ref:!0,pt:$n[1].Vector2,ps:0},{n:"simUnits",out:!0,pt:$n[1].Vector2,ps:1}],sn:"ToSimUnits$7",rt:$n[0].Void,p:[$n[1].Vector2,$n[1].Vector2]},{a:2,n:"ToSimUnits",is:!0,t:8,pi:[{n:"x",pt:$n[0].Double,ps:0},{n:"y",pt:$n[0].Double,ps:1}],sn:"ToSimUnits$1",rt:$n[1].Vector2,p:[$n[0].Double,$n[0].Double]},{a:2,n:"ToSimUnits",is:!0,t:8,pi:[{n:"x",pt:$n[0].Single,ps:0},{n:"y",pt:$n[0].Single,ps:1}],sn:"ToSimUnits$2",rt:$n[1].Vector2,p:[$n[0].Single,$n[0].Single]},{a:2,n:"ToSimUnits",is:!0,t:8,pi:[{n:"x",pt:$n[0].Single,ps:0},{n:"y",pt:$n[0].Single,ps:1},{n:"simUnits",out:!0,pt:$n[1].Vector2,ps:2}],sn:"ToSimUnits$8",rt:$n[0].Void,p:[$n[0].Single,$n[0].Single,$n[1].Vector2]},{a:1,n:"_displayUnitsToSimUnitsRatio",is:!0,t:4,rt:$n[0].Single,sn:"_displayUnitsToSimUnitsRatio",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_simUnitsToDisplayUnitsRatio",is:!0,t:4,rt:$n[0].Single,sn:"_simUnitsToDisplayUnitsRatio",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.DebugViewFlags",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"AABB",is:!0,t:4,rt:$n[2].DebugViewFlags,sn:"AABB",box:function($v){return Bridge.box($v,FarseerPhysics.DebugViewFlags,System.Enum.toStringFn(FarseerPhysics.DebugViewFlags))}},{a:2,n:"CenterOfMass",is:!0,t:4,rt:$n[2].DebugViewFlags,sn:"CenterOfMass",box:function($v){return Bridge.box($v,FarseerPhysics.DebugViewFlags,System.Enum.toStringFn(FarseerPhysics.DebugViewFlags))}},{a:2,n:"ContactNormals",is:!0,t:4,rt:$n[2].DebugViewFlags,sn:"ContactNormals",box:function($v){return Bridge.box($v,FarseerPhysics.DebugViewFlags,System.Enum.toStringFn(FarseerPhysics.DebugViewFlags))}},{a:2,n:"ContactPoints",is:!0,t:4,rt:$n[2].DebugViewFlags,sn:"ContactPoints",box:function($v){return Bridge.box($v,FarseerPhysics.DebugViewFlags,System.Enum.toStringFn(FarseerPhysics.DebugViewFlags))}},{a:2,n:"Controllers",is:!0,t:4,rt:$n[2].DebugViewFlags,sn:"Controllers",box:function($v){return Bridge.box($v,FarseerPhysics.DebugViewFlags,System.Enum.toStringFn(FarseerPhysics.DebugViewFlags))}},{a:2,n:"DebugPanel",is:!0,t:4,rt:$n[2].DebugViewFlags,sn:"DebugPanel",box:function($v){return Bridge.box($v,FarseerPhysics.DebugViewFlags,System.Enum.toStringFn(FarseerPhysics.DebugViewFlags))}},{a:2,n:"Joint",is:!0,t:4,rt:$n[2].DebugViewFlags,sn:"Joint",box:function($v){return Bridge.box($v,FarseerPhysics.DebugViewFlags,System.Enum.toStringFn(FarseerPhysics.DebugViewFlags))}},{a:2,n:"PerformanceGraph",is:!0,t:4,rt:$n[2].DebugViewFlags,sn:"PerformanceGraph",box:function($v){return Bridge.box($v,FarseerPhysics.DebugViewFlags,System.Enum.toStringFn(FarseerPhysics.DebugViewFlags))}},{a:2,n:"PolygonPoints",is:!0,t:4,rt:$n[2].DebugViewFlags,sn:"PolygonPoints",box:function($v){return Bridge.box($v,FarseerPhysics.DebugViewFlags,System.Enum.toStringFn(FarseerPhysics.DebugViewFlags))}},{a:2,n:"Shape",is:!0,t:4,rt:$n[2].DebugViewFlags,sn:"Shape",box:function($v){return Bridge.box($v,FarseerPhysics.DebugViewFlags,System.Enum.toStringFn(FarseerPhysics.DebugViewFlags))}}]}},$n);$m("FarseerPhysics.DebugViewBase",function(){return{att:1048705,a:2,m:[{a:3,n:".ctor",t:1,p:[$n[3].World],pi:[{n:"world",pt:$n[3].World,ps:0}],sn:"ctor"},{a:2,n:"AppendFlags",t:8,pi:[{n:"flags",pt:$n[2].DebugViewFlags,ps:0}],sn:"AppendFlags",rt:$n[0].Void,p:[$n[2].DebugViewFlags]},{ab:!0,a:2,n:"DrawCircle",t:8,pi:[{n:"center",pt:$n[1].Vector2,ps:0},{n:"radius",pt:$n[0].Single,ps:1},{n:"red",pt:$n[0].Single,ps:2},{n:"blue",pt:$n[0].Single,ps:3},{n:"green",pt:$n[0].Single,ps:4}],sn:"DrawCircle",rt:$n[0].Void,p:[$n[1].Vector2,$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Single]},{ab:!0,a:2,n:"DrawPolygon",t:8,pi:[{n:"vertices",pt:System.Array.type(Microsoft.Xna.Framework.Vector2),ps:0},{n:"count",pt:$n[0].Int32,ps:1},{n:"red",pt:$n[0].Single,ps:2},{n:"blue",pt:$n[0].Single,ps:3},{n:"green",pt:$n[0].Single,ps:4},{n:"closed",dv:!0,o:!0,pt:$n[0].Boolean,ps:5}],sn:"DrawPolygon",rt:$n[0].Void,p:[System.Array.type(Microsoft.Xna.Framework.Vector2),$n[0].Int32,$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Boolean]},{ab:!0,a:2,n:"DrawSegment",t:8,pi:[{n:"start",pt:$n[1].Vector2,ps:0},{n:"end",pt:$n[1].Vector2,ps:1},{n:"red",pt:$n[0].Single,ps:2},{n:"blue",pt:$n[0].Single,ps:3},{n:"green",pt:$n[0].Single,ps:4}],sn:"DrawSegment",rt:$n[0].Void,p:[$n[1].Vector2,$n[1].Vector2,$n[0].Single,$n[0].Single,$n[0].Single]},{ab:!0,a:2,n:"DrawSolidCircle",t:8,pi:[{n:"center",pt:$n[1].Vector2,ps:0},{n:"radius",pt:$n[0].Single,ps:1},{n:"axis",pt:$n[1].Vector2,ps:2},{n:"red",pt:$n[0].Single,ps:3},{n:"blue",pt:$n[0].Single,ps:4},{n:"green",pt:$n[0].Single,ps:5}],sn:"DrawSolidCircle",rt:$n[0].Void,p:[$n[1].Vector2,$n[0].Single,$n[1].Vector2,$n[0].Single,$n[0].Single,$n[0].Single]},{ab:!0,a:2,n:"DrawSolidPolygon",t:8,pi:[{n:"vertices",pt:System.Array.type(Microsoft.Xna.Framework.Vector2),ps:0},{n:"count",pt:$n[0].Int32,ps:1},{n:"red",pt:$n[0].Single,ps:2},{n:"blue",pt:$n[0].Single,ps:3},{n:"green",pt:$n[0].Single,ps:4}],sn:"DrawSolidPolygon",rt:$n[0].Void,p:[System.Array.type(Microsoft.Xna.Framework.Vector2),$n[0].Int32,$n[0].Single,$n[0].Single,$n[0].Single]},{ab:!0,a:2,n:"DrawTransform",t:8,pi:[{n:"transform",ref:!0,pt:$n[4].Transform,ps:0}],sn:"DrawTransform",rt:$n[0].Void,p:[$n[4].Transform]},{a:2,n:"RemoveFlags",t:8,pi:[{n:"flags",pt:$n[2].DebugViewFlags,ps:0}],sn:"RemoveFlags",rt:$n[0].Void,p:[$n[2].DebugViewFlags]},{a:2,n:"Flags",t:16,rt:$n[2].DebugViewFlags,g:{a:2,n:"get_Flags",t:8,rt:$n[2].DebugViewFlags,fg:"Flags",box:function($v){return Bridge.box($v,FarseerPhysics.DebugViewFlags,System.Enum.toStringFn(FarseerPhysics.DebugViewFlags))}},s:{a:2,n:"set_Flags",t:8,p:[$n[2].DebugViewFlags],rt:$n[0].Void,fs:"Flags"},fn:"Flags"},{a:3,n:"World",t:16,rt:$n[3].World,g:{a:3,n:"get_World",t:8,rt:$n[3].World,fg:"World"},s:{a:1,n:"set_World",t:8,p:[$n[3].World],rt:$n[0].Void,fs:"World"},fn:"World"}]}},$n);$m("FarseerPhysics.Settings",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"MixFriction",is:!0,t:8,pi:[{n:"friction1",pt:$n[0].Single,ps:0},{n:"friction2",pt:$n[0].Single,ps:1}],sn:"MixFriction",rt:$n[0].Single,p:[$n[0].Single,$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"MixRestitution",is:!0,t:8,pi:[{n:"restitution1",pt:$n[0].Single,ps:0},{n:"restitution2",pt:$n[0].Single,ps:1}],sn:"MixRestitution",rt:$n[0].Single,p:[$n[0].Single,$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"AABBExtension",is:!0,t:4,rt:$n[0].Single,sn:"AABBExtension",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"AABBMultiplier",is:!0,t:4,rt:$n[0].Single,sn:"AABBMultiplier",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"AllCollisionCallbacksAgree",is:!0,t:4,rt:$n[0].Boolean,sn:"AllCollisionCallbacksAgree",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"AllowSleep",is:!0,t:4,rt:$n[0].Boolean,sn:"AllowSleep",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"AngularSleepTolerance",is:!0,t:4,rt:$n[0].Single,sn:"AngularSleepTolerance",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"AngularSlop",is:!0,t:4,rt:$n[0].Single,sn:"AngularSlop",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"AutoClearForces",is:!0,t:4,rt:$n[0].Boolean,sn:"AutoClearForces",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Baumgarte",is:!0,t:4,rt:$n[0].Single,sn:"Baumgarte",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"ContinuousPhysics",is:!0,t:4,rt:$n[0].Boolean,sn:"ContinuousPhysics",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"DefaultFixtureCollidesWith",is:!0,t:4,rt:$n[3].Category,sn:"DefaultFixtureCollidesWith",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"DefaultFixtureCollisionCategories",is:!0,t:4,rt:$n[3].Category,sn:"DefaultFixtureCollisionCategories",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"DefaultFixtureIgnoreCCDWith",is:!0,t:4,rt:$n[3].Category,sn:"DefaultFixtureIgnoreCCDWith",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"EnableDiagnostics",is:!0,t:4,rt:$n[0].Boolean,sn:"EnableDiagnostics",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"EnableSubStepping",is:!0,t:4,rt:$n[0].Boolean,sn:"EnableSubStepping",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"EnableWarmstarting",is:!0,t:4,rt:$n[0].Boolean,sn:"EnableWarmstarting",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Epsilon",is:!0,t:4,rt:$n[0].Single,sn:"Epsilon",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"LinearSleepTolerance",is:!0,t:4,rt:$n[0].Single,sn:"LinearSleepTolerance",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"LinearSlop",is:!0,t:4,rt:$n[0].Single,sn:"LinearSlop",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"MaxAngularCorrection",is:!0,t:4,rt:$n[0].Single,sn:"MaxAngularCorrection",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"MaxFloat",is:!0,t:4,rt:$n[0].Single,sn:"MaxFloat",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"MaxGJKIterations",is:!0,t:4,rt:$n[0].Int32,sn:"MaxGJKIterations",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"MaxLinearCorrection",is:!0,t:4,rt:$n[0].Single,sn:"MaxLinearCorrection",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"MaxManifoldPoints",is:!0,t:4,rt:$n[0].Int32,sn:"MaxManifoldPoints",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"MaxPolygonVertices",is:!0,t:4,rt:$n[0].Int32,sn:"MaxPolygonVertices",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"MaxRotation",is:!0,t:4,rt:$n[0].Single,sn:"MaxRotation",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"MaxRotationSquared",is:!0,t:4,rt:$n[0].Single,sn:"MaxRotationSquared",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"MaxSubSteps",is:!0,t:4,rt:$n[0].Int32,sn:"MaxSubSteps",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"MaxTOIContacts",is:!0,t:4,rt:$n[0].Int32,sn:"MaxTOIContacts",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"MaxTranslation",is:!0,t:4,rt:$n[0].Single,sn:"MaxTranslation",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"MaxTranslationSquared",is:!0,t:4,rt:$n[0].Single,sn:"MaxTranslationSquared",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Pi",is:!0,t:4,rt:$n[0].Single,sn:"Pi",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"PolygonRadius",is:!0,t:4,rt:$n[0].Single,sn:"PolygonRadius",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"PositionIterations",is:!0,t:4,rt:$n[0].Int32,sn:"PositionIterations",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"SkipSanityChecks",is:!0,t:4,rt:$n[0].Boolean,sn:"SkipSanityChecks",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"TOIPositionIterations",is:!0,t:4,rt:$n[0].Int32,sn:"TOIPositionIterations",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"TOIVelocityIterations",is:!0,t:4,rt:$n[0].Int32,sn:"TOIVelocityIterations",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"TimeToSleep",is:!0,t:4,rt:$n[0].Single,sn:"TimeToSleep",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"UseConvexHullPolygons",is:!0,t:4,rt:$n[0].Boolean,sn:"UseConvexHullPolygons",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"UseFPECollisionCategories",is:!0,t:4,rt:$n[0].Boolean,sn:"UseFPECollisionCategories",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"VelocityIterations",is:!0,t:4,rt:$n[0].Int32,sn:"VelocityIterations",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"VelocityThreshold",is:!0,t:4,rt:$n[0].Single,sn:"VelocityThreshold",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Factories.BodyFactory",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"CreateBody",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"position",dv:null,o:!0,pt:$n[1].Vector2,ps:1},{n:"rotation",dv:0,o:!0,pt:$n[0].Single,ps:2},{n:"bodyType",dv:0,o:!0,pt:$n[3].BodyType,ps:3},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:4}],sn:"CreateBody",rt:$n[3].Body,p:[$n[3].World,$n[1].Vector2,$n[0].Single,$n[3].BodyType,$n[0].Object]},{a:2,n:"CreateBreakableBody",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"shapes",pt:$n[5].IEnumerable$1(FarseerPhysics.Collision.Shapes.Shape),ps:1},{n:"position",dv:null,o:!0,pt:$n[1].Vector2,ps:2},{n:"rotation",dv:0,o:!0,pt:$n[0].Single,ps:3}],sn:"CreateBreakableBody$1",rt:$n[3].BreakableBody,p:[$n[3].World,$n[5].IEnumerable$1(FarseerPhysics.Collision.Shapes.Shape),$n[1].Vector2,$n[0].Single]},{a:2,n:"CreateBreakableBody",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"vertices",pt:$n[4].Vertices,ps:1},{n:"density",pt:$n[0].Single,ps:2},{n:"position",dv:null,o:!0,pt:$n[1].Vector2,ps:3},{n:"rotation",dv:0,o:!0,pt:$n[0].Single,ps:4}],sn:"CreateBreakableBody",rt:$n[3].BreakableBody,p:[$n[3].World,$n[4].Vertices,$n[0].Single,$n[1].Vector2,$n[0].Single]},{a:2,n:"CreateCapsule",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"height",pt:$n[0].Single,ps:1},{n:"endRadius",pt:$n[0].Single,ps:2},{n:"density",pt:$n[0].Single,ps:3},{n:"position",dv:null,o:!0,pt:$n[1].Vector2,ps:4},{n:"rotation",dv:0,o:!0,pt:$n[0].Single,ps:5},{n:"bodyType",dv:0,o:!0,pt:$n[3].BodyType,ps:6},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:7}],sn:"CreateCapsule$1",rt:$n[3].Body,p:[$n[3].World,$n[0].Single,$n[0].Single,$n[0].Single,$n[1].Vector2,$n[0].Single,$n[3].BodyType,$n[0].Object]},{a:2,n:"CreateCapsule",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"height",pt:$n[0].Single,ps:1},{n:"topRadius",pt:$n[0].Single,ps:2},{n:"topEdges",pt:$n[0].Int32,ps:3},{n:"bottomRadius",pt:$n[0].Single,ps:4},{n:"bottomEdges",pt:$n[0].Int32,ps:5},{n:"density",pt:$n[0].Single,ps:6},{n:"position",dv:null,o:!0,pt:$n[1].Vector2,ps:7},{n:"rotation",dv:0,o:!0,pt:$n[0].Single,ps:8},{n:"bodyType",dv:0,o:!0,pt:$n[3].BodyType,ps:9},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:10}],sn:"CreateCapsule",rt:$n[3].Body,p:[$n[3].World,$n[0].Single,$n[0].Single,$n[0].Int32,$n[0].Single,$n[0].Int32,$n[0].Single,$n[1].Vector2,$n[0].Single,$n[3].BodyType,$n[0].Object]},{a:2,n:"CreateChainShape",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"vertices",pt:$n[4].Vertices,ps:1},{n:"position",dv:null,o:!0,pt:$n[1].Vector2,ps:2},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:3}],sn:"CreateChainShape",rt:$n[3].Body,p:[$n[3].World,$n[4].Vertices,$n[1].Vector2,$n[0].Object]},{a:2,n:"CreateCircle",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"radius",pt:$n[0].Single,ps:1},{n:"density",pt:$n[0].Single,ps:2},{n:"position",dv:null,o:!0,pt:$n[1].Vector2,ps:3},{n:"bodyType",dv:0,o:!0,pt:$n[3].BodyType,ps:4},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:5}],sn:"CreateCircle",rt:$n[3].Body,p:[$n[3].World,$n[0].Single,$n[0].Single,$n[1].Vector2,$n[3].BodyType,$n[0].Object]},{a:2,n:"CreateCompoundPolygon",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"list",pt:$n[5].List$1(FarseerPhysics.Common.Vertices),ps:1},{n:"density",pt:$n[0].Single,ps:2},{n:"position",dv:null,o:!0,pt:$n[1].Vector2,ps:3},{n:"rotation",dv:0,o:!0,pt:$n[0].Single,ps:4},{n:"bodyType",dv:0,o:!0,pt:$n[3].BodyType,ps:5},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:6}],sn:"CreateCompoundPolygon",rt:$n[3].Body,p:[$n[3].World,$n[5].List$1(FarseerPhysics.Common.Vertices),$n[0].Single,$n[1].Vector2,$n[0].Single,$n[3].BodyType,$n[0].Object]},{a:2,n:"CreateEdge",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"start",pt:$n[1].Vector2,ps:1},{n:"end",pt:$n[1].Vector2,ps:2},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:3}],sn:"CreateEdge",rt:$n[3].Body,p:[$n[3].World,$n[1].Vector2,$n[1].Vector2,$n[0].Object]},{a:2,n:"CreateEllipse",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"xRadius",pt:$n[0].Single,ps:1},{n:"yRadius",pt:$n[0].Single,ps:2},{n:"edges",pt:$n[0].Int32,ps:3},{n:"density",pt:$n[0].Single,ps:4},{n:"position",dv:null,o:!0,pt:$n[1].Vector2,ps:5},{n:"rotation",dv:0,o:!0,pt:$n[0].Single,ps:6},{n:"bodyType",dv:0,o:!0,pt:$n[3].BodyType,ps:7},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:8}],sn:"CreateEllipse",rt:$n[3].Body,p:[$n[3].World,$n[0].Single,$n[0].Single,$n[0].Int32,$n[0].Single,$n[1].Vector2,$n[0].Single,$n[3].BodyType,$n[0].Object]},{a:2,n:"CreateGear",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"radius",pt:$n[0].Single,ps:1},{n:"numberOfTeeth",pt:$n[0].Int32,ps:2},{n:"tipPercentage",pt:$n[0].Single,ps:3},{n:"toothHeight",pt:$n[0].Single,ps:4},{n:"density",pt:$n[0].Single,ps:5},{n:"position",dv:null,o:!0,pt:$n[1].Vector2,ps:6},{n:"rotation",dv:0,o:!0,pt:$n[0].Single,ps:7},{n:"bodyType",dv:0,o:!0,pt:$n[3].BodyType,ps:8},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:9}],sn:"CreateGear",rt:$n[3].Body,p:[$n[3].World,$n[0].Single,$n[0].Int32,$n[0].Single,$n[0].Single,$n[0].Single,$n[1].Vector2,$n[0].Single,$n[3].BodyType,$n[0].Object]},{a:2,n:"CreateLineArc",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"radians",pt:$n[0].Single,ps:1},{n:"sides",pt:$n[0].Int32,ps:2},{n:"radius",pt:$n[0].Single,ps:3},{n:"closed",dv:!1,o:!0,pt:$n[0].Boolean,ps:4},{n:"position",dv:null,o:!0,pt:$n[1].Vector2,ps:5},{n:"rotation",dv:0,o:!0,pt:$n[0].Single,ps:6},{n:"bodyType",dv:0,o:!0,pt:$n[3].BodyType,ps:7}],sn:"CreateLineArc",rt:$n[3].Body,p:[$n[3].World,$n[0].Single,$n[0].Int32,$n[0].Single,$n[0].Boolean,$n[1].Vector2,$n[0].Single,$n[3].BodyType]},{a:2,n:"CreateLoopShape",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"vertices",pt:$n[4].Vertices,ps:1},{n:"position",dv:null,o:!0,pt:$n[1].Vector2,ps:2},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:3}],sn:"CreateLoopShape",rt:$n[3].Body,p:[$n[3].World,$n[4].Vertices,$n[1].Vector2,$n[0].Object]},{a:2,n:"CreatePolygon",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"vertices",pt:$n[4].Vertices,ps:1},{n:"density",pt:$n[0].Single,ps:2},{n:"position",dv:null,o:!0,pt:$n[1].Vector2,ps:3},{n:"rotation",dv:0,o:!0,pt:$n[0].Single,ps:4},{n:"bodyType",dv:0,o:!0,pt:$n[3].BodyType,ps:5},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:6}],sn:"CreatePolygon",rt:$n[3].Body,p:[$n[3].World,$n[4].Vertices,$n[0].Single,$n[1].Vector2,$n[0].Single,$n[3].BodyType,$n[0].Object]},{a:2,n:"CreateRectangle",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"width",pt:$n[0].Single,ps:1},{n:"height",pt:$n[0].Single,ps:2},{n:"density",pt:$n[0].Single,ps:3},{n:"position",dv:null,o:!0,pt:$n[1].Vector2,ps:4},{n:"rotation",dv:0,o:!0,pt:$n[0].Single,ps:5},{n:"bodyType",dv:0,o:!0,pt:$n[3].BodyType,ps:6},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:7}],sn:"CreateRectangle",rt:$n[3].Body,p:[$n[3].World,$n[0].Single,$n[0].Single,$n[0].Single,$n[1].Vector2,$n[0].Single,$n[3].BodyType,$n[0].Object]},{a:2,n:"CreateRoundedRectangle",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"width",pt:$n[0].Single,ps:1},{n:"height",pt:$n[0].Single,ps:2},{n:"xRadius",pt:$n[0].Single,ps:3},{n:"yRadius",pt:$n[0].Single,ps:4},{n:"segments",pt:$n[0].Int32,ps:5},{n:"density",pt:$n[0].Single,ps:6},{n:"position",dv:null,o:!0,pt:$n[1].Vector2,ps:7},{n:"rotation",dv:0,o:!0,pt:$n[0].Single,ps:8},{n:"bodyType",dv:0,o:!0,pt:$n[3].BodyType,ps:9},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:10}],sn:"CreateRoundedRectangle",rt:$n[3].Body,p:[$n[3].World,$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Int32,$n[0].Single,$n[1].Vector2,$n[0].Single,$n[3].BodyType,$n[0].Object]},{a:2,n:"CreateSolidArc",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"density",pt:$n[0].Single,ps:1},{n:"radians",pt:$n[0].Single,ps:2},{n:"sides",pt:$n[0].Int32,ps:3},{n:"radius",pt:$n[0].Single,ps:4},{n:"position",dv:null,o:!0,pt:$n[1].Vector2,ps:5},{n:"rotation",dv:0,o:!0,pt:$n[0].Single,ps:6},{n:"bodyType",dv:0,o:!0,pt:$n[3].BodyType,ps:7}],sn:"CreateSolidArc",rt:$n[3].Body,p:[$n[3].World,$n[0].Single,$n[0].Single,$n[0].Int32,$n[0].Single,$n[1].Vector2,$n[0].Single,$n[3].BodyType]}]}},$n);$m("FarseerPhysics.Factories.FixtureFactory",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"AttachChainShape",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0},{n:"body",pt:$n[3].Body,ps:1},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:2}],sn:"AttachChainShape",rt:$n[3].Fixture,p:[$n[4].Vertices,$n[3].Body,$n[0].Object]},{a:2,n:"AttachCircle",is:!0,t:8,pi:[{n:"radius",pt:$n[0].Single,ps:0},{n:"density",pt:$n[0].Single,ps:1},{n:"body",pt:$n[3].Body,ps:2},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:3}],sn:"AttachCircle$1",rt:$n[3].Fixture,p:[$n[0].Single,$n[0].Single,$n[3].Body,$n[0].Object]},{a:2,n:"AttachCircle",is:!0,t:8,pi:[{n:"radius",pt:$n[0].Single,ps:0},{n:"density",pt:$n[0].Single,ps:1},{n:"body",pt:$n[3].Body,ps:2},{n:"offset",pt:$n[1].Vector2,ps:3},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:4}],sn:"AttachCircle",rt:$n[3].Fixture,p:[$n[0].Single,$n[0].Single,$n[3].Body,$n[1].Vector2,$n[0].Object]},{a:2,n:"AttachCompoundPolygon",is:!0,t:8,pi:[{n:"list",pt:$n[5].List$1(FarseerPhysics.Common.Vertices),ps:0},{n:"density",pt:$n[0].Single,ps:1},{n:"body",pt:$n[3].Body,ps:2},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:3}],sn:"AttachCompoundPolygon",rt:$n[5].List$1(FarseerPhysics.Dynamics.Fixture),p:[$n[5].List$1(FarseerPhysics.Common.Vertices),$n[0].Single,$n[3].Body,$n[0].Object]},{a:2,n:"AttachEdge",is:!0,t:8,pi:[{n:"start",pt:$n[1].Vector2,ps:0},{n:"end",pt:$n[1].Vector2,ps:1},{n:"body",pt:$n[3].Body,ps:2},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:3}],sn:"AttachEdge",rt:$n[3].Fixture,p:[$n[1].Vector2,$n[1].Vector2,$n[3].Body,$n[0].Object]},{a:2,n:"AttachEllipse",is:!0,t:8,pi:[{n:"xRadius",pt:$n[0].Single,ps:0},{n:"yRadius",pt:$n[0].Single,ps:1},{n:"edges",pt:$n[0].Int32,ps:2},{n:"density",pt:$n[0].Single,ps:3},{n:"body",pt:$n[3].Body,ps:4},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:5}],sn:"AttachEllipse",rt:$n[3].Fixture,p:[$n[0].Single,$n[0].Single,$n[0].Int32,$n[0].Single,$n[3].Body,$n[0].Object]},{a:2,n:"AttachLineArc",is:!0,t:8,pi:[{n:"radians",pt:$n[0].Single,ps:0},{n:"sides",pt:$n[0].Int32,ps:1},{n:"radius",pt:$n[0].Single,ps:2},{n:"closed",pt:$n[0].Boolean,ps:3},{n:"body",pt:$n[3].Body,ps:4}],sn:"AttachLineArc",rt:$n[3].Fixture,p:[$n[0].Single,$n[0].Int32,$n[0].Single,$n[0].Boolean,$n[3].Body]},{a:2,n:"AttachLoopShape",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0},{n:"body",pt:$n[3].Body,ps:1},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:2}],sn:"AttachLoopShape",rt:$n[3].Fixture,p:[$n[4].Vertices,$n[3].Body,$n[0].Object]},{a:2,n:"AttachPolygon",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0},{n:"density",pt:$n[0].Single,ps:1},{n:"body",pt:$n[3].Body,ps:2},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:3}],sn:"AttachPolygon",rt:$n[3].Fixture,p:[$n[4].Vertices,$n[0].Single,$n[3].Body,$n[0].Object]},{a:2,n:"AttachRectangle",is:!0,t:8,pi:[{n:"width",pt:$n[0].Single,ps:0},{n:"height",pt:$n[0].Single,ps:1},{n:"density",pt:$n[0].Single,ps:2},{n:"offset",pt:$n[1].Vector2,ps:3},{n:"body",pt:$n[3].Body,ps:4},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:5}],sn:"AttachRectangle",rt:$n[3].Fixture,p:[$n[0].Single,$n[0].Single,$n[0].Single,$n[1].Vector2,$n[3].Body,$n[0].Object]},{a:2,n:"AttachSolidArc",is:!0,t:8,pi:[{n:"density",pt:$n[0].Single,ps:0},{n:"radians",pt:$n[0].Single,ps:1},{n:"sides",pt:$n[0].Int32,ps:2},{n:"radius",pt:$n[0].Single,ps:3},{n:"body",pt:$n[3].Body,ps:4}],sn:"AttachSolidArc",rt:$n[5].List$1(FarseerPhysics.Dynamics.Fixture),p:[$n[0].Single,$n[0].Single,$n[0].Int32,$n[0].Single,$n[3].Body]}]}},$n);$m("FarseerPhysics.Factories.JointFactory",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"CreateAngleJoint",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"bodyA",pt:$n[3].Body,ps:1},{n:"bodyB",pt:$n[3].Body,ps:2}],sn:"CreateAngleJoint",rt:$n[6].AngleJoint,p:[$n[3].World,$n[3].Body,$n[3].Body]},{a:2,n:"CreateDistanceJoint",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"bodyA",pt:$n[3].Body,ps:1},{n:"bodyB",pt:$n[3].Body,ps:2}],sn:"CreateDistanceJoint",rt:$n[6].DistanceJoint,p:[$n[3].World,$n[3].Body,$n[3].Body]},{a:2,n:"CreateDistanceJoint",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"bodyA",pt:$n[3].Body,ps:1},{n:"bodyB",pt:$n[3].Body,ps:2},{n:"anchorA",pt:$n[1].Vector2,ps:3},{n:"anchorB",pt:$n[1].Vector2,ps:4},{n:"useWorldCoordinates",dv:!1,o:!0,pt:$n[0].Boolean,ps:5}],sn:"CreateDistanceJoint$1",rt:$n[6].DistanceJoint,p:[$n[3].World,$n[3].Body,$n[3].Body,$n[1].Vector2,$n[1].Vector2,$n[0].Boolean]},{a:2,n:"CreateFixedMouseJoint",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"body",pt:$n[3].Body,ps:1},{n:"worldAnchor",pt:$n[1].Vector2,ps:2}],sn:"CreateFixedMouseJoint",rt:$n[6].FixedMouseJoint,p:[$n[3].World,$n[3].Body,$n[1].Vector2]},{a:2,n:"CreateFrictionJoint",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"bodyA",pt:$n[3].Body,ps:1},{n:"bodyB",pt:$n[3].Body,ps:2}],sn:"CreateFrictionJoint",rt:$n[6].FrictionJoint,p:[$n[3].World,$n[3].Body,$n[3].Body]},{a:2,n:"CreateFrictionJoint",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"bodyA",pt:$n[3].Body,ps:1},{n:"bodyB",pt:$n[3].Body,ps:2},{n:"anchor",pt:$n[1].Vector2,ps:3},{n:"useWorldCoordinates",dv:!1,o:!0,pt:$n[0].Boolean,ps:4}],sn:"CreateFrictionJoint$1",rt:$n[6].FrictionJoint,p:[$n[3].World,$n[3].Body,$n[3].Body,$n[1].Vector2,$n[0].Boolean]},{a:2,n:"CreateGearJoint",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"bodyA",pt:$n[3].Body,ps:1},{n:"bodyB",pt:$n[3].Body,ps:2},{n:"jointA",pt:$n[6].Joint,ps:3},{n:"jointB",pt:$n[6].Joint,ps:4},{n:"ratio",pt:$n[0].Single,ps:5}],sn:"CreateGearJoint",rt:$n[6].GearJoint,p:[$n[3].World,$n[3].Body,$n[3].Body,$n[6].Joint,$n[6].Joint,$n[0].Single]},{a:2,n:"CreateMotorJoint",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"bodyA",pt:$n[3].Body,ps:1},{n:"bodyB",pt:$n[3].Body,ps:2},{n:"useWorldCoordinates",dv:!1,o:!0,pt:$n[0].Boolean,ps:3}],sn:"CreateMotorJoint",rt:$n[6].MotorJoint,p:[$n[3].World,$n[3].Body,$n[3].Body,$n[0].Boolean]},{a:2,n:"CreatePrismaticJoint",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"bodyA",pt:$n[3].Body,ps:1},{n:"bodyB",pt:$n[3].Body,ps:2},{n:"anchor",pt:$n[1].Vector2,ps:3},{n:"axis",pt:$n[1].Vector2,ps:4},{n:"useWorldCoordinates",dv:!1,o:!0,pt:$n[0].Boolean,ps:5}],sn:"CreatePrismaticJoint",rt:$n[6].PrismaticJoint,p:[$n[3].World,$n[3].Body,$n[3].Body,$n[1].Vector2,$n[1].Vector2,$n[0].Boolean]},{a:2,n:"CreatePulleyJoint",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"bodyA",pt:$n[3].Body,ps:1},{n:"bodyB",pt:$n[3].Body,ps:2},{n:"anchorA",pt:$n[1].Vector2,ps:3},{n:"anchorB",pt:$n[1].Vector2,ps:4},{n:"worldAnchorA",pt:$n[1].Vector2,ps:5},{n:"worldAnchorB",pt:$n[1].Vector2,ps:6},{n:"ratio",pt:$n[0].Single,ps:7},{n:"useWorldCoordinates",dv:!1,o:!0,pt:$n[0].Boolean,ps:8}],sn:"CreatePulleyJoint",rt:$n[6].PulleyJoint,p:[$n[3].World,$n[3].Body,$n[3].Body,$n[1].Vector2,$n[1].Vector2,$n[1].Vector2,$n[1].Vector2,$n[0].Single,$n[0].Boolean]},{a:2,n:"CreateRevoluteJoint",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"bodyA",pt:$n[3].Body,ps:1},{n:"bodyB",pt:$n[3].Body,ps:2},{n:"anchor",pt:$n[1].Vector2,ps:3}],sn:"CreateRevoluteJoint",rt:$n[6].RevoluteJoint,p:[$n[3].World,$n[3].Body,$n[3].Body,$n[1].Vector2]},{a:2,n:"CreateRevoluteJoint",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"bodyA",pt:$n[3].Body,ps:1},{n:"bodyB",pt:$n[3].Body,ps:2},{n:"anchorA",pt:$n[1].Vector2,ps:3},{n:"anchorB",pt:$n[1].Vector2,ps:4},{n:"useWorldCoordinates",dv:!1,o:!0,pt:$n[0].Boolean,ps:5}],sn:"CreateRevoluteJoint$1",rt:$n[6].RevoluteJoint,p:[$n[3].World,$n[3].Body,$n[3].Body,$n[1].Vector2,$n[1].Vector2,$n[0].Boolean]},{a:2,n:"CreateRopeJoint",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"bodyA",pt:$n[3].Body,ps:1},{n:"bodyB",pt:$n[3].Body,ps:2},{n:"anchorA",pt:$n[1].Vector2,ps:3},{n:"anchorB",pt:$n[1].Vector2,ps:4},{n:"useWorldCoordinates",dv:!1,o:!0,pt:$n[0].Boolean,ps:5}],sn:"CreateRopeJoint",rt:$n[6].RopeJoint,p:[$n[3].World,$n[3].Body,$n[3].Body,$n[1].Vector2,$n[1].Vector2,$n[0].Boolean]},{a:2,n:"CreateWeldJoint",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"bodyA",pt:$n[3].Body,ps:1},{n:"bodyB",pt:$n[3].Body,ps:2},{n:"anchorA",pt:$n[1].Vector2,ps:3},{n:"anchorB",pt:$n[1].Vector2,ps:4},{n:"useWorldCoordinates",dv:!1,o:!0,pt:$n[0].Boolean,ps:5}],sn:"CreateWeldJoint",rt:$n[6].WeldJoint,p:[$n[3].World,$n[3].Body,$n[3].Body,$n[1].Vector2,$n[1].Vector2,$n[0].Boolean]},{a:2,n:"CreateWheelJoint",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"bodyA",pt:$n[3].Body,ps:1},{n:"bodyB",pt:$n[3].Body,ps:2},{n:"axis",pt:$n[1].Vector2,ps:3}],sn:"CreateWheelJoint",rt:$n[6].WheelJoint,p:[$n[3].World,$n[3].Body,$n[3].Body,$n[1].Vector2]},{a:2,n:"CreateWheelJoint",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"bodyA",pt:$n[3].Body,ps:1},{n:"bodyB",pt:$n[3].Body,ps:2},{n:"anchor",pt:$n[1].Vector2,ps:3},{n:"axis",pt:$n[1].Vector2,ps:4},{n:"useWorldCoordinates",dv:!1,o:!0,pt:$n[0].Boolean,ps:5}],sn:"CreateWheelJoint$1",rt:$n[6].WheelJoint,p:[$n[3].World,$n[3].Body,$n[3].Body,$n[1].Vector2,$n[1].Vector2,$n[0].Boolean]}]}},$n);$m("FarseerPhysics.Factories.LinkFactory",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"CreateChain",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"start",pt:$n[1].Vector2,ps:1},{n:"end",pt:$n[1].Vector2,ps:2},{n:"linkWidth",pt:$n[0].Single,ps:3},{n:"linkHeight",pt:$n[0].Single,ps:4},{n:"numberOfLinks",pt:$n[0].Int32,ps:5},{n:"linkDensity",pt:$n[0].Single,ps:6},{n:"attachRopeJoint",pt:$n[0].Boolean,ps:7}],sn:"CreateChain",rt:$n[4].Path,p:[$n[3].World,$n[1].Vector2,$n[1].Vector2,$n[0].Single,$n[0].Single,$n[0].Int32,$n[0].Single,$n[0].Boolean]}]}},$n);$m("FarseerPhysics.Dynamics.BodyType",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Dynamic",is:!0,t:4,rt:$n[3].BodyType,sn:"Dynamic",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.BodyType,System.Enum.toStringFn(FarseerPhysics.Dynamics.BodyType))}},{a:2,n:"Kinematic",is:!0,t:4,rt:$n[3].BodyType,sn:"Kinematic",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.BodyType,System.Enum.toStringFn(FarseerPhysics.Dynamics.BodyType))}},{a:2,n:"Static",is:!0,t:4,rt:$n[3].BodyType,sn:"Static",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.BodyType,System.Enum.toStringFn(FarseerPhysics.Dynamics.BodyType))}}]}},$n);$m("FarseerPhysics.Dynamics.Body",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[3].World,$n[1].Vector2,$n[0].Single,$n[3].BodyType,$n[0].Object],pi:[{n:"world",pt:$n[3].World,ps:0},{n:"position",dv:null,o:!0,pt:$n[1].Vector2,ps:1},{n:"rotation",dv:0,o:!0,pt:$n[0].Single,ps:2},{n:"bodyType",dv:0,o:!0,pt:$n[3].BodyType,ps:3},{n:"userdata",dv:null,o:!0,pt:$n[0].Object,ps:4}],sn:"ctor"},{a:4,n:"Advance",t:8,pi:[{n:"alpha",pt:$n[0].Single,ps:0}],sn:"Advance",rt:$n[0].Void,p:[$n[0].Single]},{a:2,n:"ApplyAngularImpulse",t:8,pi:[{n:"impulse",pt:$n[0].Single,ps:0}],sn:"ApplyAngularImpulse",rt:$n[0].Void,p:[$n[0].Single]},{a:2,n:"ApplyForce",t:8,pi:[{n:"force",pt:$n[1].Vector2,ps:0}],sn:"ApplyForce",rt:$n[0].Void,p:[$n[1].Vector2]},{a:2,n:"ApplyForce",t:8,pi:[{n:"force",ref:!0,pt:$n[1].Vector2,ps:0}],sn:"ApplyForce$2",rt:$n[0].Void,p:[$n[1].Vector2]},{a:2,n:"ApplyForce",t:8,pi:[{n:"force",ref:!0,pt:$n[1].Vector2,ps:0},{n:"point",ref:!0,pt:$n[1].Vector2,ps:1}],sn:"ApplyForce$3",rt:$n[0].Void,p:[$n[1].Vector2,$n[1].Vector2]},{a:2,n:"ApplyForce",t:8,pi:[{n:"force",pt:$n[1].Vector2,ps:0},{n:"point",pt:$n[1].Vector2,ps:1}],sn:"ApplyForce$1",rt:$n[0].Void,p:[$n[1].Vector2,$n[1].Vector2]},{a:2,n:"ApplyLinearImpulse",t:8,pi:[{n:"impulse",pt:$n[1].Vector2,ps:0}],sn:"ApplyLinearImpulse",rt:$n[0].Void,p:[$n[1].Vector2]},{a:2,n:"ApplyLinearImpulse",t:8,pi:[{n:"impulse",ref:!0,pt:$n[1].Vector2,ps:0}],sn:"ApplyLinearImpulse$2",rt:$n[0].Void,p:[$n[1].Vector2]},{a:2,n:"ApplyLinearImpulse",t:8,pi:[{n:"impulse",ref:!0,pt:$n[1].Vector2,ps:0},{n:"point",ref:!0,pt:$n[1].Vector2,ps:1}],sn:"ApplyLinearImpulse$3",rt:$n[0].Void,p:[$n[1].Vector2,$n[1].Vector2]},{a:2,n:"ApplyLinearImpulse",t:8,pi:[{n:"impulse",pt:$n[1].Vector2,ps:0},{n:"point",pt:$n[1].Vector2,ps:1}],sn:"ApplyLinearImpulse$1",rt:$n[0].Void,p:[$n[1].Vector2,$n[1].Vector2]},{a:2,n:"ApplyTorque",t:8,pi:[{n:"torque",pt:$n[0].Single,ps:0}],sn:"ApplyTorque",rt:$n[0].Void,p:[$n[0].Single]},{a:2,n:"Clone",t:8,pi:[{n:"world",dv:null,o:!0,pt:$n[3].World,ps:0}],sn:"Clone",rt:$n[3].Body,p:[$n[3].World]},{a:2,n:"CreateFixture",t:8,pi:[{n:"shape",pt:$n[7].Shape,ps:0},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:1}],sn:"CreateFixture",rt:$n[3].Fixture,p:[$n[7].Shape,$n[0].Object]},{a:2,n:"DeepClone",t:8,pi:[{n:"world",dv:null,o:!0,pt:$n[3].World,ps:0}],sn:"DeepClone",rt:$n[3].Body,p:[$n[3].World]},{a:2,n:"DestroyFixture",t:8,pi:[{n:"fixture",pt:$n[3].Fixture,ps:0}],sn:"DestroyFixture",rt:$n[0].Void,p:[$n[3].Fixture]},{a:2,n:"Dispose",t:8,sn:"Dispose",rt:$n[0].Void},{a:2,n:"GetLinearVelocityFromLocalPoint",t:8,pi:[{n:"localPoint",pt:$n[1].Vector2,ps:0}],sn:"GetLinearVelocityFromLocalPoint",rt:$n[1].Vector2,p:[$n[1].Vector2]},{a:2,n:"GetLinearVelocityFromLocalPoint",t:8,pi:[{n:"localPoint",ref:!0,pt:$n[1].Vector2,ps:0}],sn:"GetLinearVelocityFromLocalPoint$1",rt:$n[1].Vector2,p:[$n[1].Vector2]},{a:2,n:"GetLinearVelocityFromWorldPoint",t:8,pi:[{n:"worldPoint",pt:$n[1].Vector2,ps:0}],sn:"GetLinearVelocityFromWorldPoint",rt:$n[1].Vector2,p:[$n[1].Vector2]},{a:2,n:"GetLinearVelocityFromWorldPoint",t:8,pi:[{n:"worldPoint",ref:!0,pt:$n[1].Vector2,ps:0}],sn:"GetLinearVelocityFromWorldPoint$1",rt:$n[1].Vector2,p:[$n[1].Vector2]},{a:2,n:"GetLocalPoint",t:8,pi:[{n:"worldPoint",pt:$n[1].Vector2,ps:0}],sn:"GetLocalPoint",rt:$n[1].Vector2,p:[$n[1].Vector2]},{a:2,n:"GetLocalPoint",t:8,pi:[{n:"worldPoint",ref:!0,pt:$n[1].Vector2,ps:0}],sn:"GetLocalPoint$1",rt:$n[1].Vector2,p:[$n[1].Vector2]},{a:2,n:"GetLocalVector",t:8,pi:[{n:"worldVector",pt:$n[1].Vector2,ps:0}],sn:"GetLocalVector",rt:$n[1].Vector2,p:[$n[1].Vector2]},{a:2,n:"GetLocalVector",t:8,pi:[{n:"worldVector",ref:!0,pt:$n[1].Vector2,ps:0}],sn:"GetLocalVector$1",rt:$n[1].Vector2,p:[$n[1].Vector2]},{a:2,n:"GetTransform",t:8,pi:[{n:"transform",out:!0,pt:$n[4].Transform,ps:0}],sn:"GetTransform",rt:$n[0].Void,p:[$n[4].Transform]},{a:2,n:"GetWorldPoint",t:8,pi:[{n:"localPoint",pt:$n[1].Vector2,ps:0}],sn:"GetWorldPoint",rt:$n[1].Vector2,p:[$n[1].Vector2]},{a:2,n:"GetWorldPoint",t:8,pi:[{n:"localPoint",ref:!0,pt:$n[1].Vector2,ps:0}],sn:"GetWorldPoint$1",rt:$n[1].Vector2,p:[$n[1].Vector2]},{a:2,n:"GetWorldVector",t:8,pi:[{n:"localVector",pt:$n[1].Vector2,ps:0}],sn:"GetWorldVector",rt:$n[1].Vector2,p:[$n[1].Vector2]},{a:2,n:"GetWorldVector",t:8,pi:[{n:"localVector",ref:!0,pt:$n[1].Vector2,ps:0}],sn:"GetWorldVector$1",rt:$n[1].Vector2,p:[$n[1].Vector2]},{a:2,n:"IgnoreCollisionWith",t:8,pi:[{n:"other",pt:$n[3].Body,ps:0}],sn:"IgnoreCollisionWith",rt:$n[0].Void,p:[$n[3].Body]},{a:2,n:"ResetDynamics",t:8,sn:"ResetDynamics",rt:$n[0].Void},{a:2,n:"ResetMassData",t:8,sn:"ResetMassData",rt:$n[0].Void},{a:2,n:"RestoreCollisionWith",t:8,pi:[{n:"other",pt:$n[3].Body,ps:0}],sn:"RestoreCollisionWith",rt:$n[0].Void,p:[$n[3].Body]},{a:2,n:"SetTransform",t:8,pi:[{n:"position",ref:!0,pt:$n[1].Vector2,ps:0},{n:"rotation",pt:$n[0].Single,ps:1}],sn:"SetTransform$1",rt:$n[0].Void,p:[$n[1].Vector2,$n[0].Single]},{a:2,n:"SetTransform",t:8,pi:[{n:"position",pt:$n[1].Vector2,ps:0},{n:"rotation",pt:$n[0].Single,ps:1}],sn:"SetTransform",rt:$n[0].Void,p:[$n[1].Vector2,$n[0].Single]},{a:2,n:"SetTransformIgnoreContacts",t:8,pi:[{n:"position",ref:!0,pt:$n[1].Vector2,ps:0},{n:"angle",pt:$n[0].Single,ps:1}],sn:"SetTransformIgnoreContacts",rt:$n[0].Void,p:[$n[1].Vector2,$n[0].Single]},{a:4,n:"ShouldCollide",t:8,pi:[{n:"other",pt:$n[3].Body,ps:0}],sn:"ShouldCollide",rt:$n[0].Boolean,p:[$n[3].Body],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:4,n:"SynchronizeFixtures",t:8,sn:"SynchronizeFixtures",rt:$n[0].Void},{a:4,n:"SynchronizeTransform",t:8,sn:"SynchronizeTransform",rt:$n[0].Void},{a:2,n:"AngularDamping",t:16,rt:$n[0].Single,g:{a:2,n:"get_AngularDamping",t:8,rt:$n[0].Single,fg:"AngularDamping",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_AngularDamping",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"AngularDamping"},fn:"AngularDamping"},{a:2,n:"AngularVelocity",t:16,rt:$n[0].Single,g:{a:2,n:"get_AngularVelocity",t:8,rt:$n[0].Single,fg:"AngularVelocity",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_AngularVelocity",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"AngularVelocity"},fn:"AngularVelocity"},{a:2,n:"Awake",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_Awake",t:8,rt:$n[0].Boolean,fg:"Awake",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_Awake",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"Awake"},fn:"Awake"},{a:2,n:"BodyId",t:16,rt:$n[0].Int32,g:{a:2,n:"get_BodyId",t:8,rt:$n[0].Int32,fg:"BodyId",box:function($v){return Bridge.box($v,System.Int32)}},s:{a:1,n:"set_BodyId",t:8,p:[$n[0].Int32],rt:$n[0].Void,fs:"BodyId"},fn:"BodyId"},{a:2,n:"BodyType",t:16,rt:$n[3].BodyType,g:{a:2,n:"get_BodyType",t:8,rt:$n[3].BodyType,fg:"BodyType",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.BodyType,System.Enum.toStringFn(FarseerPhysics.Dynamics.BodyType))}},s:{a:2,n:"set_BodyType",t:8,p:[$n[3].BodyType],rt:$n[0].Void,fs:"BodyType"},fn:"BodyType"},{a:2,n:"CollidesWith",t:16,rt:$n[3].Category,s:{a:2,n:"set_CollidesWith",t:8,p:[$n[3].Category],rt:$n[0].Void,fs:"CollidesWith"},fn:"CollidesWith"},{a:2,n:"CollisionCategories",t:16,rt:$n[3].Category,s:{a:2,n:"set_CollisionCategories",t:8,p:[$n[3].Category],rt:$n[0].Void,fs:"CollisionCategories"},fn:"CollisionCategories"},{a:2,n:"CollisionGroup",t:16,rt:$n[0].Int16,s:{a:2,n:"set_CollisionGroup",t:8,p:[$n[0].Int16],rt:$n[0].Void,fs:"CollisionGroup"},fn:"CollisionGroup"},{a:2,n:"ContactList",t:16,rt:$n[8].ContactEdge,g:{a:2,n:"get_ContactList",t:8,rt:$n[8].ContactEdge,fg:"ContactList"},s:{a:4,n:"set_ContactList",t:8,p:[$n[8].ContactEdge],rt:$n[0].Void,fs:"ContactList"},fn:"ContactList"},{a:2,n:"Enabled",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_Enabled",t:8,rt:$n[0].Boolean,fg:"Enabled",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_Enabled",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"Enabled"},fn:"Enabled"},{a:2,n:"FixedRotation",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_FixedRotation",t:8,rt:$n[0].Boolean,fg:"FixedRotation",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_FixedRotation",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"FixedRotation"},fn:"FixedRotation"},{a:2,n:"FixtureList",t:16,rt:$n[5].List$1(FarseerPhysics.Dynamics.Fixture),g:{a:2,n:"get_FixtureList",t:8,rt:$n[5].List$1(FarseerPhysics.Dynamics.Fixture),fg:"FixtureList"},s:{a:4,n:"set_FixtureList",t:8,p:[$n[5].List$1(FarseerPhysics.Dynamics.Fixture)],rt:$n[0].Void,fs:"FixtureList"},fn:"FixtureList"},{a:2,n:"Friction",t:16,rt:$n[0].Single,g:{a:2,n:"get_Friction",t:8,rt:$n[0].Single,fg:"Friction",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Friction",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Friction"},fn:"Friction"},{a:2,n:"GravityScale",t:16,rt:$n[0].Single,g:{a:2,n:"get_GravityScale",t:8,rt:$n[0].Single,fg:"GravityScale",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_GravityScale",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"GravityScale"},fn:"GravityScale"},{a:2,n:"IgnoreCCD",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_IgnoreCCD",t:8,rt:$n[0].Boolean,fg:"IgnoreCCD",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_IgnoreCCD",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"IgnoreCCD"},fn:"IgnoreCCD"},{a:2,n:"IgnoreCCDWith",t:16,rt:$n[3].Category,s:{a:2,n:"set_IgnoreCCDWith",t:8,p:[$n[3].Category],rt:$n[0].Void,fs:"IgnoreCCDWith"},fn:"IgnoreCCDWith"},{a:2,n:"IgnoreGravity",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_IgnoreGravity",t:8,rt:$n[0].Boolean,fg:"IgnoreGravity",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_IgnoreGravity",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"IgnoreGravity"},fn:"IgnoreGravity"},{a:2,n:"Inertia",t:16,rt:$n[0].Single,g:{a:2,n:"get_Inertia",t:8,rt:$n[0].Single,fg:"Inertia",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Inertia",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Inertia"},fn:"Inertia"},{a:2,n:"IsBullet",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_IsBullet",t:8,rt:$n[0].Boolean,fg:"IsBullet",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_IsBullet",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"IsBullet"},fn:"IsBullet"},{a:2,n:"IsDisposed",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_IsDisposed",t:8,rt:$n[0].Boolean,fg:"IsDisposed",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_IsDisposed",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"IsDisposed"},fn:"IsDisposed"},{a:2,n:"IsKinematic",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_IsKinematic",t:8,rt:$n[0].Boolean,fg:"IsKinematic",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_IsKinematic",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"IsKinematic"},fn:"IsKinematic"},{a:2,n:"IsSensor",t:16,rt:$n[0].Boolean,s:{a:2,n:"set_IsSensor",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"IsSensor"},fn:"IsSensor"},{a:2,n:"IsStatic",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_IsStatic",t:8,rt:$n[0].Boolean,fg:"IsStatic",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_IsStatic",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"IsStatic"},fn:"IsStatic"},{a:2,n:"IslandIndex",t:16,rt:$n[0].Int32,g:{a:2,n:"get_IslandIndex",t:8,rt:$n[0].Int32,fg:"IslandIndex",box:function($v){return Bridge.box($v,System.Int32)}},s:{a:2,n:"set_IslandIndex",t:8,p:[$n[0].Int32],rt:$n[0].Void,fs:"IslandIndex"},fn:"IslandIndex"},{a:2,n:"JointList",t:16,rt:$n[6].JointEdge,g:{a:2,n:"get_JointList",t:8,rt:$n[6].JointEdge,fg:"JointList"},s:{a:4,n:"set_JointList",t:8,p:[$n[6].JointEdge],rt:$n[0].Void,fs:"JointList"},fn:"JointList"},{a:2,n:"LinearDamping",t:16,rt:$n[0].Single,g:{a:2,n:"get_LinearDamping",t:8,rt:$n[0].Single,fg:"LinearDamping",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_LinearDamping",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"LinearDamping"},fn:"LinearDamping"},{a:2,n:"LinearVelocity",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LinearVelocity",t:8,rt:$n[1].Vector2,fg:"LinearVelocity"},s:{a:2,n:"set_LinearVelocity",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LinearVelocity"},fn:"LinearVelocity"},{a:2,n:"LocalCenter",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LocalCenter",t:8,rt:$n[1].Vector2,fg:"LocalCenter"},s:{a:2,n:"set_LocalCenter",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LocalCenter"},fn:"LocalCenter"},{a:2,n:"Mass",t:16,rt:$n[0].Single,g:{a:2,n:"get_Mass",t:8,rt:$n[0].Single,fg:"Mass",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Mass",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Mass"},fn:"Mass"},{a:2,n:"Position",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_Position",t:8,rt:$n[1].Vector2,fg:"Position"},s:{a:2,n:"set_Position",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"Position"},fn:"Position"},{a:2,n:"Restitution",t:16,rt:$n[0].Single,g:{a:2,n:"get_Restitution",t:8,rt:$n[0].Single,fg:"Restitution",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Restitution",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Restitution"},fn:"Restitution"},{a:2,n:"Revolutions",t:16,rt:$n[0].Single,g:{a:2,n:"get_Revolutions",t:8,rt:$n[0].Single,fg:"Revolutions",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},fn:"Revolutions"},{a:2,n:"Rotation",t:16,rt:$n[0].Single,g:{a:2,n:"get_Rotation",t:8,rt:$n[0].Single,fg:"Rotation",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Rotation",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Rotation"},fn:"Rotation"},{a:2,n:"SleepingAllowed",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_SleepingAllowed",t:8,rt:$n[0].Boolean,fg:"SleepingAllowed",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_SleepingAllowed",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"SleepingAllowed"},fn:"SleepingAllowed"},{a:2,n:"UserData",t:16,rt:$n[0].Object,g:{a:2,n:"get_UserData",t:8,rt:$n[0].Object,fg:"UserData"},s:{a:2,n:"set_UserData",t:8,p:[$n[0].Object],rt:$n[0].Void,fs:"UserData"},fn:"UserData"},{a:2,n:"WorldCenter",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_WorldCenter",t:8,rt:$n[1].Vector2,fg:"WorldCenter"},fn:"WorldCenter"},{a:2,n:"ControllerFilter",t:4,rt:$n[9].ControllerFilter,sn:"ControllerFilter"},{a:2,n:"PhysicsLogicFilter",t:4,rt:$n[10].PhysicsLogicFilter,sn:"PhysicsLogicFilter"},{a:1,n:"_angularDamping",t:4,rt:$n[0].Single,sn:"_angularDamping",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:4,n:"_angularVelocity",t:4,rt:$n[0].Single,sn:"_angularVelocity",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_awake",t:4,rt:$n[0].Boolean,sn:"_awake",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_bodyIdCounter",is:!0,t:4,rt:$n[0].Int32,sn:"_bodyIdCounter",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_bodyType",t:4,rt:$n[3].BodyType,sn:"_bodyType",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.BodyType,System.Enum.toStringFn(FarseerPhysics.Dynamics.BodyType))}},{a:4,n:"_enabled",t:4,rt:$n[0].Boolean,sn:"_enabled",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_fixedRotation",t:4,rt:$n[0].Boolean,sn:"_fixedRotation",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:4,n:"_force",t:4,rt:$n[1].Vector2,sn:"_force"},{a:1,n:"_inertia",t:4,rt:$n[0].Single,sn:"_inertia",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:4,n:"_invI",t:4,rt:$n[0].Single,sn:"_invI",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:4,n:"_invMass",t:4,rt:$n[0].Single,sn:"_invMass",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:4,n:"_island",t:4,rt:$n[0].Boolean,sn:"_island",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_linearDamping",t:4,rt:$n[0].Single,sn:"_linearDamping",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:4,n:"_linearVelocity",t:4,rt:$n[1].Vector2,sn:"_linearVelocity"},{a:1,n:"_mass",t:4,rt:$n[0].Single,sn:"_mass",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:4,n:"_sleepTime",t:4,rt:$n[0].Single,sn:"_sleepTime",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_sleepingAllowed",t:4,rt:$n[0].Boolean,sn:"_sleepingAllowed",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:4,n:"_sweep",t:4,rt:$n[4].Sweep,sn:"_sweep"},{a:4,n:"_torque",t:4,rt:$n[0].Single,sn:"_torque",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:4,n:"_world",t:4,rt:$n[3].World,sn:"_world"},{a:4,n:"_xf",t:4,rt:$n[4].Transform,sn:"_xf"},{a:2,n:"OnCollision",t:2,ad:{a:2,n:"add_OnCollision",t:8,pi:[{n:"value",pt:Function,ps:0}],sn:"addOnCollision",rt:$n[0].Void,p:[Function]},r:{a:2,n:"remove_OnCollision",t:8,pi:[{n:"value",pt:Function,ps:0}],sn:"removeOnCollision",rt:$n[0].Void,p:[Function]}},{a:2,n:"OnSeparation",t:2,ad:{a:2,n:"add_OnSeparation",t:8,pi:[{n:"value",pt:Function,ps:0}],sn:"addOnSeparation",rt:$n[0].Void,p:[Function]},r:{a:2,n:"remove_OnSeparation",t:8,pi:[{n:"value",pt:Function,ps:0}],sn:"removeOnSeparation",rt:$n[0].Void,p:[Function]}}]}},$n);$m("FarseerPhysics.Dynamics.BreakableBody",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[3].World,$n[5].IEnumerable$1(FarseerPhysics.Collision.Shapes.Shape),$n[1].Vector2,$n[0].Single],pi:[{n:"world",pt:$n[3].World,ps:0},{n:"shapes",pt:$n[5].IEnumerable$1(FarseerPhysics.Collision.Shapes.Shape),ps:1},{n:"position",dv:null,o:!0,pt:$n[1].Vector2,ps:2},{n:"rotation",dv:0,o:!0,pt:$n[0].Single,ps:3}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[3].World,$n[5].IEnumerable$1(FarseerPhysics.Common.Vertices),$n[0].Single,$n[1].Vector2,$n[0].Single],pi:[{n:"world",pt:$n[3].World,ps:0},{n:"vertices",pt:$n[5].IEnumerable$1(FarseerPhysics.Common.Vertices),ps:1},{n:"density",pt:$n[0].Single,ps:2},{n:"position",dv:null,o:!0,pt:$n[1].Vector2,ps:3},{n:"rotation",dv:0,o:!0,pt:$n[0].Single,ps:4}],sn:"$ctor1"},{a:2,n:"Break",t:8,sn:"Break",rt:$n[0].Void},{a:1,n:"Decompose",t:8,sn:"Decompose",rt:$n[0].Void},{a:1,n:"PostSolve",t:8,pi:[{n:"contact",pt:$n[8].Contact,ps:0},{n:"impulse",pt:$n[8].ContactVelocityConstraint,ps:1}],sn:"PostSolve",rt:$n[0].Void,p:[$n[8].Contact,$n[8].ContactVelocityConstraint]},{a:2,n:"Update",t:8,sn:"Update",rt:$n[0].Void},{a:2,n:"Broken",t:4,rt:$n[0].Boolean,sn:"Broken",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"MainBody",t:4,rt:$n[3].Body,sn:"MainBody"},{a:2,n:"Parts",t:4,rt:$n[5].List$1(FarseerPhysics.Dynamics.Fixture),sn:"Parts"},{a:2,n:"Strength",t:4,rt:$n[0].Single,sn:"Strength",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_angularVelocitiesCache",t:4,rt:$n[0].Array.type(System.Single),sn:"_angularVelocitiesCache"},{a:1,n:"_break",t:4,rt:$n[0].Boolean,sn:"_break",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_velocitiesCache",t:4,rt:System.Array.type(Microsoft.Xna.Framework.Vector2),sn:"_velocitiesCache"},{a:1,n:"_world",t:4,rt:$n[3].World,sn:"_world"}]}},$n);$m("FarseerPhysics.Dynamics.ContactManager",function(){return{att:1048577,a:2,m:[{a:4,n:".ctor",t:1,p:[$n[11].IBroadPhase],pi:[{n:"broadPhase",pt:$n[11].IBroadPhase,ps:0}],sn:"ctor"},{a:1,n:"AddPair",t:8,pi:[{n:"proxyA",ref:!0,pt:$n[3].FixtureProxy,ps:0},{n:"proxyB",ref:!0,pt:$n[3].FixtureProxy,ps:1}],sn:"AddPair",rt:$n[0].Void,p:[$n[3].FixtureProxy,$n[3].FixtureProxy]},{a:4,n:"Collide",t:8,sn:"Collide",rt:$n[0].Void},{a:4,n:"Destroy",t:8,pi:[{n:"contact",pt:$n[8].Contact,ps:0}],sn:"Destroy",rt:$n[0].Void,p:[$n[8].Contact]},{a:4,n:"FindNewContacts",t:8,sn:"FindNewContacts",rt:$n[0].Void},{a:1,n:"ShouldCollide",is:!0,t:8,pi:[{n:"fixtureA",pt:$n[3].Fixture,ps:0},{n:"fixtureB",pt:$n[3].Fixture,ps:1}],sn:"ShouldCollide",rt:$n[0].Boolean,p:[$n[3].Fixture,$n[3].Fixture],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:4,n:"UpdateContacts",t:8,pi:[{n:"contactEdge",pt:$n[8].ContactEdge,ps:0},{n:"value",pt:$n[0].Boolean,ps:1}],sn:"UpdateContacts",rt:$n[0].Void,p:[$n[8].ContactEdge,$n[0].Boolean]},{a:2,n:"BeginContact",t:4,rt:Function,sn:"BeginContact"},{a:2,n:"BroadPhase",t:4,rt:$n[11].IBroadPhase,sn:"BroadPhase"},{a:2,n:"ContactFilter",t:4,rt:Function,sn:"ContactFilter"},{a:2,n:"ContactList",t:4,rt:$n[5].List$1(FarseerPhysics.Dynamics.Contacts.Contact),sn:"ContactList"},{a:2,n:"EndContact",t:4,rt:Function,sn:"EndContact"},{a:2,n:"OnBroadphaseCollision",t:4,rt:Function,sn:"OnBroadphaseCollision"},{a:2,n:"PostSolve",t:4,rt:Function,sn:"PostSolve"},{a:2,n:"PreSolve",t:4,rt:Function,sn:"PreSolve"}]}},$n);$m("FarseerPhysics.Dynamics.Category",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"All",is:!0,t:4,rt:$n[3].Category,sn:"All",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat1",is:!0,t:4,rt:$n[3].Category,sn:"Cat1",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat10",is:!0,t:4,rt:$n[3].Category,sn:"Cat10",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat11",is:!0,t:4,rt:$n[3].Category,sn:"Cat11",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat12",is:!0,t:4,rt:$n[3].Category,sn:"Cat12",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat13",is:!0,t:4,rt:$n[3].Category,sn:"Cat13",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat14",is:!0,t:4,rt:$n[3].Category,sn:"Cat14",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat15",is:!0,t:4,rt:$n[3].Category,sn:"Cat15",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat16",is:!0,t:4,rt:$n[3].Category,sn:"Cat16",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat17",is:!0,t:4,rt:$n[3].Category,sn:"Cat17",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat18",is:!0,t:4,rt:$n[3].Category,sn:"Cat18",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat19",is:!0,t:4,rt:$n[3].Category,sn:"Cat19",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat2",is:!0,t:4,rt:$n[3].Category,sn:"Cat2",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat20",is:!0,t:4,rt:$n[3].Category,sn:"Cat20",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat21",is:!0,t:4,rt:$n[3].Category,sn:"Cat21",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat22",is:!0,t:4,rt:$n[3].Category,sn:"Cat22",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat23",is:!0,t:4,rt:$n[3].Category,sn:"Cat23",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat24",is:!0,t:4,rt:$n[3].Category,sn:"Cat24",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat25",is:!0,t:4,rt:$n[3].Category,sn:"Cat25",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat26",is:!0,t:4,rt:$n[3].Category,sn:"Cat26",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat27",is:!0,t:4,rt:$n[3].Category,sn:"Cat27",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat28",is:!0,t:4,rt:$n[3].Category,sn:"Cat28",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat29",is:!0,t:4,rt:$n[3].Category,sn:"Cat29",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat3",is:!0,t:4,rt:$n[3].Category,sn:"Cat3",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat30",is:!0,t:4,rt:$n[3].Category,sn:"Cat30",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat31",is:!0,t:4,rt:$n[3].Category,sn:"Cat31",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat4",is:!0,t:4,rt:$n[3].Category,sn:"Cat4",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat5",is:!0,t:4,rt:$n[3].Category,sn:"Cat5",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat6",is:!0,t:4,rt:$n[3].Category,sn:"Cat6",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat7",is:!0,t:4,rt:$n[3].Category,sn:"Cat7",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat8",is:!0,t:4,rt:$n[3].Category,sn:"Cat8",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"Cat9",is:!0,t:4,rt:$n[3].Category,sn:"Cat9",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"None",is:!0,t:4,rt:$n[3].Category,sn:"None",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}}]}},$n);$m("FarseerPhysics.Dynamics.FixtureProxy",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"AABB",t:4,rt:$n[11].AABB,sn:"AABB"},{a:2,n:"ChildIndex",t:4,rt:$n[0].Int32,sn:"ChildIndex",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Fixture",t:4,rt:$n[3].Fixture,sn:"Fixture"},{a:2,n:"ProxyId",t:4,rt:$n[0].Int32,sn:"ProxyId",box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("FarseerPhysics.Dynamics.Fixture",function(){return{att:1048577,a:2,m:[{a:4,n:".ctor",t:1,sn:"ctor"},{a:4,n:".ctor",t:1,p:[$n[3].Body,$n[7].Shape,$n[0].Object],pi:[{n:"body",pt:$n[3].Body,ps:0},{n:"shape",pt:$n[7].Shape,ps:1},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:2}],sn:"$ctor1"},{a:2,n:"CloneOnto",t:8,pi:[{n:"body",pt:$n[3].Body,ps:0}],sn:"CloneOnto",rt:$n[3].Fixture,p:[$n[3].Body]},{a:4,n:"CompareTo",t:8,pi:[{n:"fixture",pt:$n[3].Fixture,ps:0}],sn:"CompareTo",rt:$n[0].Boolean,p:[$n[3].Fixture],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:4,n:"CreateProxies",t:8,pi:[{n:"broadPhase",pt:$n[11].IBroadPhase,ps:0},{n:"xf",ref:!0,pt:$n[4].Transform,ps:1}],sn:"CreateProxies",rt:$n[0].Void,p:[$n[11].IBroadPhase,$n[4].Transform]},{a:4,n:"Destroy",t:8,sn:"Destroy",rt:$n[0].Void},{a:4,n:"DestroyProxies",t:8,pi:[{n:"broadPhase",pt:$n[11].IBroadPhase,ps:0}],sn:"DestroyProxies",rt:$n[0].Void,p:[$n[11].IBroadPhase]},{a:2,n:"Dispose",t:8,sn:"Dispose",rt:$n[0].Void},{a:2,n:"GetAABB",t:8,pi:[{n:"aabb",out:!0,pt:$n[11].AABB,ps:0},{n:"childIndex",pt:$n[0].Int32,ps:1}],sn:"GetAABB",rt:$n[0].Void,p:[$n[11].AABB,$n[0].Int32]},{a:2,n:"IgnoreCollisionWith",t:8,pi:[{n:"fixture",pt:$n[3].Fixture,ps:0}],sn:"IgnoreCollisionWith",rt:$n[0].Void,p:[$n[3].Fixture]},{a:2,n:"IsFixtureIgnored",t:8,pi:[{n:"fixture",pt:$n[3].Fixture,ps:0}],sn:"IsFixtureIgnored",rt:$n[0].Boolean,p:[$n[3].Fixture],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"RayCast",t:8,pi:[{n:"output",out:!0,pt:$n[11].RayCastOutput,ps:0},{n:"input",ref:!0,pt:$n[11].RayCastInput,ps:1},{n:"childIndex",pt:$n[0].Int32,ps:2}],sn:"RayCast",rt:$n[0].Boolean,p:[$n[11].RayCastOutput,$n[11].RayCastInput,$n[0].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"Refilter",t:8,sn:"Refilter",rt:$n[0].Void},{a:1,n:"RegisterFixture",t:8,sn:"RegisterFixture",rt:$n[0].Void},{a:2,n:"RestoreCollisionWith",t:8,pi:[{n:"fixture",pt:$n[3].Fixture,ps:0}],sn:"RestoreCollisionWith",rt:$n[0].Void,p:[$n[3].Fixture]},{a:1,n:"SequenceEqual",t:8,pi:[{n:"first",pt:$n[5].HashSet$1(System.Object),ps:0},{n:"second",pt:$n[5].HashSet$1(System.Object),ps:1}],tpc:1,tprm:["T"],sn:"SequenceEqual",rt:$n[0].Boolean,p:[$n[5].HashSet$1(System.Object),$n[5].HashSet$1(System.Object)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:4,n:"Synchronize",t:8,pi:[{n:"broadPhase",pt:$n[11].IBroadPhase,ps:0},{n:"transform1",ref:!0,pt:$n[4].Transform,ps:1},{n:"transform2",ref:!0,pt:$n[4].Transform,ps:2}],sn:"Synchronize",rt:$n[0].Void,p:[$n[11].IBroadPhase,$n[4].Transform,$n[4].Transform]},{a:2,n:"TestPoint",t:8,pi:[{n:"point",ref:!0,pt:$n[1].Vector2,ps:0}],sn:"TestPoint",rt:$n[0].Boolean,p:[$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Body",t:16,rt:$n[3].Body,g:{a:2,n:"get_Body",t:8,rt:$n[3].Body,fg:"Body"},s:{a:4,n:"set_Body",t:8,p:[$n[3].Body],rt:$n[0].Void,fs:"Body"},fn:"Body"},{a:2,n:"CollidesWith",t:16,rt:$n[3].Category,g:{a:2,n:"get_CollidesWith",t:8,rt:$n[3].Category,fg:"CollidesWith",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},s:{a:2,n:"set_CollidesWith",t:8,p:[$n[3].Category],rt:$n[0].Void,fs:"CollidesWith"},fn:"CollidesWith"},{a:2,n:"CollisionCategories",t:16,rt:$n[3].Category,g:{a:2,n:"get_CollisionCategories",t:8,rt:$n[3].Category,fg:"CollisionCategories",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},s:{a:2,n:"set_CollisionCategories",t:8,p:[$n[3].Category],rt:$n[0].Void,fs:"CollisionCategories"},fn:"CollisionCategories"},{a:2,n:"CollisionGroup",t:16,rt:$n[0].Int16,g:{a:2,n:"get_CollisionGroup",t:8,rt:$n[0].Int16,fg:"CollisionGroup",box:function($v){return Bridge.box($v,System.Int16)}},s:{a:2,n:"set_CollisionGroup",t:8,p:[$n[0].Int16],rt:$n[0].Void,fs:"CollisionGroup"},fn:"CollisionGroup"},{a:2,n:"FixtureId",t:16,rt:$n[0].Int32,g:{a:2,n:"get_FixtureId",t:8,rt:$n[0].Int32,fg:"FixtureId",box:function($v){return Bridge.box($v,System.Int32)}},s:{a:4,n:"set_FixtureId",t:8,p:[$n[0].Int32],rt:$n[0].Void,fs:"FixtureId"},fn:"FixtureId"},{a:2,n:"Friction",t:16,rt:$n[0].Single,g:{a:2,n:"get_Friction",t:8,rt:$n[0].Single,fg:"Friction",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Friction",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Friction"},fn:"Friction"},{a:2,n:"IsDisposed",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_IsDisposed",t:8,rt:$n[0].Boolean,fg:"IsDisposed",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_IsDisposed",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"IsDisposed"},fn:"IsDisposed"},{a:2,n:"IsSensor",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_IsSensor",t:8,rt:$n[0].Boolean,fg:"IsSensor",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_IsSensor",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"IsSensor"},fn:"IsSensor"},{a:2,n:"Restitution",t:16,rt:$n[0].Single,g:{a:2,n:"get_Restitution",t:8,rt:$n[0].Single,fg:"Restitution",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Restitution",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Restitution"},fn:"Restitution"},{a:2,n:"Shape",t:16,rt:$n[7].Shape,g:{a:2,n:"get_Shape",t:8,rt:$n[7].Shape,fg:"Shape"},s:{a:4,n:"set_Shape",t:8,p:[$n[7].Shape],rt:$n[0].Void,fs:"Shape"},fn:"Shape"},{a:2,n:"UserData",t:16,rt:$n[0].Object,g:{a:2,n:"get_UserData",t:8,rt:$n[0].Object,fg:"UserData"},s:{a:2,n:"set_UserData",t:8,p:[$n[0].Object],rt:$n[0].Void,fs:"UserData"},fn:"UserData"},{a:2,n:"AfterCollision",t:4,rt:Function,sn:"AfterCollision"},{a:2,n:"BeforeCollision",t:4,rt:Function,sn:"BeforeCollision"},{a:2,n:"IgnoreCCDWith",t:4,rt:$n[3].Category,sn:"IgnoreCCDWith",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"OnCollision",t:4,rt:Function,sn:"OnCollision"},{a:2,n:"OnSeparation",t:4,rt:Function,sn:"OnSeparation"},{a:2,n:"Proxies",t:4,rt:System.Array.type(FarseerPhysics.Dynamics.FixtureProxy),sn:"Proxies"},{a:2,n:"ProxyCount",t:4,rt:$n[0].Int32,sn:"ProxyCount",box:function($v){return Bridge.box($v,System.Int32)}},{a:4,n:"_collidesWith",t:4,rt:$n[3].Category,sn:"_collidesWith",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:4,n:"_collisionCategories",t:4,rt:$n[3].Category,sn:"_collisionCategories",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:4,n:"_collisionGroup",t:4,rt:$n[0].Int16,sn:"_collisionGroup",box:function($v){return Bridge.box($v,System.Int16)}},{a:4,n:"_collisionIgnores",t:4,rt:$n[5].HashSet$1(System.Int32),sn:"_collisionIgnores"},{a:1,n:"_fixtureIdCounter",is:!0,t:4,rt:$n[0].Int32,sn:"_fixtureIdCounter",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_friction",t:4,rt:$n[0].Single,sn:"_friction",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_isSensor",t:4,rt:$n[0].Boolean,sn:"_isSensor",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_restitution",t:4,rt:$n[0].Single,sn:"_restitution",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Dynamics.Island",function(){return{att:1048577,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Add",t:8,pi:[{n:"body",pt:$n[3].Body,ps:0}],sn:"Add",rt:$n[0].Void,p:[$n[3].Body]},{a:2,n:"Add",t:8,pi:[{n:"contact",pt:$n[8].Contact,ps:0}],sn:"Add$1",rt:$n[0].Void,p:[$n[8].Contact]},{a:2,n:"Add",t:8,pi:[{n:"joint",pt:$n[6].Joint,ps:0}],sn:"Add$2",rt:$n[0].Void,p:[$n[6].Joint]},{a:2,n:"Clear",t:8,sn:"Clear",rt:$n[0].Void},{a:1,n:"Report",t:8,pi:[{n:"constraints",pt:System.Array.type(FarseerPhysics.Dynamics.Contacts.ContactVelocityConstraint),ps:0}],sn:"Report",rt:$n[0].Void,p:[System.Array.type(FarseerPhysics.Dynamics.Contacts.ContactVelocityConstraint)]},{a:2,n:"Reset",t:8,pi:[{n:"bodyCapacity",pt:$n[0].Int32,ps:0},{n:"contactCapacity",pt:$n[0].Int32,ps:1},{n:"jointCapacity",pt:$n[0].Int32,ps:2},{n:"contactManager",pt:$n[3].ContactManager,ps:3}],sn:"Reset",rt:$n[0].Void,p:[$n[0].Int32,$n[0].Int32,$n[0].Int32,$n[3].ContactManager]},{a:2,n:"Solve",t:8,pi:[{n:"step",ref:!0,pt:$n[3].TimeStep,ps:0},{n:"gravity",ref:!0,pt:$n[1].Vector2,ps:1}],sn:"Solve",rt:$n[0].Void,p:[$n[3].TimeStep,$n[1].Vector2]},{a:4,n:"SolveTOI",t:8,pi:[{n:"subStep",ref:!0,pt:$n[3].TimeStep,ps:0},{n:"toiIndexA",pt:$n[0].Int32,ps:1},{n:"toiIndexB",pt:$n[0].Int32,ps:2},{n:"warmstarting",pt:$n[0].Boolean,ps:3}],sn:"SolveTOI",rt:$n[0].Void,p:[$n[3].TimeStep,$n[0].Int32,$n[0].Int32,$n[0].Boolean]},{a:1,n:"AngTolSqr",is:!0,t:4,rt:$n[0].Single,sn:"AngTolSqr",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Bodies",t:4,rt:System.Array.type(FarseerPhysics.Dynamics.Body),sn:"Bodies"},{a:2,n:"BodyCapacity",t:4,rt:$n[0].Int32,sn:"BodyCapacity",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"BodyCount",t:4,rt:$n[0].Int32,sn:"BodyCount",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"ContactCapacity",t:4,rt:$n[0].Int32,sn:"ContactCapacity",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"ContactCount",t:4,rt:$n[0].Int32,sn:"ContactCount",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"JointCapacity",t:4,rt:$n[0].Int32,sn:"JointCapacity",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"JointCount",t:4,rt:$n[0].Int32,sn:"JointCount",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"JointUpdateTime",t:4,rt:$n[0].Single,sn:"JointUpdateTime",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"LinTolSqr",is:!0,t:4,rt:$n[0].Single,sn:"LinTolSqr",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_contactManager",t:4,rt:$n[3].ContactManager,sn:"_contactManager"},{a:1,n:"_contactSolver",t:4,rt:$n[8].ContactSolver,sn:"_contactSolver"},{a:1,n:"_contacts",t:4,rt:System.Array.type(FarseerPhysics.Dynamics.Contacts.Contact),sn:"_contacts"},{a:1,n:"_joints",t:4,rt:System.Array.type(FarseerPhysics.Dynamics.Joints.Joint),sn:"_joints"},{a:2,n:"_positions",t:4,rt:System.Array.type(FarseerPhysics.Dynamics.Position),sn:"_positions"},{a:2,n:"_velocities",t:4,rt:System.Array.type(FarseerPhysics.Dynamics.Velocity),sn:"_velocities"},{a:1,n:"_watch",t:4,rt:$n[12].Stopwatch,sn:"_watch"}]}},$n);$m("FarseerPhysics.Dynamics.TimeStep",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"dt",t:4,rt:$n[0].Single,sn:"dt",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"dtRatio",t:4,rt:$n[0].Single,sn:"dtRatio",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"inv_dt",t:4,rt:$n[0].Single,sn:"inv_dt",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Dynamics.Position",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"a",t:4,rt:$n[0].Single,sn:"a",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"c",t:4,rt:$n[1].Vector2,sn:"c"}]}},$n);$m("FarseerPhysics.Dynamics.Velocity",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"v",t:4,rt:$n[1].Vector2,sn:"v"},{a:2,n:"w",t:4,rt:$n[0].Single,sn:"w",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Dynamics.SolverData",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"positions",t:4,rt:System.Array.type(FarseerPhysics.Dynamics.Position),sn:"positions"},{a:2,n:"step",t:4,rt:$n[3].TimeStep,sn:"step"},{a:2,n:"velocities",t:4,rt:System.Array.type(FarseerPhysics.Dynamics.Velocity),sn:"velocities"}]}},$n);$m("FarseerPhysics.Dynamics.World",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[1].Vector2],pi:[{n:"gravity",pt:$n[1].Vector2,ps:0}],sn:"ctor"},{a:4,n:"AddBody",t:8,pi:[{n:"body",pt:$n[3].Body,ps:0}],sn:"AddBody",rt:$n[0].Void,p:[$n[3].Body]},{a:2,n:"AddBreakableBody",t:8,pi:[{n:"breakableBody",pt:$n[3].BreakableBody,ps:0}],sn:"AddBreakableBody",rt:$n[0].Void,p:[$n[3].BreakableBody]},{a:2,n:"AddController",t:8,pi:[{n:"controller",pt:$n[9].Controller,ps:0}],sn:"AddController",rt:$n[0].Void,p:[$n[9].Controller]},{a:2,n:"AddJoint",t:8,pi:[{n:"joint",pt:$n[6].Joint,ps:0}],sn:"AddJoint",rt:$n[0].Void,p:[$n[6].Joint]},{a:2,n:"Clear",t:8,sn:"Clear",rt:$n[0].Void},{a:2,n:"ClearForces",t:8,sn:"ClearForces",rt:$n[0].Void},{a:1,n:"ProcessAddedBodies",t:8,sn:"ProcessAddedBodies",rt:$n[0].Void},{a:1,n:"ProcessAddedJoints",t:8,sn:"ProcessAddedJoints",rt:$n[0].Void},{a:2,n:"ProcessChanges",t:8,sn:"ProcessChanges",rt:$n[0].Void},{a:1,n:"ProcessRemovedBodies",t:8,sn:"ProcessRemovedBodies",rt:$n[0].Void},{a:1,n:"ProcessRemovedJoints",t:8,sn:"ProcessRemovedJoints",rt:$n[0].Void},{a:2,n:"QueryAABB",t:8,pi:[{n:"aabb",ref:!0,pt:$n[11].AABB,ps:0}],sn:"QueryAABB",rt:$n[5].List$1(FarseerPhysics.Dynamics.Fixture),p:[$n[11].AABB]},{a:2,n:"QueryAABB",t:8,pi:[{n:"callback",pt:Function,ps:0},{n:"aabb",ref:!0,pt:$n[11].AABB,ps:1}],sn:"QueryAABB$1",rt:$n[0].Void,p:[Function,$n[11].AABB]},{a:1,n:"QueryAABBCallbackWrapper",t:8,pi:[{n:"proxyId",pt:$n[0].Int32,ps:0}],sn:"QueryAABBCallbackWrapper",rt:$n[0].Boolean,p:[$n[0].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"RayCast",t:8,pi:[{n:"point1",pt:$n[1].Vector2,ps:0},{n:"point2",pt:$n[1].Vector2,ps:1}],sn:"RayCast",rt:$n[5].List$1(FarseerPhysics.Dynamics.Fixture),p:[$n[1].Vector2,$n[1].Vector2]},{a:2,n:"RayCast",t:8,pi:[{n:"callback",pt:Function,ps:0},{n:"point1",pt:$n[1].Vector2,ps:1},{n:"point2",pt:$n[1].Vector2,ps:2}],sn:"RayCast$1",rt:$n[0].Void,p:[Function,$n[1].Vector2,$n[1].Vector2]},{a:1,n:"RayCastCallbackWrapper",t:8,pi:[{n:"rayCastInput",pt:$n[11].RayCastInput,ps:0},{n:"proxyId",pt:$n[0].Int32,ps:1}],sn:"RayCastCallbackWrapper",rt:$n[0].Single,p:[$n[11].RayCastInput,$n[0].Int32],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"RemoveBody",t:8,pi:[{n:"body",pt:$n[3].Body,ps:0}],sn:"RemoveBody",rt:$n[0].Void,p:[$n[3].Body]},{a:2,n:"RemoveBreakableBody",t:8,pi:[{n:"breakableBody",pt:$n[3].BreakableBody,ps:0}],sn:"RemoveBreakableBody",rt:$n[0].Void,p:[$n[3].BreakableBody]},{a:2,n:"RemoveController",t:8,pi:[{n:"controller",pt:$n[9].Controller,ps:0}],sn:"RemoveController",rt:$n[0].Void,p:[$n[9].Controller]},{a:2,n:"RemoveJoint",t:8,pi:[{n:"joint",pt:$n[6].Joint,ps:0}],sn:"RemoveJoint",rt:$n[0].Void,p:[$n[6].Joint]},{a:1,n:"RemoveJoint",t:8,pi:[{n:"joint",pt:$n[6].Joint,ps:0},{n:"doCheck",pt:$n[0].Boolean,ps:1}],sn:"RemoveJoint$1",rt:$n[0].Void,p:[$n[6].Joint,$n[0].Boolean]},{a:2,n:"ShiftOrigin",t:8,pi:[{n:"newOrigin",pt:$n[1].Vector2,ps:0}],sn:"ShiftOrigin",rt:$n[0].Void,p:[$n[1].Vector2]},{a:1,n:"Solve",t:8,pi:[{n:"step",ref:!0,pt:$n[3].TimeStep,ps:0}],sn:"Solve",rt:$n[0].Void,p:[$n[3].TimeStep]},{a:1,n:"SolveTOI",t:8,pi:[{n:"step",ref:!0,pt:$n[3].TimeStep,ps:0}],sn:"SolveTOI",rt:$n[0].Void,p:[$n[3].TimeStep]},{a:2,n:"Step",t:8,pi:[{n:"dt",pt:$n[0].Single,ps:0}],sn:"Step",rt:$n[0].Void,p:[$n[0].Single]},{a:2,n:"TestPoint",t:8,pi:[{n:"point",pt:$n[1].Vector2,ps:0}],sn:"TestPoint",rt:$n[3].Fixture,p:[$n[1].Vector2]},{a:2,n:"TestPointAll",t:8,pi:[{n:"point",pt:$n[1].Vector2,ps:0}],sn:"TestPointAll",rt:$n[5].List$1(FarseerPhysics.Dynamics.Fixture),p:[$n[1].Vector2]},{a:1,n:"TestPointAllCallback",t:8,pi:[{n:"fixture",pt:$n[3].Fixture,ps:0}],sn:"TestPointAllCallback",rt:$n[0].Boolean,p:[$n[3].Fixture],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"TestPointCallback",t:8,pi:[{n:"fixture",pt:$n[3].Fixture,ps:0}],sn:"TestPointCallback",rt:$n[0].Boolean,p:[$n[3].Fixture],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"AddRemoveTime",t:16,rt:$n[0].Single,g:{a:2,n:"get_AddRemoveTime",t:8,rt:$n[0].Single,fg:"AddRemoveTime",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:1,n:"set_AddRemoveTime",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"AddRemoveTime"},fn:"AddRemoveTime"},{a:2,n:"BodyList",t:16,rt:$n[5].List$1(FarseerPhysics.Dynamics.Body),g:{a:2,n:"get_BodyList",t:8,rt:$n[5].List$1(FarseerPhysics.Dynamics.Body),fg:"BodyList"},s:{a:1,n:"set_BodyList",t:8,p:[$n[5].List$1(FarseerPhysics.Dynamics.Body)],rt:$n[0].Void,fs:"BodyList"},fn:"BodyList"},{a:2,n:"BreakableBodyList",t:16,rt:$n[5].List$1(FarseerPhysics.Dynamics.BreakableBody),g:{a:2,n:"get_BreakableBodyList",t:8,rt:$n[5].List$1(FarseerPhysics.Dynamics.BreakableBody),fg:"BreakableBodyList"},s:{a:1,n:"set_BreakableBodyList",t:8,p:[$n[5].List$1(FarseerPhysics.Dynamics.BreakableBody)],rt:$n[0].Void,fs:"BreakableBodyList"},fn:"BreakableBodyList"},{a:2,n:"ContactList",t:16,rt:$n[5].List$1(FarseerPhysics.Dynamics.Contacts.Contact),g:{a:2,n:"get_ContactList",t:8,rt:$n[5].List$1(FarseerPhysics.Dynamics.Contacts.Contact),fg:"ContactList"},fn:"ContactList"},{a:2,n:"ContactManager",t:16,rt:$n[3].ContactManager,g:{a:2,n:"get_ContactManager",t:8,rt:$n[3].ContactManager,fg:"ContactManager"},s:{a:1,n:"set_ContactManager",t:8,p:[$n[3].ContactManager],rt:$n[0].Void,fs:"ContactManager"},fn:"ContactManager"},{a:2,n:"ContactsUpdateTime",t:16,rt:$n[0].Single,g:{a:2,n:"get_ContactsUpdateTime",t:8,rt:$n[0].Single,fg:"ContactsUpdateTime",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:1,n:"set_ContactsUpdateTime",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"ContactsUpdateTime"},fn:"ContactsUpdateTime"},{a:2,n:"ContinuousPhysicsTime",t:16,rt:$n[0].Single,g:{a:2,n:"get_ContinuousPhysicsTime",t:8,rt:$n[0].Single,fg:"ContinuousPhysicsTime",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:1,n:"set_ContinuousPhysicsTime",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"ContinuousPhysicsTime"},fn:"ContinuousPhysicsTime"},{a:2,n:"ControllerList",t:16,rt:$n[5].List$1(FarseerPhysics.Controllers.Controller),g:{a:2,n:"get_ControllerList",t:8,rt:$n[5].List$1(FarseerPhysics.Controllers.Controller),fg:"ControllerList"},s:{a:1,n:"set_ControllerList",t:8,p:[$n[5].List$1(FarseerPhysics.Controllers.Controller)],rt:$n[0].Void,fs:"ControllerList"},fn:"ControllerList"},{a:2,n:"ControllersUpdateTime",t:16,rt:$n[0].Single,g:{a:2,n:"get_ControllersUpdateTime",t:8,rt:$n[0].Single,fg:"ControllersUpdateTime",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:1,n:"set_ControllersUpdateTime",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"ControllersUpdateTime"},fn:"ControllersUpdateTime"},{a:2,n:"Enabled",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_Enabled",t:8,rt:$n[0].Boolean,fg:"Enabled",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_Enabled",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"Enabled"},fn:"Enabled"},{a:2,n:"Island",t:16,rt:$n[3].Island,g:{a:2,n:"get_Island",t:8,rt:$n[3].Island,fg:"Island"},s:{a:1,n:"set_Island",t:8,p:[$n[3].Island],rt:$n[0].Void,fs:"Island"},fn:"Island"},{a:2,n:"JointList",t:16,rt:$n[5].List$1(FarseerPhysics.Dynamics.Joints.Joint),g:{a:2,n:"get_JointList",t:8,rt:$n[5].List$1(FarseerPhysics.Dynamics.Joints.Joint),fg:"JointList"},s:{a:1,n:"set_JointList",t:8,p:[$n[5].List$1(FarseerPhysics.Dynamics.Joints.Joint)],rt:$n[0].Void,fs:"JointList"},fn:"JointList"},{a:2,n:"NewContactsTime",t:16,rt:$n[0].Single,g:{a:2,n:"get_NewContactsTime",t:8,rt:$n[0].Single,fg:"NewContactsTime",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:1,n:"set_NewContactsTime",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"NewContactsTime"},fn:"NewContactsTime"},{a:2,n:"ProxyCount",t:16,rt:$n[0].Int32,g:{a:2,n:"get_ProxyCount",t:8,rt:$n[0].Int32,fg:"ProxyCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ProxyCount"},{a:2,n:"SolveUpdateTime",t:16,rt:$n[0].Single,g:{a:2,n:"get_SolveUpdateTime",t:8,rt:$n[0].Single,fg:"SolveUpdateTime",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:1,n:"set_SolveUpdateTime",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"SolveUpdateTime"},fn:"SolveUpdateTime"},{a:2,n:"UpdateTime",t:16,rt:$n[0].Single,g:{a:2,n:"get_UpdateTime",t:8,rt:$n[0].Single,fg:"UpdateTime",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:1,n:"set_UpdateTime",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"UpdateTime"},fn:"UpdateTime"},{a:2,n:"BodyAdded",t:4,rt:Function,sn:"BodyAdded"},{a:2,n:"BodyRemoved",t:4,rt:Function,sn:"BodyRemoved"},{a:2,n:"ControllerAdded",t:4,rt:Function,sn:"ControllerAdded"},{a:2,n:"ControllerRemoved",t:4,rt:Function,sn:"ControllerRemoved"},{a:2,n:"FixtureAdded",t:4,rt:Function,sn:"FixtureAdded"},{a:2,n:"FixtureRemoved",t:4,rt:Function,sn:"FixtureRemoved"},{a:2,n:"Gravity",t:4,rt:$n[1].Vector2,sn:"Gravity"},{a:2,n:"JointAdded",t:4,rt:Function,sn:"JointAdded"},{a:2,n:"JointRemoved",t:4,rt:Function,sn:"JointRemoved"},{a:1,n:"_bodyAddList",t:4,rt:$n[5].HashSet$1(FarseerPhysics.Dynamics.Body),sn:"_bodyAddList"},{a:1,n:"_bodyRemoveList",t:4,rt:$n[5].HashSet$1(FarseerPhysics.Dynamics.Body),sn:"_bodyRemoveList"},{a:4,n:"_contactPool",t:4,rt:$n[5].Queue$1(FarseerPhysics.Dynamics.Contacts.Contact),sn:"_contactPool"},{a:1,n:"_input",t:4,rt:$n[11].TOIInput,sn:"_input"},{a:1,n:"_invDt0",t:4,rt:$n[0].Single,sn:"_invDt0",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_jointAddList",t:4,rt:$n[5].HashSet$1(FarseerPhysics.Dynamics.Joints.Joint),sn:"_jointAddList"},{a:1,n:"_jointRemoveList",t:4,rt:$n[5].HashSet$1(FarseerPhysics.Dynamics.Joints.Joint),sn:"_jointRemoveList"},{a:1,n:"_myFixture",t:4,rt:$n[3].Fixture,sn:"_myFixture"},{a:1,n:"_point1",t:4,rt:$n[1].Vector2,sn:"_point1"},{a:1,n:"_point2",t:4,rt:$n[1].Vector2,sn:"_point2"},{a:1,n:"_queryAABBCallback",t:4,rt:Function,sn:"_queryAABBCallback"},{a:1,n:"_queryAABBCallbackWrapper",t:4,rt:Function,sn:"_queryAABBCallbackWrapper"},{a:1,n:"_rayCastCallback",t:4,rt:Function,sn:"_rayCastCallback"},{a:1,n:"_rayCastCallbackWrapper",t:4,rt:Function,sn:"_rayCastCallbackWrapper"},{a:1,n:"_stack",t:4,rt:System.Array.type(FarseerPhysics.Dynamics.Body),sn:"_stack"},{a:1,n:"_stepComplete",t:4,rt:$n[0].Boolean,sn:"_stepComplete",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_testPointAllFixtures",t:4,rt:$n[5].List$1(FarseerPhysics.Dynamics.Fixture),sn:"_testPointAllFixtures"},{a:1,n:"_watch",t:4,rt:$n[12].Stopwatch,sn:"_watch"},{a:4,n:"_worldHasNewFixture",t:4,rt:$n[0].Boolean,sn:"_worldHasNewFixture",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("FarseerPhysics.Dynamics.Joints.AngleJoint",function(){return{att:1048577,a:2,m:[{a:4,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[3].Body,$n[3].Body],pi:[{n:"bodyA",pt:$n[3].Body,ps:0},{n:"bodyB",pt:$n[3].Body,ps:1}],sn:"$ctor1"},{ov:!0,a:2,n:"GetReactionForce",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionForce",rt:$n[1].Vector2,p:[$n[0].Single]},{ov:!0,a:2,n:"GetReactionTorque",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionTorque",rt:$n[0].Single,p:[$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{ov:!0,a:4,n:"InitVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"InitVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{ov:!0,a:4,n:"SolvePositionConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolvePositionConstraints",rt:$n[0].Boolean,p:[$n[3].SolverData],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:4,n:"SolveVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolveVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{a:2,n:"BiasFactor",t:16,rt:$n[0].Single,g:{a:2,n:"get_BiasFactor",t:8,rt:$n[0].Single,fg:"BiasFactor",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_BiasFactor",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"BiasFactor"},fn:"BiasFactor"},{a:2,n:"MaxImpulse",t:16,rt:$n[0].Single,g:{a:2,n:"get_MaxImpulse",t:8,rt:$n[0].Single,fg:"MaxImpulse",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_MaxImpulse",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"MaxImpulse"},fn:"MaxImpulse"},{a:2,n:"Softness",t:16,rt:$n[0].Single,g:{a:2,n:"get_Softness",t:8,rt:$n[0].Single,fg:"Softness",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Softness",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Softness"},fn:"Softness"},{a:2,n:"TargetAngle",t:16,rt:$n[0].Single,g:{a:2,n:"get_TargetAngle",t:8,rt:$n[0].Single,fg:"TargetAngle",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_TargetAngle",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"TargetAngle"},fn:"TargetAngle"},{ov:!0,a:2,n:"WorldAnchorA",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,n:"get_WorldAnchorA",t:8,rt:$n[1].Vector2,fg:"WorldAnchorA"},s:{ov:!0,a:2,n:"set_WorldAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorA"},fn:"WorldAnchorA"},{ov:!0,a:2,n:"WorldAnchorB",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,n:"get_WorldAnchorB",t:8,rt:$n[1].Vector2,fg:"WorldAnchorB"},s:{ov:!0,a:2,n:"set_WorldAnchorB",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorB"},fn:"WorldAnchorB"},{a:1,n:"_bias",t:4,rt:$n[0].Single,sn:"_bias",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_jointError",t:4,rt:$n[0].Single,sn:"_jointError",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_massFactor",t:4,rt:$n[0].Single,sn:"_massFactor",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_targetAngle",t:4,rt:$n[0].Single,sn:"_targetAngle",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Dynamics.Joints.DistanceJoint",function(){return{att:1048577,a:2,m:[{a:4,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[3].Body,$n[3].Body,$n[1].Vector2,$n[1].Vector2,$n[0].Boolean],pi:[{n:"bodyA",pt:$n[3].Body,ps:0},{n:"bodyB",pt:$n[3].Body,ps:1},{n:"anchorA",pt:$n[1].Vector2,ps:2},{n:"anchorB",pt:$n[1].Vector2,ps:3},{n:"useWorldCoordinates",dv:!1,o:!0,pt:$n[0].Boolean,ps:4}],sn:"$ctor1"},{ov:!0,a:2,n:"GetReactionForce",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionForce",rt:$n[1].Vector2,p:[$n[0].Single]},{ov:!0,a:2,n:"GetReactionTorque",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionTorque",rt:$n[0].Single,p:[$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{ov:!0,a:4,n:"InitVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"InitVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{ov:!0,a:4,n:"SolvePositionConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolvePositionConstraints",rt:$n[0].Boolean,p:[$n[3].SolverData],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:4,n:"SolveVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolveVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{a:2,n:"DampingRatio",t:16,rt:$n[0].Single,g:{a:2,n:"get_DampingRatio",t:8,rt:$n[0].Single,fg:"DampingRatio",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_DampingRatio",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"DampingRatio"},fn:"DampingRatio"},{a:2,n:"Frequency",t:16,rt:$n[0].Single,g:{a:2,n:"get_Frequency",t:8,rt:$n[0].Single,fg:"Frequency",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Frequency",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Frequency"},fn:"Frequency"},{a:2,n:"Length",t:16,rt:$n[0].Single,g:{a:2,n:"get_Length",t:8,rt:$n[0].Single,fg:"Length",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Length",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Length"},fn:"Length"},{a:2,n:"LocalAnchorA",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LocalAnchorA",t:8,rt:$n[1].Vector2,fg:"LocalAnchorA"},s:{a:2,n:"set_LocalAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LocalAnchorA"},fn:"LocalAnchorA"},{a:2,n:"LocalAnchorB",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LocalAnchorB",t:8,rt:$n[1].Vector2,fg:"LocalAnchorB"},s:{a:2,n:"set_LocalAnchorB",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LocalAnchorB"},fn:"LocalAnchorB"},{ov:!0,a:2,sl:!0,n:"WorldAnchorA",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,sl:!0,n:"get_WorldAnchorA",t:8,rt:$n[1].Vector2,fg:"WorldAnchorA"},s:{ov:!0,a:2,sl:!0,n:"set_WorldAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorA"},fn:"WorldAnchorA"},{ov:!0,a:2,sl:!0,n:"WorldAnchorB",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,sl:!0,n:"get_WorldAnchorB",t:8,rt:$n[1].Vector2,fg:"WorldAnchorB"},s:{ov:!0,a:2,sl:!0,n:"set_WorldAnchorB",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorB"},fn:"WorldAnchorB"},{a:1,n:"_bias",t:4,rt:$n[0].Single,sn:"_bias",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_gamma",t:4,rt:$n[0].Single,sn:"_gamma",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_impulse",t:4,rt:$n[0].Single,sn:"_impulse",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_indexA",t:4,rt:$n[0].Int32,sn:"_indexA",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_indexB",t:4,rt:$n[0].Int32,sn:"_indexB",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_invIA",t:4,rt:$n[0].Single,sn:"_invIA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invIB",t:4,rt:$n[0].Single,sn:"_invIB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invMassA",t:4,rt:$n[0].Single,sn:"_invMassA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invMassB",t:4,rt:$n[0].Single,sn:"_invMassB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_localCenterA",t:4,rt:$n[1].Vector2,sn:"_localCenterA"},{a:1,n:"_localCenterB",t:4,rt:$n[1].Vector2,sn:"_localCenterB"},{a:1,n:"_mass",t:4,rt:$n[0].Single,sn:"_mass",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_rA",t:4,rt:$n[1].Vector2,sn:"_rA"},{a:1,n:"_rB",t:4,rt:$n[1].Vector2,sn:"_rB"},{a:1,n:"_u",t:4,rt:$n[1].Vector2,sn:"_u"}]}},$n);$m("FarseerPhysics.Dynamics.Joints.FixedMouseJoint",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[3].Body,$n[1].Vector2],pi:[{n:"body",pt:$n[3].Body,ps:0},{n:"worldAnchor",pt:$n[1].Vector2,ps:1}],sn:"ctor"},{ov:!0,a:2,n:"GetReactionForce",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionForce",rt:$n[1].Vector2,p:[$n[0].Single]},{ov:!0,a:2,n:"GetReactionTorque",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionTorque",rt:$n[0].Single,p:[$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{ov:!0,a:4,n:"InitVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"InitVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{ov:!0,a:4,n:"SolvePositionConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolvePositionConstraints",rt:$n[0].Boolean,p:[$n[3].SolverData],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:4,n:"SolveVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolveVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{a:2,n:"DampingRatio",t:16,rt:$n[0].Single,g:{a:2,n:"get_DampingRatio",t:8,rt:$n[0].Single,fg:"DampingRatio",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_DampingRatio",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"DampingRatio"},fn:"DampingRatio"},{a:2,n:"Frequency",t:16,rt:$n[0].Single,g:{a:2,n:"get_Frequency",t:8,rt:$n[0].Single,fg:"Frequency",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Frequency",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Frequency"},fn:"Frequency"},{a:2,n:"LocalAnchorA",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LocalAnchorA",t:8,rt:$n[1].Vector2,fg:"LocalAnchorA"},s:{a:2,n:"set_LocalAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LocalAnchorA"},fn:"LocalAnchorA"},{a:2,n:"MaxForce",t:16,rt:$n[0].Single,g:{a:2,n:"get_MaxForce",t:8,rt:$n[0].Single,fg:"MaxForce",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_MaxForce",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"MaxForce"},fn:"MaxForce"},{ov:!0,a:2,n:"WorldAnchorA",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,n:"get_WorldAnchorA",t:8,rt:$n[1].Vector2,fg:"WorldAnchorA"},s:{ov:!0,a:2,n:"set_WorldAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorA"},fn:"WorldAnchorA"},{ov:!0,a:2,n:"WorldAnchorB",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,n:"get_WorldAnchorB",t:8,rt:$n[1].Vector2,fg:"WorldAnchorB"},s:{ov:!0,a:2,n:"set_WorldAnchorB",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorB"},fn:"WorldAnchorB"},{a:1,n:"_C",t:4,rt:$n[1].Vector2,sn:"_C"},{a:1,n:"_beta",t:4,rt:$n[0].Single,sn:"_beta",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_dampingRatio",t:4,rt:$n[0].Single,sn:"_dampingRatio",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_frequency",t:4,rt:$n[0].Single,sn:"_frequency",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_gamma",t:4,rt:$n[0].Single,sn:"_gamma",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_impulse",t:4,rt:$n[1].Vector2,sn:"_impulse"},{a:1,n:"_indexA",t:4,rt:$n[0].Int32,sn:"_indexA",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_invIA",t:4,rt:$n[0].Single,sn:"_invIA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invMassA",t:4,rt:$n[0].Single,sn:"_invMassA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_localCenterA",t:4,rt:$n[1].Vector2,sn:"_localCenterA"},{a:1,n:"_mass",t:4,rt:$n[4].Mat22,sn:"_mass"},{a:1,n:"_maxForce",t:4,rt:$n[0].Single,sn:"_maxForce",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_rA",t:4,rt:$n[1].Vector2,sn:"_rA"},{a:1,n:"_worldAnchor",t:4,rt:$n[1].Vector2,sn:"_worldAnchor"}]}},$n);$m("FarseerPhysics.Dynamics.Joints.FrictionJoint",function(){return{att:1048577,a:2,m:[{a:4,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[3].Body,$n[3].Body,$n[1].Vector2,$n[0].Boolean],pi:[{n:"bodyA",pt:$n[3].Body,ps:0},{n:"bodyB",pt:$n[3].Body,ps:1},{n:"anchor",pt:$n[1].Vector2,ps:2},{n:"useWorldCoordinates",dv:!1,o:!0,pt:$n[0].Boolean,ps:3}],sn:"$ctor1"},{ov:!0,a:2,n:"GetReactionForce",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionForce",rt:$n[1].Vector2,p:[$n[0].Single]},{ov:!0,a:2,n:"GetReactionTorque",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionTorque",rt:$n[0].Single,p:[$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{ov:!0,a:4,n:"InitVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"InitVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{ov:!0,a:4,n:"SolvePositionConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolvePositionConstraints",rt:$n[0].Boolean,p:[$n[3].SolverData],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:4,n:"SolveVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolveVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{a:2,n:"LocalAnchorA",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LocalAnchorA",t:8,rt:$n[1].Vector2,fg:"LocalAnchorA"},s:{a:2,n:"set_LocalAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LocalAnchorA"},fn:"LocalAnchorA"},{a:2,n:"LocalAnchorB",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LocalAnchorB",t:8,rt:$n[1].Vector2,fg:"LocalAnchorB"},s:{a:2,n:"set_LocalAnchorB",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LocalAnchorB"},fn:"LocalAnchorB"},{a:2,n:"MaxForce",t:16,rt:$n[0].Single,g:{a:2,n:"get_MaxForce",t:8,rt:$n[0].Single,fg:"MaxForce",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_MaxForce",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"MaxForce"},fn:"MaxForce"},{a:2,n:"MaxTorque",t:16,rt:$n[0].Single,g:{a:2,n:"get_MaxTorque",t:8,rt:$n[0].Single,fg:"MaxTorque",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_MaxTorque",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"MaxTorque"},fn:"MaxTorque"},{ov:!0,a:2,n:"WorldAnchorA",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,n:"get_WorldAnchorA",t:8,rt:$n[1].Vector2,fg:"WorldAnchorA"},s:{ov:!0,a:2,n:"set_WorldAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorA"},fn:"WorldAnchorA"},{ov:!0,a:2,n:"WorldAnchorB",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,n:"get_WorldAnchorB",t:8,rt:$n[1].Vector2,fg:"WorldAnchorB"},s:{ov:!0,a:2,n:"set_WorldAnchorB",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorB"},fn:"WorldAnchorB"},{a:1,n:"_angularImpulse",t:4,rt:$n[0].Single,sn:"_angularImpulse",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_angularMass",t:4,rt:$n[0].Single,sn:"_angularMass",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_indexA",t:4,rt:$n[0].Int32,sn:"_indexA",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_indexB",t:4,rt:$n[0].Int32,sn:"_indexB",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_invIA",t:4,rt:$n[0].Single,sn:"_invIA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invIB",t:4,rt:$n[0].Single,sn:"_invIB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invMassA",t:4,rt:$n[0].Single,sn:"_invMassA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invMassB",t:4,rt:$n[0].Single,sn:"_invMassB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_linearImpulse",t:4,rt:$n[1].Vector2,sn:"_linearImpulse"},{a:1,n:"_linearMass",t:4,rt:$n[4].Mat22,sn:"_linearMass"},{a:1,n:"_localCenterA",t:4,rt:$n[1].Vector2,sn:"_localCenterA"},{a:1,n:"_localCenterB",t:4,rt:$n[1].Vector2,sn:"_localCenterB"},{a:1,n:"_rA",t:4,rt:$n[1].Vector2,sn:"_rA"},{a:1,n:"_rB",t:4,rt:$n[1].Vector2,sn:"_rB"}]}},$n);$m("FarseerPhysics.Dynamics.Joints.GearJoint",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[3].Body,$n[3].Body,$n[6].Joint,$n[6].Joint,$n[0].Single],pi:[{n:"bodyA",pt:$n[3].Body,ps:0},{n:"bodyB",pt:$n[3].Body,ps:1},{n:"jointA",pt:$n[6].Joint,ps:2},{n:"jointB",pt:$n[6].Joint,ps:3},{n:"ratio",dv:1,o:!0,pt:$n[0].Single,ps:4}],sn:"ctor"},{ov:!0,a:2,n:"GetReactionForce",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionForce",rt:$n[1].Vector2,p:[$n[0].Single]},{ov:!0,a:2,n:"GetReactionTorque",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionTorque",rt:$n[0].Single,p:[$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{ov:!0,a:4,n:"InitVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"InitVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{ov:!0,a:4,n:"SolvePositionConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolvePositionConstraints",rt:$n[0].Boolean,p:[$n[3].SolverData],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:4,n:"SolveVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolveVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{a:2,n:"JointA",t:16,rt:$n[6].Joint,g:{a:2,n:"get_JointA",t:8,rt:$n[6].Joint,fg:"JointA"},s:{a:1,n:"set_JointA",t:8,p:[$n[6].Joint],rt:$n[0].Void,fs:"JointA"},fn:"JointA"},{a:2,n:"JointB",t:16,rt:$n[6].Joint,g:{a:2,n:"get_JointB",t:8,rt:$n[6].Joint,fg:"JointB"},s:{a:1,n:"set_JointB",t:8,p:[$n[6].Joint],rt:$n[0].Void,fs:"JointB"},fn:"JointB"},{a:2,n:"Ratio",t:16,rt:$n[0].Single,g:{a:2,n:"get_Ratio",t:8,rt:$n[0].Single,fg:"Ratio",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Ratio",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Ratio"},fn:"Ratio"},{ov:!0,a:2,n:"WorldAnchorA",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,n:"get_WorldAnchorA",t:8,rt:$n[1].Vector2,fg:"WorldAnchorA"},s:{ov:!0,a:2,n:"set_WorldAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorA"},fn:"WorldAnchorA"},{ov:!0,a:2,n:"WorldAnchorB",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,n:"get_WorldAnchorB",t:8,rt:$n[1].Vector2,fg:"WorldAnchorB"},s:{ov:!0,a:2,n:"set_WorldAnchorB",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorB"},fn:"WorldAnchorB"},{a:1,n:"_JvAC",t:4,rt:$n[1].Vector2,sn:"_JvAC"},{a:1,n:"_JvBD",t:4,rt:$n[1].Vector2,sn:"_JvBD"},{a:1,n:"_JwA",t:4,rt:$n[0].Single,sn:"_JwA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_JwB",t:4,rt:$n[0].Single,sn:"_JwB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_JwC",t:4,rt:$n[0].Single,sn:"_JwC",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_JwD",t:4,rt:$n[0].Single,sn:"_JwD",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_bodyA",t:4,rt:$n[3].Body,sn:"_bodyA"},{a:1,n:"_bodyB",t:4,rt:$n[3].Body,sn:"_bodyB"},{a:1,n:"_bodyC",t:4,rt:$n[3].Body,sn:"_bodyC"},{a:1,n:"_bodyD",t:4,rt:$n[3].Body,sn:"_bodyD"},{a:1,n:"_constant",t:4,rt:$n[0].Single,sn:"_constant",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_iA",t:4,rt:$n[0].Single,sn:"_iA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_iB",t:4,rt:$n[0].Single,sn:"_iB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_iC",t:4,rt:$n[0].Single,sn:"_iC",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_iD",t:4,rt:$n[0].Single,sn:"_iD",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_impulse",t:4,rt:$n[0].Single,sn:"_impulse",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_indexA",t:4,rt:$n[0].Int32,sn:"_indexA",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_indexB",t:4,rt:$n[0].Int32,sn:"_indexB",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_indexC",t:4,rt:$n[0].Int32,sn:"_indexC",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_indexD",t:4,rt:$n[0].Int32,sn:"_indexD",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_lcA",t:4,rt:$n[1].Vector2,sn:"_lcA"},{a:1,n:"_lcB",t:4,rt:$n[1].Vector2,sn:"_lcB"},{a:1,n:"_lcC",t:4,rt:$n[1].Vector2,sn:"_lcC"},{a:1,n:"_lcD",t:4,rt:$n[1].Vector2,sn:"_lcD"},{a:1,n:"_localAnchorA",t:4,rt:$n[1].Vector2,sn:"_localAnchorA"},{a:1,n:"_localAnchorB",t:4,rt:$n[1].Vector2,sn:"_localAnchorB"},{a:1,n:"_localAnchorC",t:4,rt:$n[1].Vector2,sn:"_localAnchorC"},{a:1,n:"_localAnchorD",t:4,rt:$n[1].Vector2,sn:"_localAnchorD"},{a:1,n:"_localAxisC",t:4,rt:$n[1].Vector2,sn:"_localAxisC"},{a:1,n:"_localAxisD",t:4,rt:$n[1].Vector2,sn:"_localAxisD"},{a:1,n:"_mA",t:4,rt:$n[0].Single,sn:"_mA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_mB",t:4,rt:$n[0].Single,sn:"_mB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_mC",t:4,rt:$n[0].Single,sn:"_mC",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_mD",t:4,rt:$n[0].Single,sn:"_mD",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_mass",t:4,rt:$n[0].Single,sn:"_mass",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_ratio",t:4,rt:$n[0].Single,sn:"_ratio",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_referenceAngleA",t:4,rt:$n[0].Single,sn:"_referenceAngleA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_referenceAngleB",t:4,rt:$n[0].Single,sn:"_referenceAngleB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_typeA",t:4,rt:$n[6].JointType,sn:"_typeA",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}},{a:1,n:"_typeB",t:4,rt:$n[6].JointType,sn:"_typeB",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}}]}},$n);$m("FarseerPhysics.Dynamics.Joints.JointType",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Angle",is:!0,t:4,rt:$n[6].JointType,sn:"Angle",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}},{a:2,n:"Distance",is:!0,t:4,rt:$n[6].JointType,sn:"Distance",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}},{a:2,n:"FixedAngle",is:!0,t:4,rt:$n[6].JointType,sn:"FixedAngle",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}},{a:2,n:"FixedDistance",is:!0,t:4,rt:$n[6].JointType,sn:"FixedDistance",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}},{a:2,n:"FixedFriction",is:!0,t:4,rt:$n[6].JointType,sn:"FixedFriction",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}},{a:2,n:"FixedLine",is:!0,t:4,rt:$n[6].JointType,sn:"FixedLine",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}},{a:2,n:"FixedMouse",is:!0,t:4,rt:$n[6].JointType,sn:"FixedMouse",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}},{a:2,n:"FixedPrismatic",is:!0,t:4,rt:$n[6].JointType,sn:"FixedPrismatic",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}},{a:2,n:"FixedRevolute",is:!0,t:4,rt:$n[6].JointType,sn:"FixedRevolute",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}},{a:2,n:"Friction",is:!0,t:4,rt:$n[6].JointType,sn:"Friction",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}},{a:2,n:"Gear",is:!0,t:4,rt:$n[6].JointType,sn:"Gear",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}},{a:2,n:"Motor",is:!0,t:4,rt:$n[6].JointType,sn:"Motor",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}},{a:2,n:"Prismatic",is:!0,t:4,rt:$n[6].JointType,sn:"Prismatic",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}},{a:2,n:"Pulley",is:!0,t:4,rt:$n[6].JointType,sn:"Pulley",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}},{a:2,n:"Revolute",is:!0,t:4,rt:$n[6].JointType,sn:"Revolute",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}},{a:2,n:"Rope",is:!0,t:4,rt:$n[6].JointType,sn:"Rope",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}},{a:2,n:"Unknown",is:!0,t:4,rt:$n[6].JointType,sn:"Unknown",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}},{a:2,n:"Weld",is:!0,t:4,rt:$n[6].JointType,sn:"Weld",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}},{a:2,n:"Wheel",is:!0,t:4,rt:$n[6].JointType,sn:"Wheel",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}}]}},$n);$m("FarseerPhysics.Dynamics.Joints.LimitState",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"AtLower",is:!0,t:4,rt:$n[6].LimitState,sn:"AtLower",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.LimitState,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.LimitState))}},{a:2,n:"AtUpper",is:!0,t:4,rt:$n[6].LimitState,sn:"AtUpper",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.LimitState,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.LimitState))}},{a:2,n:"Equal",is:!0,t:4,rt:$n[6].LimitState,sn:"Equal",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.LimitState,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.LimitState))}},{a:2,n:"Inactive",is:!0,t:4,rt:$n[6].LimitState,sn:"Inactive",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.LimitState,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.LimitState))}}]}},$n);$m("FarseerPhysics.Dynamics.Joints.JointEdge",function(){return{att:1048833,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Joint",t:4,rt:$n[6].Joint,sn:"Joint"},{a:2,n:"Next",t:4,rt:$n[6].JointEdge,sn:"Next"},{a:2,n:"Other",t:4,rt:$n[3].Body,sn:"Other"},{a:2,n:"Prev",t:4,rt:$n[6].JointEdge,sn:"Prev"}]}},$n);$m("FarseerPhysics.Dynamics.Joints.Joint",function(){return{att:1048705,a:2,m:[{a:3,n:".ctor",t:1,sn:"ctor"},{a:3,n:".ctor",t:1,p:[$n[3].Body],pi:[{n:"body",pt:$n[3].Body,ps:0}],sn:"$ctor1"},{a:3,n:".ctor",t:1,p:[$n[3].Body,$n[3].Body],pi:[{n:"bodyA",pt:$n[3].Body,ps:0},{n:"bodyB",pt:$n[3].Body,ps:1}],sn:"$ctor2"},{ab:!0,a:2,n:"GetReactionForce",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionForce",rt:$n[1].Vector2,p:[$n[0].Single]},{ab:!0,a:2,n:"GetReactionTorque",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionTorque",rt:$n[0].Single,p:[$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{ab:!0,a:4,n:"InitVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"InitVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{a:2,n:"IsFixedType",t:8,sn:"IsFixedType",rt:$n[0].Boolean,box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ab:!0,a:4,n:"SolvePositionConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolvePositionConstraints",rt:$n[0].Boolean,p:[$n[3].SolverData],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ab:!0,a:4,n:"SolveVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolveVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{a:4,n:"Validate",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"Validate",rt:$n[0].Void,p:[$n[0].Single]},{a:3,n:"WakeBodies",t:8,sn:"WakeBodies",rt:$n[0].Void},{a:2,n:"BodyA",t:16,rt:$n[3].Body,g:{a:2,n:"get_BodyA",t:8,rt:$n[3].Body,fg:"BodyA"},s:{a:4,n:"set_BodyA",t:8,p:[$n[3].Body],rt:$n[0].Void,fs:"BodyA"},fn:"BodyA"},{a:2,n:"BodyB",t:16,rt:$n[3].Body,g:{a:2,n:"get_BodyB",t:8,rt:$n[3].Body,fg:"BodyB"},s:{a:4,n:"set_BodyB",t:8,p:[$n[3].Body],rt:$n[0].Void,fs:"BodyB"},fn:"BodyB"},{a:2,n:"Breakpoint",t:16,rt:$n[0].Single,g:{a:2,n:"get_Breakpoint",t:8,rt:$n[0].Single,fg:"Breakpoint",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Breakpoint",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Breakpoint"},fn:"Breakpoint"},{a:2,n:"CollideConnected",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_CollideConnected",t:8,rt:$n[0].Boolean,fg:"CollideConnected",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_CollideConnected",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"CollideConnected"},fn:"CollideConnected"},{a:2,n:"JointType",t:16,rt:$n[6].JointType,g:{a:2,n:"get_JointType",t:8,rt:$n[6].JointType,fg:"JointType",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.JointType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.JointType))}},s:{a:3,n:"set_JointType",t:8,p:[$n[6].JointType],rt:$n[0].Void,fs:"JointType"},fn:"JointType"},{a:2,n:"UserData",t:16,rt:$n[0].Object,g:{a:2,n:"get_UserData",t:8,rt:$n[0].Object,fg:"UserData"},s:{a:2,n:"set_UserData",t:8,p:[$n[0].Object],rt:$n[0].Void,fs:"UserData"},fn:"UserData"},{ab:!0,a:2,n:"WorldAnchorA",t:16,rt:$n[1].Vector2,g:{ab:!0,a:2,n:"get_WorldAnchorA",t:8,rt:$n[1].Vector2,fg:"WorldAnchorA"},s:{ab:!0,a:2,n:"set_WorldAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorA"},fn:"WorldAnchorA"},{ab:!0,a:2,n:"WorldAnchorB",t:16,rt:$n[1].Vector2,g:{ab:!0,a:2,n:"get_WorldAnchorB",t:8,rt:$n[1].Vector2,fg:"WorldAnchorB"},s:{ab:!0,a:2,n:"set_WorldAnchorB",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorB"},fn:"WorldAnchorB"},{a:4,n:"EdgeA",t:4,rt:$n[6].JointEdge,sn:"EdgeA"},{a:4,n:"EdgeB",t:4,rt:$n[6].JointEdge,sn:"EdgeB"},{a:2,n:"Enabled",t:4,rt:$n[0].Boolean,sn:"Enabled",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:4,n:"IslandFlag",t:4,rt:$n[0].Boolean,sn:"IslandFlag",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_breakpoint",t:4,rt:$n[0].Single,sn:"_breakpoint",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_breakpointSquared",t:4,rt:$n[0].Double,sn:"_breakpointSquared",box:function($v){return Bridge.box($v,System.Double,System.Double.format,System.Double.getHashCode)}},{a:2,n:"Broke",t:2,ad:{a:2,n:"add_Broke",t:8,pi:[{n:"value",pt:Function,ps:0}],sn:"addBroke",rt:$n[0].Void,p:[Function]},r:{a:2,n:"remove_Broke",t:8,pi:[{n:"value",pt:Function,ps:0}],sn:"removeBroke",rt:$n[0].Void,p:[Function]}}]}},$n);$m("FarseerPhysics.Dynamics.Joints.MotorJoint",function(){return{att:1048577,a:2,m:[{a:4,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[3].Body,$n[3].Body,$n[0].Boolean],pi:[{n:"bodyA",pt:$n[3].Body,ps:0},{n:"bodyB",pt:$n[3].Body,ps:1},{n:"useWorldCoordinates",dv:!1,o:!0,pt:$n[0].Boolean,ps:2}],sn:"$ctor1"},{ov:!0,a:2,n:"GetReactionForce",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionForce",rt:$n[1].Vector2,p:[$n[0].Single]},{ov:!0,a:2,n:"GetReactionTorque",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionTorque",rt:$n[0].Single,p:[$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{ov:!0,a:4,n:"InitVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"InitVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{ov:!0,a:4,n:"SolvePositionConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolvePositionConstraints",rt:$n[0].Boolean,p:[$n[3].SolverData],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:4,n:"SolveVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolveVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{a:2,n:"AngularOffset",t:16,rt:$n[0].Single,g:{a:2,n:"get_AngularOffset",t:8,rt:$n[0].Single,fg:"AngularOffset",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_AngularOffset",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"AngularOffset"},fn:"AngularOffset"},{a:4,n:"CorrectionFactor",t:16,rt:$n[0].Single,g:{a:4,n:"get_CorrectionFactor",t:8,rt:$n[0].Single,fg:"CorrectionFactor",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:4,n:"set_CorrectionFactor",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"CorrectionFactor"},fn:"CorrectionFactor"},{a:2,n:"LinearOffset",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LinearOffset",t:8,rt:$n[1].Vector2,fg:"LinearOffset"},s:{a:2,n:"set_LinearOffset",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LinearOffset"},fn:"LinearOffset"},{a:2,n:"MaxForce",t:16,rt:$n[0].Single,g:{a:2,n:"get_MaxForce",t:8,rt:$n[0].Single,fg:"MaxForce",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_MaxForce",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"MaxForce"},fn:"MaxForce"},{a:2,n:"MaxTorque",t:16,rt:$n[0].Single,g:{a:2,n:"get_MaxTorque",t:8,rt:$n[0].Single,fg:"MaxTorque",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_MaxTorque",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"MaxTorque"},fn:"MaxTorque"},{ov:!0,a:2,n:"WorldAnchorA",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,n:"get_WorldAnchorA",t:8,rt:$n[1].Vector2,fg:"WorldAnchorA"},s:{ov:!0,a:2,n:"set_WorldAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorA"},fn:"WorldAnchorA"},{ov:!0,a:2,n:"WorldAnchorB",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,n:"get_WorldAnchorB",t:8,rt:$n[1].Vector2,fg:"WorldAnchorB"},s:{ov:!0,a:2,n:"set_WorldAnchorB",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorB"},fn:"WorldAnchorB"},{a:1,n:"_angularError",t:4,rt:$n[0].Single,sn:"_angularError",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_angularImpulse",t:4,rt:$n[0].Single,sn:"_angularImpulse",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_angularMass",t:4,rt:$n[0].Single,sn:"_angularMass",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_angularOffset",t:4,rt:$n[0].Single,sn:"_angularOffset",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_indexA",t:4,rt:$n[0].Int32,sn:"_indexA",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_indexB",t:4,rt:$n[0].Int32,sn:"_indexB",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_invIA",t:4,rt:$n[0].Single,sn:"_invIA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invIB",t:4,rt:$n[0].Single,sn:"_invIB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invMassA",t:4,rt:$n[0].Single,sn:"_invMassA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invMassB",t:4,rt:$n[0].Single,sn:"_invMassB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_linearError",t:4,rt:$n[1].Vector2,sn:"_linearError"},{a:1,n:"_linearImpulse",t:4,rt:$n[1].Vector2,sn:"_linearImpulse"},{a:1,n:"_linearMass",t:4,rt:$n[4].Mat22,sn:"_linearMass"},{a:1,n:"_linearOffset",t:4,rt:$n[1].Vector2,sn:"_linearOffset"},{a:1,n:"_localCenterA",t:4,rt:$n[1].Vector2,sn:"_localCenterA"},{a:1,n:"_localCenterB",t:4,rt:$n[1].Vector2,sn:"_localCenterB"},{a:1,n:"_maxForce",t:4,rt:$n[0].Single,sn:"_maxForce",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_maxTorque",t:4,rt:$n[0].Single,sn:"_maxTorque",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_rA",t:4,rt:$n[1].Vector2,sn:"_rA"},{a:1,n:"_rB",t:4,rt:$n[1].Vector2,sn:"_rB"}]}},$n);$m("FarseerPhysics.Dynamics.Joints.PrismaticJoint",function(){return{att:1048577,a:2,m:[{a:4,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[3].Body,$n[3].Body,$n[1].Vector2,$n[1].Vector2,$n[0].Boolean],pi:[{n:"bodyA",pt:$n[3].Body,ps:0},{n:"bodyB",pt:$n[3].Body,ps:1},{n:"anchor",pt:$n[1].Vector2,ps:2},{n:"axis",pt:$n[1].Vector2,ps:3},{n:"useWorldCoordinates",dv:!1,o:!0,pt:$n[0].Boolean,ps:4}],sn:"$ctor2"},{a:2,n:".ctor",t:1,p:[$n[3].Body,$n[3].Body,$n[1].Vector2,$n[1].Vector2,$n[1].Vector2,$n[0].Boolean],pi:[{n:"bodyA",pt:$n[3].Body,ps:0},{n:"bodyB",pt:$n[3].Body,ps:1},{n:"anchorA",pt:$n[1].Vector2,ps:2},{n:"anchorB",pt:$n[1].Vector2,ps:3},{n:"axis",pt:$n[1].Vector2,ps:4},{n:"useWorldCoordinates",dv:!1,o:!0,pt:$n[0].Boolean,ps:5}],sn:"$ctor1"},{a:2,n:"GetMotorForce",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetMotorForce",rt:$n[0].Single,p:[$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{ov:!0,a:2,n:"GetReactionForce",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionForce",rt:$n[1].Vector2,p:[$n[0].Single]},{ov:!0,a:2,n:"GetReactionTorque",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionTorque",rt:$n[0].Single,p:[$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{ov:!0,a:4,n:"InitVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"InitVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{a:1,n:"Initialize",t:8,pi:[{n:"localAnchorA",pt:$n[1].Vector2,ps:0},{n:"localAnchorB",pt:$n[1].Vector2,ps:1},{n:"axis",pt:$n[1].Vector2,ps:2},{n:"useWorldCoordinates",pt:$n[0].Boolean,ps:3}],sn:"Initialize",rt:$n[0].Void,p:[$n[1].Vector2,$n[1].Vector2,$n[1].Vector2,$n[0].Boolean]},{a:2,n:"SetLimits",t:8,pi:[{n:"lower",pt:$n[0].Single,ps:0},{n:"upper",pt:$n[0].Single,ps:1}],sn:"SetLimits",rt:$n[0].Void,p:[$n[0].Single,$n[0].Single]},{ov:!0,a:4,n:"SolvePositionConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolvePositionConstraints",rt:$n[0].Boolean,p:[$n[3].SolverData],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:4,n:"SolveVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolveVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{a:2,n:"Axis",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_Axis",t:8,rt:$n[1].Vector2,fg:"Axis"},s:{a:2,n:"set_Axis",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"Axis"},fn:"Axis"},{a:2,n:"JointSpeed",t:16,rt:$n[0].Single,g:{a:2,n:"get_JointSpeed",t:8,rt:$n[0].Single,fg:"JointSpeed",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},fn:"JointSpeed"},{a:2,n:"JointTranslation",t:16,rt:$n[0].Single,g:{a:2,n:"get_JointTranslation",t:8,rt:$n[0].Single,fg:"JointTranslation",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},fn:"JointTranslation"},{a:2,n:"LimitEnabled",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_LimitEnabled",t:8,rt:$n[0].Boolean,fg:"LimitEnabled",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_LimitEnabled",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"LimitEnabled"},fn:"LimitEnabled"},{a:2,n:"LocalAnchorA",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LocalAnchorA",t:8,rt:$n[1].Vector2,fg:"LocalAnchorA"},s:{a:2,n:"set_LocalAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LocalAnchorA"},fn:"LocalAnchorA"},{a:2,n:"LocalAnchorB",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LocalAnchorB",t:8,rt:$n[1].Vector2,fg:"LocalAnchorB"},s:{a:2,n:"set_LocalAnchorB",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LocalAnchorB"},fn:"LocalAnchorB"},{a:2,n:"LocalXAxis",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LocalXAxis",t:8,rt:$n[1].Vector2,fg:"LocalXAxis"},s:{a:1,n:"set_LocalXAxis",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LocalXAxis"},fn:"LocalXAxis"},{a:2,n:"LowerLimit",t:16,rt:$n[0].Single,g:{a:2,n:"get_LowerLimit",t:8,rt:$n[0].Single,fg:"LowerLimit",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_LowerLimit",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"LowerLimit"},fn:"LowerLimit"},{a:2,n:"MaxMotorForce",t:16,rt:$n[0].Single,g:{a:2,n:"get_MaxMotorForce",t:8,rt:$n[0].Single,fg:"MaxMotorForce",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_MaxMotorForce",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"MaxMotorForce"},fn:"MaxMotorForce"},{a:2,n:"MotorEnabled",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_MotorEnabled",t:8,rt:$n[0].Boolean,fg:"MotorEnabled",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_MotorEnabled",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"MotorEnabled"},fn:"MotorEnabled"},{a:2,n:"MotorImpulse",t:16,rt:$n[0].Single,g:{a:2,n:"get_MotorImpulse",t:8,rt:$n[0].Single,fg:"MotorImpulse",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_MotorImpulse",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"MotorImpulse"},fn:"MotorImpulse"},{a:2,n:"MotorSpeed",t:16,rt:$n[0].Single,g:{a:2,n:"get_MotorSpeed",t:8,rt:$n[0].Single,fg:"MotorSpeed",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_MotorSpeed",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"MotorSpeed"},fn:"MotorSpeed"},{a:2,n:"ReferenceAngle",t:16,rt:$n[0].Single,g:{a:2,n:"get_ReferenceAngle",t:8,rt:$n[0].Single,fg:"ReferenceAngle",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_ReferenceAngle",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"ReferenceAngle"},fn:"ReferenceAngle"},{a:2,n:"UpperLimit",t:16,rt:$n[0].Single,g:{a:2,n:"get_UpperLimit",t:8,rt:$n[0].Single,fg:"UpperLimit",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_UpperLimit",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"UpperLimit"},fn:"UpperLimit"},{ov:!0,a:2,n:"WorldAnchorA",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,n:"get_WorldAnchorA",t:8,rt:$n[1].Vector2,fg:"WorldAnchorA"},s:{ov:!0,a:2,n:"set_WorldAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorA"},fn:"WorldAnchorA"},{ov:!0,a:2,n:"WorldAnchorB",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,n:"get_WorldAnchorB",t:8,rt:$n[1].Vector2,fg:"WorldAnchorB"},s:{ov:!0,a:2,n:"set_WorldAnchorB",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorB"},fn:"WorldAnchorB"},{a:1,n:"_K",t:4,rt:$n[4].Mat33,sn:"_K"},{a:1,n:"_a1",t:4,rt:$n[0].Single,sn:"_a1",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_a2",t:4,rt:$n[0].Single,sn:"_a2",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_axis",t:4,rt:$n[1].Vector2,sn:"_axis"},{a:1,n:"_axis1",t:4,rt:$n[1].Vector2,sn:"_axis1"},{a:1,n:"_enableLimit",t:4,rt:$n[0].Boolean,sn:"_enableLimit",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_enableMotor",t:4,rt:$n[0].Boolean,sn:"_enableMotor",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_impulse",t:4,rt:$n[1].Vector3,sn:"_impulse"},{a:1,n:"_indexA",t:4,rt:$n[0].Int32,sn:"_indexA",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_indexB",t:4,rt:$n[0].Int32,sn:"_indexB",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_invIA",t:4,rt:$n[0].Single,sn:"_invIA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invIB",t:4,rt:$n[0].Single,sn:"_invIB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invMassA",t:4,rt:$n[0].Single,sn:"_invMassA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invMassB",t:4,rt:$n[0].Single,sn:"_invMassB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_limitState",t:4,rt:$n[6].LimitState,sn:"_limitState",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.LimitState,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.LimitState))}},{a:1,n:"_localCenterA",t:4,rt:$n[1].Vector2,sn:"_localCenterA"},{a:1,n:"_localCenterB",t:4,rt:$n[1].Vector2,sn:"_localCenterB"},{a:1,n:"_localYAxisA",t:4,rt:$n[1].Vector2,sn:"_localYAxisA"},{a:1,n:"_lowerTranslation",t:4,rt:$n[0].Single,sn:"_lowerTranslation",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_maxMotorForce",t:4,rt:$n[0].Single,sn:"_maxMotorForce",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_motorMass",t:4,rt:$n[0].Single,sn:"_motorMass",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_motorSpeed",t:4,rt:$n[0].Single,sn:"_motorSpeed",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_perp",t:4,rt:$n[1].Vector2,sn:"_perp"},{a:1,n:"_s1",t:4,rt:$n[0].Single,sn:"_s1",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_s2",t:4,rt:$n[0].Single,sn:"_s2",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_upperTranslation",t:4,rt:$n[0].Single,sn:"_upperTranslation",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Dynamics.Joints.PulleyJoint",function(){return{att:1048577,a:2,m:[{a:4,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[3].Body,$n[3].Body,$n[1].Vector2,$n[1].Vector2,$n[1].Vector2,$n[1].Vector2,$n[0].Single,$n[0].Boolean],pi:[{n:"bodyA",pt:$n[3].Body,ps:0},{n:"bodyB",pt:$n[3].Body,ps:1},{n:"anchorA",pt:$n[1].Vector2,ps:2},{n:"anchorB",pt:$n[1].Vector2,ps:3},{n:"worldAnchorA",pt:$n[1].Vector2,ps:4},{n:"worldAnchorB",pt:$n[1].Vector2,ps:5},{n:"ratio",pt:$n[0].Single,ps:6},{n:"useWorldCoordinates",dv:!1,o:!0,pt:$n[0].Boolean,ps:7}],sn:"$ctor1"},{ov:!0,a:2,n:"GetReactionForce",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionForce",rt:$n[1].Vector2,p:[$n[0].Single]},{ov:!0,a:2,n:"GetReactionTorque",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionTorque",rt:$n[0].Single,p:[$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{ov:!0,a:4,n:"InitVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"InitVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{ov:!0,a:4,n:"SolvePositionConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolvePositionConstraints",rt:$n[0].Boolean,p:[$n[3].SolverData],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:4,n:"SolveVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolveVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{a:4,n:"Constant",t:16,rt:$n[0].Single,g:{a:4,n:"get_Constant",t:8,rt:$n[0].Single,fg:"Constant",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:4,n:"set_Constant",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Constant"},fn:"Constant"},{a:2,n:"CurrentLengthA",t:16,rt:$n[0].Single,g:{a:2,n:"get_CurrentLengthA",t:8,rt:$n[0].Single,fg:"CurrentLengthA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},fn:"CurrentLengthA"},{a:2,n:"CurrentLengthB",t:16,rt:$n[0].Single,g:{a:2,n:"get_CurrentLengthB",t:8,rt:$n[0].Single,fg:"CurrentLengthB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},fn:"CurrentLengthB"},{a:2,n:"LengthA",t:16,rt:$n[0].Single,g:{a:2,n:"get_LengthA",t:8,rt:$n[0].Single,fg:"LengthA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_LengthA",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"LengthA"},fn:"LengthA"},{a:2,n:"LengthB",t:16,rt:$n[0].Single,g:{a:2,n:"get_LengthB",t:8,rt:$n[0].Single,fg:"LengthB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_LengthB",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"LengthB"},fn:"LengthB"},{a:2,n:"LocalAnchorA",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LocalAnchorA",t:8,rt:$n[1].Vector2,fg:"LocalAnchorA"},s:{a:2,n:"set_LocalAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LocalAnchorA"},fn:"LocalAnchorA"},{a:2,n:"LocalAnchorB",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LocalAnchorB",t:8,rt:$n[1].Vector2,fg:"LocalAnchorB"},s:{a:2,n:"set_LocalAnchorB",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LocalAnchorB"},fn:"LocalAnchorB"},{a:2,n:"Ratio",t:16,rt:$n[0].Single,g:{a:2,n:"get_Ratio",t:8,rt:$n[0].Single,fg:"Ratio",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Ratio",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Ratio"},fn:"Ratio"},{ov:!0,a:2,sl:!0,n:"WorldAnchorA",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,sl:!0,n:"get_WorldAnchorA",t:8,rt:$n[1].Vector2,fg:"WorldAnchorA"},s:{ov:!0,a:2,sl:!0,n:"set_WorldAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorA"},fn:"WorldAnchorA"},{ov:!0,a:2,sl:!0,n:"WorldAnchorB",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,sl:!0,n:"get_WorldAnchorB",t:8,rt:$n[1].Vector2,fg:"WorldAnchorB"},s:{ov:!0,a:2,sl:!0,n:"set_WorldAnchorB",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorB"},fn:"WorldAnchorB"},{a:1,n:"_impulse",t:4,rt:$n[0].Single,sn:"_impulse",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_indexA",t:4,rt:$n[0].Int32,sn:"_indexA",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_indexB",t:4,rt:$n[0].Int32,sn:"_indexB",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_invIA",t:4,rt:$n[0].Single,sn:"_invIA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invIB",t:4,rt:$n[0].Single,sn:"_invIB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invMassA",t:4,rt:$n[0].Single,sn:"_invMassA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invMassB",t:4,rt:$n[0].Single,sn:"_invMassB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_localCenterA",t:4,rt:$n[1].Vector2,sn:"_localCenterA"},{a:1,n:"_localCenterB",t:4,rt:$n[1].Vector2,sn:"_localCenterB"},{a:1,n:"_mass",t:4,rt:$n[0].Single,sn:"_mass",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_rA",t:4,rt:$n[1].Vector2,sn:"_rA"},{a:1,n:"_rB",t:4,rt:$n[1].Vector2,sn:"_rB"},{a:1,n:"_uA",t:4,rt:$n[1].Vector2,sn:"_uA"},{a:1,n:"_uB",t:4,rt:$n[1].Vector2,sn:"_uB"}]}},$n);$m("FarseerPhysics.Dynamics.Joints.RevoluteJoint",function(){return{att:1048577,a:2,m:[{a:4,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[3].Body,$n[3].Body,$n[1].Vector2,$n[0].Boolean],pi:[{n:"bodyA",pt:$n[3].Body,ps:0},{n:"bodyB",pt:$n[3].Body,ps:1},{n:"anchor",pt:$n[1].Vector2,ps:2},{n:"useWorldCoordinates",dv:!1,o:!0,pt:$n[0].Boolean,ps:3}],sn:"$ctor2"},{a:2,n:".ctor",t:1,p:[$n[3].Body,$n[3].Body,$n[1].Vector2,$n[1].Vector2,$n[0].Boolean],pi:[{n:"bodyA",pt:$n[3].Body,ps:0},{n:"bodyB",pt:$n[3].Body,ps:1},{n:"anchorA",pt:$n[1].Vector2,ps:2},{n:"anchorB",pt:$n[1].Vector2,ps:3},{n:"useWorldCoordinates",dv:!1,o:!0,pt:$n[0].Boolean,ps:4}],sn:"$ctor1"},{a:2,n:"GetMotorTorque",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetMotorTorque",rt:$n[0].Single,p:[$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{ov:!0,a:2,n:"GetReactionForce",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionForce",rt:$n[1].Vector2,p:[$n[0].Single]},{ov:!0,a:2,n:"GetReactionTorque",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionTorque",rt:$n[0].Single,p:[$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{ov:!0,a:4,n:"InitVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"InitVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{a:2,n:"SetLimits",t:8,pi:[{n:"lower",pt:$n[0].Single,ps:0},{n:"upper",pt:$n[0].Single,ps:1}],sn:"SetLimits",rt:$n[0].Void,p:[$n[0].Single,$n[0].Single]},{ov:!0,a:4,n:"SolvePositionConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolvePositionConstraints",rt:$n[0].Boolean,p:[$n[3].SolverData],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:4,n:"SolveVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolveVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{a:2,n:"JointAngle",t:16,rt:$n[0].Single,g:{a:2,n:"get_JointAngle",t:8,rt:$n[0].Single,fg:"JointAngle",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},fn:"JointAngle"},{a:2,n:"JointSpeed",t:16,rt:$n[0].Single,g:{a:2,n:"get_JointSpeed",t:8,rt:$n[0].Single,fg:"JointSpeed",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},fn:"JointSpeed"},{a:2,n:"LimitEnabled",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_LimitEnabled",t:8,rt:$n[0].Boolean,fg:"LimitEnabled",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_LimitEnabled",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"LimitEnabled"},fn:"LimitEnabled"},{a:2,n:"LocalAnchorA",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LocalAnchorA",t:8,rt:$n[1].Vector2,fg:"LocalAnchorA"},s:{a:2,n:"set_LocalAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LocalAnchorA"},fn:"LocalAnchorA"},{a:2,n:"LocalAnchorB",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LocalAnchorB",t:8,rt:$n[1].Vector2,fg:"LocalAnchorB"},s:{a:2,n:"set_LocalAnchorB",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LocalAnchorB"},fn:"LocalAnchorB"},{a:2,n:"LowerLimit",t:16,rt:$n[0].Single,g:{a:2,n:"get_LowerLimit",t:8,rt:$n[0].Single,fg:"LowerLimit",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_LowerLimit",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"LowerLimit"},fn:"LowerLimit"},{a:2,n:"MaxMotorTorque",t:16,rt:$n[0].Single,g:{a:2,n:"get_MaxMotorTorque",t:8,rt:$n[0].Single,fg:"MaxMotorTorque",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_MaxMotorTorque",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"MaxMotorTorque"},fn:"MaxMotorTorque"},{a:2,n:"MotorEnabled",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_MotorEnabled",t:8,rt:$n[0].Boolean,fg:"MotorEnabled",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_MotorEnabled",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"MotorEnabled"},fn:"MotorEnabled"},{a:2,n:"MotorImpulse",t:16,rt:$n[0].Single,g:{a:2,n:"get_MotorImpulse",t:8,rt:$n[0].Single,fg:"MotorImpulse",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_MotorImpulse",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"MotorImpulse"},fn:"MotorImpulse"},{a:2,n:"MotorSpeed",t:16,rt:$n[0].Single,g:{a:2,n:"get_MotorSpeed",t:8,rt:$n[0].Single,fg:"MotorSpeed",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_MotorSpeed",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"MotorSpeed"},fn:"MotorSpeed"},{a:2,n:"ReferenceAngle",t:16,rt:$n[0].Single,g:{a:2,n:"get_ReferenceAngle",t:8,rt:$n[0].Single,fg:"ReferenceAngle",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_ReferenceAngle",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"ReferenceAngle"},fn:"ReferenceAngle"},{a:2,n:"UpperLimit",t:16,rt:$n[0].Single,g:{a:2,n:"get_UpperLimit",t:8,rt:$n[0].Single,fg:"UpperLimit",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_UpperLimit",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"UpperLimit"},fn:"UpperLimit"},{ov:!0,a:2,n:"WorldAnchorA",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,n:"get_WorldAnchorA",t:8,rt:$n[1].Vector2,fg:"WorldAnchorA"},s:{ov:!0,a:2,n:"set_WorldAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorA"},fn:"WorldAnchorA"},{ov:!0,a:2,n:"WorldAnchorB",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,n:"get_WorldAnchorB",t:8,rt:$n[1].Vector2,fg:"WorldAnchorB"},s:{ov:!0,a:2,n:"set_WorldAnchorB",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorB"},fn:"WorldAnchorB"},{a:1,n:"_enableLimit",t:4,rt:$n[0].Boolean,sn:"_enableLimit",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_enableMotor",t:4,rt:$n[0].Boolean,sn:"_enableMotor",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_impulse",t:4,rt:$n[1].Vector3,sn:"_impulse"},{a:1,n:"_indexA",t:4,rt:$n[0].Int32,sn:"_indexA",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_indexB",t:4,rt:$n[0].Int32,sn:"_indexB",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_invIA",t:4,rt:$n[0].Single,sn:"_invIA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invIB",t:4,rt:$n[0].Single,sn:"_invIB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invMassA",t:4,rt:$n[0].Single,sn:"_invMassA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invMassB",t:4,rt:$n[0].Single,sn:"_invMassB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_limitState",t:4,rt:$n[6].LimitState,sn:"_limitState",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.LimitState,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.LimitState))}},{a:1,n:"_localCenterA",t:4,rt:$n[1].Vector2,sn:"_localCenterA"},{a:1,n:"_localCenterB",t:4,rt:$n[1].Vector2,sn:"_localCenterB"},{a:1,n:"_lowerAngle",t:4,rt:$n[0].Single,sn:"_lowerAngle",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_mass",t:4,rt:$n[4].Mat33,sn:"_mass"},{a:1,n:"_maxMotorTorque",t:4,rt:$n[0].Single,sn:"_maxMotorTorque",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_motorImpulse",t:4,rt:$n[0].Single,sn:"_motorImpulse",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_motorMass",t:4,rt:$n[0].Single,sn:"_motorMass",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_motorSpeed",t:4,rt:$n[0].Single,sn:"_motorSpeed",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_rA",t:4,rt:$n[1].Vector2,sn:"_rA"},{a:1,n:"_rB",t:4,rt:$n[1].Vector2,sn:"_rB"},{a:1,n:"_referenceAngle",t:4,rt:$n[0].Single,sn:"_referenceAngle",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_upperAngle",t:4,rt:$n[0].Single,sn:"_upperAngle",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Dynamics.Joints.RopeJoint",function(){return{att:1048577,a:2,m:[{a:4,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[3].Body,$n[3].Body,$n[1].Vector2,$n[1].Vector2,$n[0].Boolean],pi:[{n:"bodyA",pt:$n[3].Body,ps:0},{n:"bodyB",pt:$n[3].Body,ps:1},{n:"anchorA",pt:$n[1].Vector2,ps:2},{n:"anchorB",pt:$n[1].Vector2,ps:3},{n:"useWorldCoordinates",dv:!1,o:!0,pt:$n[0].Boolean,ps:4}],sn:"$ctor1"},{ov:!0,a:2,n:"GetReactionForce",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionForce",rt:$n[1].Vector2,p:[$n[0].Single]},{ov:!0,a:2,n:"GetReactionTorque",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionTorque",rt:$n[0].Single,p:[$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{ov:!0,a:4,n:"InitVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"InitVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{ov:!0,a:4,n:"SolvePositionConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolvePositionConstraints",rt:$n[0].Boolean,p:[$n[3].SolverData],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:4,n:"SolveVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolveVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{a:2,n:"LocalAnchorA",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LocalAnchorA",t:8,rt:$n[1].Vector2,fg:"LocalAnchorA"},s:{a:2,n:"set_LocalAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LocalAnchorA"},fn:"LocalAnchorA"},{a:2,n:"LocalAnchorB",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LocalAnchorB",t:8,rt:$n[1].Vector2,fg:"LocalAnchorB"},s:{a:2,n:"set_LocalAnchorB",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LocalAnchorB"},fn:"LocalAnchorB"},{a:2,n:"MaxLength",t:16,rt:$n[0].Single,g:{a:2,n:"get_MaxLength",t:8,rt:$n[0].Single,fg:"MaxLength",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_MaxLength",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"MaxLength"},fn:"MaxLength"},{a:2,n:"State",t:16,rt:$n[6].LimitState,g:{a:2,n:"get_State",t:8,rt:$n[6].LimitState,fg:"State",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Joints.LimitState,System.Enum.toStringFn(FarseerPhysics.Dynamics.Joints.LimitState))}},s:{a:1,n:"set_State",t:8,p:[$n[6].LimitState],rt:$n[0].Void,fs:"State"},fn:"State"},{ov:!0,a:2,sl:!0,n:"WorldAnchorA",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,sl:!0,n:"get_WorldAnchorA",t:8,rt:$n[1].Vector2,fg:"WorldAnchorA"},s:{ov:!0,a:2,sl:!0,n:"set_WorldAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorA"},fn:"WorldAnchorA"},{ov:!0,a:2,sl:!0,n:"WorldAnchorB",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,sl:!0,n:"get_WorldAnchorB",t:8,rt:$n[1].Vector2,fg:"WorldAnchorB"},s:{ov:!0,a:2,sl:!0,n:"set_WorldAnchorB",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorB"},fn:"WorldAnchorB"},{a:1,n:"_impulse",t:4,rt:$n[0].Single,sn:"_impulse",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_indexA",t:4,rt:$n[0].Int32,sn:"_indexA",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_indexB",t:4,rt:$n[0].Int32,sn:"_indexB",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_invIA",t:4,rt:$n[0].Single,sn:"_invIA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invIB",t:4,rt:$n[0].Single,sn:"_invIB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invMassA",t:4,rt:$n[0].Single,sn:"_invMassA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invMassB",t:4,rt:$n[0].Single,sn:"_invMassB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_length",t:4,rt:$n[0].Single,sn:"_length",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_localCenterA",t:4,rt:$n[1].Vector2,sn:"_localCenterA"},{a:1,n:"_localCenterB",t:4,rt:$n[1].Vector2,sn:"_localCenterB"},{a:1,n:"_mass",t:4,rt:$n[0].Single,sn:"_mass",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_rA",t:4,rt:$n[1].Vector2,sn:"_rA"},{a:1,n:"_rB",t:4,rt:$n[1].Vector2,sn:"_rB"},{a:1,n:"_u",t:4,rt:$n[1].Vector2,sn:"_u"}]}},$n);$m("FarseerPhysics.Dynamics.Joints.WeldJoint",function(){return{att:1048577,a:2,m:[{a:4,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[3].Body,$n[3].Body,$n[1].Vector2,$n[1].Vector2,$n[0].Boolean],pi:[{n:"bodyA",pt:$n[3].Body,ps:0},{n:"bodyB",pt:$n[3].Body,ps:1},{n:"anchorA",pt:$n[1].Vector2,ps:2},{n:"anchorB",pt:$n[1].Vector2,ps:3},{n:"useWorldCoordinates",dv:!1,o:!0,pt:$n[0].Boolean,ps:4}],sn:"$ctor1"},{ov:!0,a:2,n:"GetReactionForce",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionForce",rt:$n[1].Vector2,p:[$n[0].Single]},{ov:!0,a:2,n:"GetReactionTorque",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionTorque",rt:$n[0].Single,p:[$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{ov:!0,a:4,n:"InitVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"InitVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{ov:!0,a:4,n:"SolvePositionConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolvePositionConstraints",rt:$n[0].Boolean,p:[$n[3].SolverData],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:4,n:"SolveVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolveVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{a:2,n:"DampingRatio",t:16,rt:$n[0].Single,g:{a:2,n:"get_DampingRatio",t:8,rt:$n[0].Single,fg:"DampingRatio",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_DampingRatio",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"DampingRatio"},fn:"DampingRatio"},{a:2,n:"FrequencyHz",t:16,rt:$n[0].Single,g:{a:2,n:"get_FrequencyHz",t:8,rt:$n[0].Single,fg:"FrequencyHz",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_FrequencyHz",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"FrequencyHz"},fn:"FrequencyHz"},{a:2,n:"LocalAnchorA",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LocalAnchorA",t:8,rt:$n[1].Vector2,fg:"LocalAnchorA"},s:{a:2,n:"set_LocalAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LocalAnchorA"},fn:"LocalAnchorA"},{a:2,n:"LocalAnchorB",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LocalAnchorB",t:8,rt:$n[1].Vector2,fg:"LocalAnchorB"},s:{a:2,n:"set_LocalAnchorB",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LocalAnchorB"},fn:"LocalAnchorB"},{a:2,n:"ReferenceAngle",t:16,rt:$n[0].Single,g:{a:2,n:"get_ReferenceAngle",t:8,rt:$n[0].Single,fg:"ReferenceAngle",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_ReferenceAngle",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"ReferenceAngle"},fn:"ReferenceAngle"},{ov:!0,a:2,n:"WorldAnchorA",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,n:"get_WorldAnchorA",t:8,rt:$n[1].Vector2,fg:"WorldAnchorA"},s:{ov:!0,a:2,n:"set_WorldAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorA"},fn:"WorldAnchorA"},{ov:!0,a:2,n:"WorldAnchorB",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,n:"get_WorldAnchorB",t:8,rt:$n[1].Vector2,fg:"WorldAnchorB"},s:{ov:!0,a:2,n:"set_WorldAnchorB",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorB"},fn:"WorldAnchorB"},{a:1,n:"_bias",t:4,rt:$n[0].Single,sn:"_bias",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_gamma",t:4,rt:$n[0].Single,sn:"_gamma",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_impulse",t:4,rt:$n[1].Vector3,sn:"_impulse"},{a:1,n:"_indexA",t:4,rt:$n[0].Int32,sn:"_indexA",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_indexB",t:4,rt:$n[0].Int32,sn:"_indexB",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_invIA",t:4,rt:$n[0].Single,sn:"_invIA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invIB",t:4,rt:$n[0].Single,sn:"_invIB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invMassA",t:4,rt:$n[0].Single,sn:"_invMassA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invMassB",t:4,rt:$n[0].Single,sn:"_invMassB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_localCenterA",t:4,rt:$n[1].Vector2,sn:"_localCenterA"},{a:1,n:"_localCenterB",t:4,rt:$n[1].Vector2,sn:"_localCenterB"},{a:1,n:"_mass",t:4,rt:$n[4].Mat33,sn:"_mass"},{a:1,n:"_rA",t:4,rt:$n[1].Vector2,sn:"_rA"},{a:1,n:"_rB",t:4,rt:$n[1].Vector2,sn:"_rB"}]}},$n);$m("FarseerPhysics.Dynamics.Joints.WheelJoint",function(){return{att:1048577,a:2,m:[{a:4,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[3].Body,$n[3].Body,$n[1].Vector2,$n[1].Vector2,$n[0].Boolean],pi:[{n:"bodyA",pt:$n[3].Body,ps:0},{n:"bodyB",pt:$n[3].Body,ps:1},{n:"anchor",pt:$n[1].Vector2,ps:2},{n:"axis",pt:$n[1].Vector2,ps:3},{n:"useWorldCoordinates",dv:!1,o:!0,pt:$n[0].Boolean,ps:4}],sn:"$ctor1"},{a:2,n:"GetMotorTorque",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetMotorTorque",rt:$n[0].Single,p:[$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{ov:!0,a:2,n:"GetReactionForce",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionForce",rt:$n[1].Vector2,p:[$n[0].Single]},{ov:!0,a:2,n:"GetReactionTorque",t:8,pi:[{n:"invDt",pt:$n[0].Single,ps:0}],sn:"GetReactionTorque",rt:$n[0].Single,p:[$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{ov:!0,a:4,n:"InitVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"InitVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{ov:!0,a:4,n:"SolvePositionConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolvePositionConstraints",rt:$n[0].Boolean,p:[$n[3].SolverData],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:4,n:"SolveVelocityConstraints",t:8,pi:[{n:"data",ref:!0,pt:$n[3].SolverData,ps:0}],sn:"SolveVelocityConstraints",rt:$n[0].Void,p:[$n[3].SolverData]},{a:2,n:"Axis",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_Axis",t:8,rt:$n[1].Vector2,fg:"Axis"},s:{a:2,n:"set_Axis",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"Axis"},fn:"Axis"},{a:2,n:"DampingRatio",t:16,rt:$n[0].Single,g:{a:2,n:"get_DampingRatio",t:8,rt:$n[0].Single,fg:"DampingRatio",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_DampingRatio",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"DampingRatio"},fn:"DampingRatio"},{a:2,n:"Frequency",t:16,rt:$n[0].Single,g:{a:2,n:"get_Frequency",t:8,rt:$n[0].Single,fg:"Frequency",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Frequency",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Frequency"},fn:"Frequency"},{a:2,n:"JointSpeed",t:16,rt:$n[0].Single,g:{a:2,n:"get_JointSpeed",t:8,rt:$n[0].Single,fg:"JointSpeed",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},fn:"JointSpeed"},{a:2,n:"JointTranslation",t:16,rt:$n[0].Single,g:{a:2,n:"get_JointTranslation",t:8,rt:$n[0].Single,fg:"JointTranslation",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},fn:"JointTranslation"},{a:2,n:"LocalAnchorA",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LocalAnchorA",t:8,rt:$n[1].Vector2,fg:"LocalAnchorA"},s:{a:2,n:"set_LocalAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LocalAnchorA"},fn:"LocalAnchorA"},{a:2,n:"LocalAnchorB",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LocalAnchorB",t:8,rt:$n[1].Vector2,fg:"LocalAnchorB"},s:{a:2,n:"set_LocalAnchorB",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LocalAnchorB"},fn:"LocalAnchorB"},{a:2,n:"LocalXAxis",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_LocalXAxis",t:8,rt:$n[1].Vector2,fg:"LocalXAxis"},s:{a:1,n:"set_LocalXAxis",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"LocalXAxis"},fn:"LocalXAxis"},{a:2,n:"MaxMotorTorque",t:16,rt:$n[0].Single,g:{a:2,n:"get_MaxMotorTorque",t:8,rt:$n[0].Single,fg:"MaxMotorTorque",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_MaxMotorTorque",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"MaxMotorTorque"},fn:"MaxMotorTorque"},{a:2,n:"MotorEnabled",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_MotorEnabled",t:8,rt:$n[0].Boolean,fg:"MotorEnabled",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_MotorEnabled",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"MotorEnabled"},fn:"MotorEnabled"},{a:2,n:"MotorSpeed",t:16,rt:$n[0].Single,g:{a:2,n:"get_MotorSpeed",t:8,rt:$n[0].Single,fg:"MotorSpeed",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_MotorSpeed",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"MotorSpeed"},fn:"MotorSpeed"},{ov:!0,a:2,n:"WorldAnchorA",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,n:"get_WorldAnchorA",t:8,rt:$n[1].Vector2,fg:"WorldAnchorA"},s:{ov:!0,a:2,n:"set_WorldAnchorA",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorA"},fn:"WorldAnchorA"},{ov:!0,a:2,n:"WorldAnchorB",t:16,rt:$n[1].Vector2,g:{ov:!0,a:2,n:"get_WorldAnchorB",t:8,rt:$n[1].Vector2,fg:"WorldAnchorB"},s:{ov:!0,a:2,n:"set_WorldAnchorB",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"WorldAnchorB"},fn:"WorldAnchorB"},{a:1,n:"_ax",t:4,rt:$n[1].Vector2,sn:"_ax"},{a:1,n:"_axis",t:4,rt:$n[1].Vector2,sn:"_axis"},{a:1,n:"_ay",t:4,rt:$n[1].Vector2,sn:"_ay"},{a:1,n:"_bias",t:4,rt:$n[0].Single,sn:"_bias",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_enableMotor",t:4,rt:$n[0].Boolean,sn:"_enableMotor",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_gamma",t:4,rt:$n[0].Single,sn:"_gamma",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_impulse",t:4,rt:$n[0].Single,sn:"_impulse",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_indexA",t:4,rt:$n[0].Int32,sn:"_indexA",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_indexB",t:4,rt:$n[0].Int32,sn:"_indexB",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_invIA",t:4,rt:$n[0].Single,sn:"_invIA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invIB",t:4,rt:$n[0].Single,sn:"_invIB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invMassA",t:4,rt:$n[0].Single,sn:"_invMassA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_invMassB",t:4,rt:$n[0].Single,sn:"_invMassB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_localCenterA",t:4,rt:$n[1].Vector2,sn:"_localCenterA"},{a:1,n:"_localCenterB",t:4,rt:$n[1].Vector2,sn:"_localCenterB"},{a:1,n:"_localYAxis",t:4,rt:$n[1].Vector2,sn:"_localYAxis"},{a:1,n:"_mass",t:4,rt:$n[0].Single,sn:"_mass",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_maxMotorTorque",t:4,rt:$n[0].Single,sn:"_maxMotorTorque",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_motorImpulse",t:4,rt:$n[0].Single,sn:"_motorImpulse",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_motorMass",t:4,rt:$n[0].Single,sn:"_motorMass",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_motorSpeed",t:4,rt:$n[0].Single,sn:"_motorSpeed",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_sAx",t:4,rt:$n[0].Single,sn:"_sAx",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_sAy",t:4,rt:$n[0].Single,sn:"_sAy",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_sBx",t:4,rt:$n[0].Single,sn:"_sBx",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_sBy",t:4,rt:$n[0].Single,sn:"_sBy",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_springImpulse",t:4,rt:$n[0].Single,sn:"_springImpulse",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_springMass",t:4,rt:$n[0].Single,sn:"_springMass",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Dynamics.Contacts.ContactEdge",function(){return{att:1048833,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Contact",t:4,rt:$n[8].Contact,sn:"Contact"},{a:2,n:"Next",t:4,rt:$n[8].ContactEdge,sn:"Next"},{a:2,n:"Other",t:4,rt:$n[3].Body,sn:"Other"},{a:2,n:"Prev",t:4,rt:$n[8].ContactEdge,sn:"Prev"}]}},$n);$m("FarseerPhysics.Dynamics.Contacts.Contact",function(){return{nested:[$n[8].Contact.ContactType],att:1048577,a:2,m:[{a:1,n:".ctor",t:1,p:[$n[3].Fixture,$n[0].Int32,$n[3].Fixture,$n[0].Int32],pi:[{n:"fA",pt:$n[3].Fixture,ps:0},{n:"indexA",pt:$n[0].Int32,ps:1},{n:"fB",pt:$n[3].Fixture,ps:2},{n:"indexB",pt:$n[0].Int32,ps:3}],sn:"ctor"},{a:4,n:"Create",is:!0,t:8,pi:[{n:"fixtureA",pt:$n[3].Fixture,ps:0},{n:"indexA",pt:$n[0].Int32,ps:1},{n:"fixtureB",pt:$n[3].Fixture,ps:2},{n:"indexB",pt:$n[0].Int32,ps:3}],sn:"Create",rt:$n[8].Contact,p:[$n[3].Fixture,$n[0].Int32,$n[3].Fixture,$n[0].Int32]},{a:4,n:"Destroy",t:8,sn:"Destroy",rt:$n[0].Void},{a:1,n:"Evaluate",t:8,pi:[{n:"manifold",ref:!0,pt:$n[11].Manifold,ps:0},{n:"transformA",ref:!0,pt:$n[4].Transform,ps:1},{n:"transformB",ref:!0,pt:$n[4].Transform,ps:2}],sn:"Evaluate",rt:$n[0].Void,p:[$n[11].Manifold,$n[4].Transform,$n[4].Transform]},{a:2,n:"GetWorldManifold",t:8,pi:[{n:"normal",out:!0,pt:$n[1].Vector2,ps:0},{n:"points",out:!0,pt:$n[4].FixedArray2$1(Microsoft.Xna.Framework.Vector2),ps:1}],sn:"GetWorldManifold",rt:$n[0].Void,p:[$n[1].Vector2,$n[4].FixedArray2$1(Microsoft.Xna.Framework.Vector2)]},{a:1,n:"Reset",t:8,pi:[{n:"fA",pt:$n[3].Fixture,ps:0},{n:"indexA",pt:$n[0].Int32,ps:1},{n:"fB",pt:$n[3].Fixture,ps:2},{n:"indexB",pt:$n[0].Int32,ps:3}],sn:"Reset",rt:$n[0].Void,p:[$n[3].Fixture,$n[0].Int32,$n[3].Fixture,$n[0].Int32]},{a:2,n:"ResetFriction",t:8,sn:"ResetFriction",rt:$n[0].Void},{a:2,n:"ResetRestitution",t:8,sn:"ResetRestitution",rt:$n[0].Void},{a:4,n:"Update",t:8,pi:[{n:"contactManager",pt:$n[3].ContactManager,ps:0}],sn:"Update",rt:$n[0].Void,p:[$n[3].ContactManager]},{a:2,n:"ChildIndexA",t:16,rt:$n[0].Int32,g:{a:2,n:"get_ChildIndexA",t:8,rt:$n[0].Int32,fg:"ChildIndexA",box:function($v){return Bridge.box($v,System.Int32)}},s:{a:4,n:"set_ChildIndexA",t:8,p:[$n[0].Int32],rt:$n[0].Void,fs:"ChildIndexA"},fn:"ChildIndexA"},{a:2,n:"ChildIndexB",t:16,rt:$n[0].Int32,g:{a:2,n:"get_ChildIndexB",t:8,rt:$n[0].Int32,fg:"ChildIndexB",box:function($v){return Bridge.box($v,System.Int32)}},s:{a:4,n:"set_ChildIndexB",t:8,p:[$n[0].Int32],rt:$n[0].Void,fs:"ChildIndexB"},fn:"ChildIndexB"},{a:2,n:"Enabled",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_Enabled",t:8,rt:$n[0].Boolean,fg:"Enabled",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_Enabled",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"Enabled"},fn:"Enabled"},{a:4,n:"FilterFlag",t:16,rt:$n[0].Boolean,g:{a:4,n:"get_FilterFlag",t:8,rt:$n[0].Boolean,fg:"FilterFlag",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:4,n:"set_FilterFlag",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"FilterFlag"},fn:"FilterFlag"},{a:2,n:"Friction",t:16,rt:$n[0].Single,g:{a:2,n:"get_Friction",t:8,rt:$n[0].Single,fg:"Friction",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Friction",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Friction"},fn:"Friction"},{a:2,n:"IsTouching",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_IsTouching",t:8,rt:$n[0].Boolean,fg:"IsTouching",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_IsTouching",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"IsTouching"},fn:"IsTouching"},{a:4,n:"IslandFlag",t:16,rt:$n[0].Boolean,g:{a:4,n:"get_IslandFlag",t:8,rt:$n[0].Boolean,fg:"IslandFlag",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:4,n:"set_IslandFlag",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"IslandFlag"},fn:"IslandFlag"},{a:2,n:"Restitution",t:16,rt:$n[0].Single,g:{a:2,n:"get_Restitution",t:8,rt:$n[0].Single,fg:"Restitution",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Restitution",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Restitution"},fn:"Restitution"},{a:4,n:"TOIFlag",t:16,rt:$n[0].Boolean,g:{a:4,n:"get_TOIFlag",t:8,rt:$n[0].Boolean,fg:"TOIFlag",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:4,n:"set_TOIFlag",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"TOIFlag"},fn:"TOIFlag"},{a:2,n:"TangentSpeed",t:16,rt:$n[0].Single,g:{a:2,n:"get_TangentSpeed",t:8,rt:$n[0].Single,fg:"TangentSpeed",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_TangentSpeed",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"TangentSpeed"},fn:"TangentSpeed"},{a:2,n:"FixtureA",t:4,rt:$n[3].Fixture,sn:"FixtureA"},{a:2,n:"FixtureB",t:4,rt:$n[3].Fixture,sn:"FixtureB"},{a:2,n:"Manifold",t:4,rt:$n[11].Manifold,sn:"Manifold"},{a:1,n:"_edge",is:!0,t:4,rt:$n[7].EdgeShape,sn:"_edge"},{a:4,n:"_nodeA",t:4,rt:$n[8].ContactEdge,sn:"_nodeA"},{a:4,n:"_nodeB",t:4,rt:$n[8].ContactEdge,sn:"_nodeB"},{a:1,n:"_registers",is:!0,t:4,rt:System.Array.type(FarseerPhysics.Dynamics.Contacts.Contact.ContactType,2),sn:"_registers"},{a:4,n:"_toi",t:4,rt:$n[0].Single,sn:"_toi",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:4,n:"_toiCount",t:4,rt:$n[0].Int32,sn:"_toiCount",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_type",t:4,rt:$n[8].Contact.ContactType,sn:"_type",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Contacts.Contact.ContactType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.Contact.ContactType))}}]}},$n);$m("FarseerPhysics.Dynamics.Contacts.Contact.ContactType",function(){return{td:$n[8].Contact,att:259,a:1,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"ChainAndCircle",is:!0,t:4,rt:$n[8].Contact.ContactType,sn:"ChainAndCircle",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Contacts.Contact.ContactType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.Contact.ContactType))}},{a:2,n:"ChainAndPolygon",is:!0,t:4,rt:$n[8].Contact.ContactType,sn:"ChainAndPolygon",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Contacts.Contact.ContactType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.Contact.ContactType))}},{a:2,n:"Circle",is:!0,t:4,rt:$n[8].Contact.ContactType,sn:"Circle",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Contacts.Contact.ContactType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.Contact.ContactType))}},{a:2,n:"EdgeAndCircle",is:!0,t:4,rt:$n[8].Contact.ContactType,sn:"EdgeAndCircle",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Contacts.Contact.ContactType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.Contact.ContactType))}},{a:2,n:"EdgeAndPolygon",is:!0,t:4,rt:$n[8].Contact.ContactType,sn:"EdgeAndPolygon",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Contacts.Contact.ContactType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.Contact.ContactType))}},{a:2,n:"NotSupported",is:!0,t:4,rt:$n[8].Contact.ContactType,sn:"NotSupported",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Contacts.Contact.ContactType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.Contact.ContactType))}},{a:2,n:"Polygon",is:!0,t:4,rt:$n[8].Contact.ContactType,sn:"Polygon",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Contacts.Contact.ContactType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.Contact.ContactType))}},{a:2,n:"PolygonAndCircle",is:!0,t:4,rt:$n[8].Contact.ContactType,sn:"PolygonAndCircle",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Contacts.Contact.ContactType,System.Enum.toStringFn(FarseerPhysics.Dynamics.Contacts.Contact.ContactType))}}]}},$n);$m("FarseerPhysics.Dynamics.Contacts.ContactPositionConstraint",function(){return{att:1048833,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"indexA",t:4,rt:$n[0].Int32,sn:"indexA",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"indexB",t:4,rt:$n[0].Int32,sn:"indexB",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"invIA",t:4,rt:$n[0].Single,sn:"invIA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"invIB",t:4,rt:$n[0].Single,sn:"invIB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"invMassA",t:4,rt:$n[0].Single,sn:"invMassA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"invMassB",t:4,rt:$n[0].Single,sn:"invMassB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"localCenterA",t:4,rt:$n[1].Vector2,sn:"localCenterA"},{a:2,n:"localCenterB",t:4,rt:$n[1].Vector2,sn:"localCenterB"},{a:2,n:"localNormal",t:4,rt:$n[1].Vector2,sn:"localNormal"},{a:2,n:"localPoint",t:4,rt:$n[1].Vector2,sn:"localPoint"},{a:2,n:"localPoints",t:4,rt:System.Array.type(Microsoft.Xna.Framework.Vector2),sn:"localPoints"},{a:2,n:"pointCount",t:4,rt:$n[0].Int32,sn:"pointCount",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"radiusA",t:4,rt:$n[0].Single,sn:"radiusA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"radiusB",t:4,rt:$n[0].Single,sn:"radiusB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"type",t:4,rt:$n[11].ManifoldType,sn:"type",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.ManifoldType,System.Enum.toStringFn(FarseerPhysics.Collision.ManifoldType))}}]}},$n);$m("FarseerPhysics.Dynamics.Contacts.VelocityConstraintPoint",function(){return{att:1048833,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"normalImpulse",t:4,rt:$n[0].Single,sn:"normalImpulse",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"normalMass",t:4,rt:$n[0].Single,sn:"normalMass",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"rA",t:4,rt:$n[1].Vector2,sn:"rA"},{a:2,n:"rB",t:4,rt:$n[1].Vector2,sn:"rB"},{a:2,n:"tangentImpulse",t:4,rt:$n[0].Single,sn:"tangentImpulse",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"tangentMass",t:4,rt:$n[0].Single,sn:"tangentMass",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"velocityBias",t:4,rt:$n[0].Single,sn:"velocityBias",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Dynamics.Contacts.ContactVelocityConstraint",function(){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:"K",t:4,rt:$n[4].Mat22,sn:"K"},{a:2,n:"contactIndex",t:4,rt:$n[0].Int32,sn:"contactIndex",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"friction",t:4,rt:$n[0].Single,sn:"friction",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"indexA",t:4,rt:$n[0].Int32,sn:"indexA",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"indexB",t:4,rt:$n[0].Int32,sn:"indexB",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"invIA",t:4,rt:$n[0].Single,sn:"invIA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"invIB",t:4,rt:$n[0].Single,sn:"invIB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"invMassA",t:4,rt:$n[0].Single,sn:"invMassA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"invMassB",t:4,rt:$n[0].Single,sn:"invMassB",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"normal",t:4,rt:$n[1].Vector2,sn:"normal"},{a:2,n:"normalMass",t:4,rt:$n[4].Mat22,sn:"normalMass"},{a:2,n:"pointCount",t:4,rt:$n[0].Int32,sn:"pointCount",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"points",t:4,rt:System.Array.type(FarseerPhysics.Dynamics.Contacts.VelocityConstraintPoint),sn:"points"},{a:2,n:"restitution",t:4,rt:$n[0].Single,sn:"restitution",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"tangentSpeed",t:4,rt:$n[0].Single,sn:"tangentSpeed",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Dynamics.Contacts.ContactSolver",function(){return{nested:[$n[8].ContactSolver.WorldManifold,$n[8].ContactSolver.PositionSolverManifold],att:1048577,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"InitializeVelocityConstraints",t:8,sn:"InitializeVelocityConstraints",rt:$n[0].Void},{a:2,n:"Reset",t:8,pi:[{n:"step",pt:$n[3].TimeStep,ps:0},{n:"count",pt:$n[0].Int32,ps:1},{n:"contacts",pt:System.Array.type(FarseerPhysics.Dynamics.Contacts.Contact),ps:2},{n:"positions",pt:System.Array.type(FarseerPhysics.Dynamics.Position),ps:3},{n:"velocities",pt:System.Array.type(FarseerPhysics.Dynamics.Velocity),ps:4},{n:"warmstarting",dv:!0,o:!0,pt:$n[0].Boolean,ps:5}],sn:"Reset",rt:$n[0].Void,p:[$n[3].TimeStep,$n[0].Int32,System.Array.type(FarseerPhysics.Dynamics.Contacts.Contact),System.Array.type(FarseerPhysics.Dynamics.Position),System.Array.type(FarseerPhysics.Dynamics.Velocity),$n[0].Boolean]},{a:2,n:"SolvePositionConstraints",t:8,sn:"SolvePositionConstraints",rt:$n[0].Boolean,box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"SolveTOIPositionConstraints",t:8,pi:[{n:"toiIndexA",pt:$n[0].Int32,ps:0},{n:"toiIndexB",pt:$n[0].Int32,ps:1}],sn:"SolveTOIPositionConstraints",rt:$n[0].Boolean,p:[$n[0].Int32,$n[0].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"SolveVelocityConstraints",t:8,sn:"SolveVelocityConstraints",rt:$n[0].Void},{a:2,n:"StoreImpulses",t:8,sn:"StoreImpulses",rt:$n[0].Void},{a:2,n:"WarmStart",t:8,sn:"WarmStart",rt:$n[0].Void},{a:2,n:"_contacts",t:4,rt:System.Array.type(FarseerPhysics.Dynamics.Contacts.Contact),sn:"_contacts"},{a:2,n:"_count",t:4,rt:$n[0].Int32,sn:"_count",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"_positionConstraints",t:4,rt:System.Array.type(FarseerPhysics.Dynamics.Contacts.ContactPositionConstraint),sn:"_positionConstraints"},{a:2,n:"_positions",t:4,rt:System.Array.type(FarseerPhysics.Dynamics.Position),sn:"_positions"},{a:2,n:"_step",t:4,rt:$n[3].TimeStep,sn:"_step"},{a:2,n:"_velocities",t:4,rt:System.Array.type(FarseerPhysics.Dynamics.Velocity),sn:"_velocities"},{a:2,n:"_velocityConstraints",t:4,rt:System.Array.type(FarseerPhysics.Dynamics.Contacts.ContactVelocityConstraint),sn:"_velocityConstraints"}]}},$n);$m("FarseerPhysics.Dynamics.Contacts.ContactSolver.WorldManifold",function(){return{td:$n[8].ContactSolver,att:1048962,a:2,s:!0,m:[{a:2,n:"Initialize",is:!0,t:8,pi:[{n:"manifold",ref:!0,pt:$n[11].Manifold,ps:0},{n:"xfA",ref:!0,pt:$n[4].Transform,ps:1},{n:"radiusA",pt:$n[0].Single,ps:2},{n:"xfB",ref:!0,pt:$n[4].Transform,ps:3},{n:"radiusB",pt:$n[0].Single,ps:4},{n:"normal",out:!0,pt:$n[1].Vector2,ps:5},{n:"points",out:!0,pt:$n[4].FixedArray2$1(Microsoft.Xna.Framework.Vector2),ps:6}],sn:"Initialize",rt:$n[0].Void,p:[$n[11].Manifold,$n[4].Transform,$n[0].Single,$n[4].Transform,$n[0].Single,$n[1].Vector2,$n[4].FixedArray2$1(Microsoft.Xna.Framework.Vector2)]}]}},$n);$m("FarseerPhysics.Dynamics.Contacts.ContactSolver.PositionSolverManifold",function(){return{td:$n[8].ContactSolver,att:1048963,a:1,s:!0,m:[{a:2,n:"Initialize",is:!0,t:8,pi:[{n:"pc",pt:$n[8].ContactPositionConstraint,ps:0},{n:"xfA",pt:$n[4].Transform,ps:1},{n:"xfB",pt:$n[4].Transform,ps:2},{n:"index",pt:$n[0].Int32,ps:3},{n:"normal",out:!0,pt:$n[1].Vector2,ps:4},{n:"point",out:!0,pt:$n[1].Vector2,ps:5},{n:"separation",out:!0,pt:$n[0].Single,ps:6}],sn:"Initialize",rt:$n[0].Void,p:[$n[8].ContactPositionConstraint,$n[4].Transform,$n[4].Transform,$n[0].Int32,$n[1].Vector2,$n[1].Vector2,$n[0].Single]}]}},$n);$m("FarseerPhysics.Controllers.AbstractForceController",function(){return{nested:[$n[9].AbstractForceController.DecayModes,$n[9].AbstractForceController.ForceTypes,$n[9].AbstractForceController.TimingModes],att:1048705,a:2,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[9].AbstractForceController.TimingModes],pi:[{n:"mode",pt:$n[9].AbstractForceController.TimingModes,ps:0}],sn:"$ctor1"},{ab:!0,a:2,n:"ApplyForce",t:8,pi:[{n:"dt",pt:$n[0].Single,ps:0},{n:"strength",pt:$n[0].Single,ps:1}],sn:"ApplyForce",rt:$n[0].Void,p:[$n[0].Single,$n[0].Single]},{a:3,n:"GetDecayMultiplier",t:8,pi:[{n:"body",pt:$n[3].Body,ps:0}],sn:"GetDecayMultiplier",rt:$n[0].Single,p:[$n[3].Body],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Trigger",t:8,sn:"Trigger",rt:$n[0].Void},{ov:!0,a:2,n:"Update",t:8,pi:[{n:"dt",pt:$n[0].Single,ps:0}],sn:"Update",rt:$n[0].Void,p:[$n[0].Single]},{a:2,n:"DecayEnd",t:16,rt:$n[0].Single,g:{a:2,n:"get_DecayEnd",t:8,rt:$n[0].Single,fg:"DecayEnd",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_DecayEnd",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"DecayEnd"},fn:"DecayEnd"},{a:2,n:"DecayMode",t:16,rt:$n[9].AbstractForceController.DecayModes,g:{a:2,n:"get_DecayMode",t:8,rt:$n[9].AbstractForceController.DecayModes,fg:"DecayMode",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.AbstractForceController.DecayModes,System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.DecayModes))}},s:{a:2,n:"set_DecayMode",t:8,p:[$n[9].AbstractForceController.DecayModes],rt:$n[0].Void,fs:"DecayMode"},fn:"DecayMode"},{a:2,n:"DecayStart",t:16,rt:$n[0].Single,g:{a:2,n:"get_DecayStart",t:8,rt:$n[0].Single,fg:"DecayStart",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_DecayStart",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"DecayStart"},fn:"DecayStart"},{a:2,n:"ImpulseLength",t:16,rt:$n[0].Single,g:{a:2,n:"get_ImpulseLength",t:8,rt:$n[0].Single,fg:"ImpulseLength",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_ImpulseLength",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"ImpulseLength"},fn:"ImpulseLength"},{a:2,n:"ImpulseTime",t:16,rt:$n[0].Single,g:{a:2,n:"get_ImpulseTime",t:8,rt:$n[0].Single,fg:"ImpulseTime",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:1,n:"set_ImpulseTime",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"ImpulseTime"},fn:"ImpulseTime"},{a:2,n:"MaximumForce",t:16,rt:$n[0].Single,g:{a:2,n:"get_MaximumForce",t:8,rt:$n[0].Single,fg:"MaximumForce",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_MaximumForce",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"MaximumForce"},fn:"MaximumForce"},{a:2,n:"MaximumSpeed",t:16,rt:$n[0].Single,g:{a:2,n:"get_MaximumSpeed",t:8,rt:$n[0].Single,fg:"MaximumSpeed",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_MaximumSpeed",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"MaximumSpeed"},fn:"MaximumSpeed"},{a:2,n:"Position",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_Position",t:8,rt:$n[1].Vector2,fg:"Position"},s:{a:2,n:"set_Position",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"Position"},fn:"Position"},{a:2,n:"Strength",t:16,rt:$n[0].Single,g:{a:2,n:"get_Strength",t:8,rt:$n[0].Single,fg:"Strength",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Strength",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Strength"},fn:"Strength"},{a:2,n:"TimingMode",t:16,rt:$n[9].AbstractForceController.TimingModes,g:{a:2,n:"get_TimingMode",t:8,rt:$n[9].AbstractForceController.TimingModes,fg:"TimingMode",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.AbstractForceController.TimingModes,System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.TimingModes))}},s:{a:2,n:"set_TimingMode",t:8,p:[$n[9].AbstractForceController.TimingModes],rt:$n[0].Void,fs:"TimingMode"},fn:"TimingMode"},{a:2,n:"Triggered",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_Triggered",t:8,rt:$n[0].Boolean,fg:"Triggered",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:1,n:"set_Triggered",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"Triggered"},fn:"Triggered"},{a:2,n:"Variation",t:16,rt:$n[0].Single,g:{a:2,n:"get_Variation",t:8,rt:$n[0].Single,fg:"Variation",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Variation",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Variation"},fn:"Variation"},{a:2,n:"DecayCurve",t:4,rt:$n[1].Curve,sn:"DecayCurve"},{a:2,n:"ForceType",t:4,rt:$n[9].AbstractForceController.ForceTypes,sn:"ForceType",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.AbstractForceController.ForceTypes,System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.ForceTypes))}},{a:3,n:"Randomize",t:4,rt:$n[0].Random,sn:"Randomize"},{a:2,n:"StrengthCurve",t:4,rt:$n[1].Curve,sn:"StrengthCurve"}]}},$n);$m("FarseerPhysics.Controllers.AbstractForceController.DecayModes",function(){return{td:$n[9].AbstractForceController,att:258,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Curve",is:!0,t:4,rt:$n[9].AbstractForceController.DecayModes,sn:"Curve",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.AbstractForceController.DecayModes,System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.DecayModes))}},{a:2,n:"InverseSquare",is:!0,t:4,rt:$n[9].AbstractForceController.DecayModes,sn:"InverseSquare",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.AbstractForceController.DecayModes,System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.DecayModes))}},{a:2,n:"Linear",is:!0,t:4,rt:$n[9].AbstractForceController.DecayModes,sn:"Linear",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.AbstractForceController.DecayModes,System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.DecayModes))}},{a:2,n:"None",is:!0,t:4,rt:$n[9].AbstractForceController.DecayModes,sn:"None",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.AbstractForceController.DecayModes,System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.DecayModes))}},{a:2,n:"Step",is:!0,t:4,rt:$n[9].AbstractForceController.DecayModes,sn:"Step",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.AbstractForceController.DecayModes,System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.DecayModes))}}]}},$n);$m("FarseerPhysics.Controllers.AbstractForceController.ForceTypes",function(){return{td:$n[9].AbstractForceController,att:258,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Area",is:!0,t:4,rt:$n[9].AbstractForceController.ForceTypes,sn:"Area",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.AbstractForceController.ForceTypes,System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.ForceTypes))}},{a:2,n:"Line",is:!0,t:4,rt:$n[9].AbstractForceController.ForceTypes,sn:"Line",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.AbstractForceController.ForceTypes,System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.ForceTypes))}},{a:2,n:"Point",is:!0,t:4,rt:$n[9].AbstractForceController.ForceTypes,sn:"Point",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.AbstractForceController.ForceTypes,System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.ForceTypes))}}]}},$n);$m("FarseerPhysics.Controllers.AbstractForceController.TimingModes",function(){return{td:$n[9].AbstractForceController,att:258,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Curve",is:!0,t:4,rt:$n[9].AbstractForceController.TimingModes,sn:"Curve",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.AbstractForceController.TimingModes,System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.TimingModes))}},{a:2,n:"Switched",is:!0,t:4,rt:$n[9].AbstractForceController.TimingModes,sn:"Switched",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.AbstractForceController.TimingModes,System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.TimingModes))}},{a:2,n:"Triggered",is:!0,t:4,rt:$n[9].AbstractForceController.TimingModes,sn:"Triggered",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.AbstractForceController.TimingModes,System.Enum.toStringFn(FarseerPhysics.Controllers.AbstractForceController.TimingModes))}}]}},$n);$m("FarseerPhysics.Controllers.BuoyancyController",function(){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[11].AABB,$n[0].Single,$n[0].Single,$n[0].Single,$n[1].Vector2],pi:[{n:"container",pt:$n[11].AABB,ps:0},{n:"density",pt:$n[0].Single,ps:1},{n:"linearDragCoefficient",pt:$n[0].Single,ps:2},{n:"rotationalDragCoefficient",pt:$n[0].Single,ps:3},{n:"gravity",pt:$n[1].Vector2,ps:4}],sn:"ctor"},{ov:!0,a:2,n:"Update",t:8,pi:[{n:"dt",pt:$n[0].Single,ps:0}],sn:"Update",rt:$n[0].Void,p:[$n[0].Single]},{a:2,n:"Container",t:16,rt:$n[11].AABB,g:{a:2,n:"get_Container",t:8,rt:$n[11].AABB,fg:"Container"},s:{a:2,n:"set_Container",t:8,p:[$n[11].AABB],rt:$n[0].Void,fs:"Container"},fn:"Container"},{a:2,n:"AngularDragCoefficient",t:4,rt:$n[0].Single,sn:"AngularDragCoefficient",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Density",t:4,rt:$n[0].Single,sn:"Density",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"LinearDragCoefficient",t:4,rt:$n[0].Single,sn:"LinearDragCoefficient",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Velocity",t:4,rt:$n[1].Vector2,sn:"Velocity"},{a:1,n:"_container",t:4,rt:$n[11].AABB,sn:"_container"},{a:1,n:"_gravity",t:4,rt:$n[1].Vector2,sn:"_gravity"},{a:1,n:"_normal",t:4,rt:$n[1].Vector2,sn:"_normal"},{a:1,n:"_offset",t:4,rt:$n[0].Single,sn:"_offset",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_uniqueBodies",t:4,rt:$n[5].Dictionary$2(System.Int32,FarseerPhysics.Dynamics.Body),sn:"_uniqueBodies"}]}},$n);$m("FarseerPhysics.Controllers.ControllerType",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"AbstractForceController",is:!0,t:4,rt:$n[9].ControllerType,sn:"AbstractForceController",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.ControllerType,System.Enum.toStringFn(FarseerPhysics.Controllers.ControllerType))}},{a:2,n:"BuoyancyController",is:!0,t:4,rt:$n[9].ControllerType,sn:"BuoyancyController",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.ControllerType,System.Enum.toStringFn(FarseerPhysics.Controllers.ControllerType))}},{a:2,n:"GravityController",is:!0,t:4,rt:$n[9].ControllerType,sn:"GravityController",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.ControllerType,System.Enum.toStringFn(FarseerPhysics.Controllers.ControllerType))}},{a:2,n:"VelocityLimitController",is:!0,t:4,rt:$n[9].ControllerType,sn:"VelocityLimitController",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.ControllerType,System.Enum.toStringFn(FarseerPhysics.Controllers.ControllerType))}}]}},$n);$m("FarseerPhysics.Controllers.ControllerFilter",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"IgnoreController",t:8,pi:[{n:"controller",pt:$n[9].ControllerType,ps:0}],sn:"IgnoreController",rt:$n[0].Void,p:[$n[9].ControllerType]},{a:2,n:"IsControllerIgnored",t:8,pi:[{n:"controller",pt:$n[9].ControllerType,ps:0}],sn:"IsControllerIgnored",rt:$n[0].Boolean,p:[$n[9].ControllerType],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"RestoreController",t:8,pi:[{n:"controller",pt:$n[9].ControllerType,ps:0}],sn:"RestoreController",rt:$n[0].Void,p:[$n[9].ControllerType]},{a:2,n:"ControllerFlags",t:4,rt:$n[9].ControllerType,sn:"ControllerFlags",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.ControllerType,System.Enum.toStringFn(FarseerPhysics.Controllers.ControllerType))}}]}},$n);$m("FarseerPhysics.Controllers.Controller",function(){return{att:1048705,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[9].ControllerType],pi:[{n:"controllerType",pt:$n[9].ControllerType,ps:0}],sn:"ctor"},{ov:!0,a:2,n:"IsActiveOn",t:8,pi:[{n:"body",pt:$n[3].Body,ps:0}],sn:"IsActiveOn",rt:$n[0].Boolean,p:[$n[3].Body],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ab:!0,a:2,n:"Update",t:8,pi:[{n:"dt",pt:$n[0].Single,ps:0}],sn:"Update",rt:$n[0].Void,p:[$n[0].Single]},{a:2,n:"Enabled",t:4,rt:$n[0].Boolean,sn:"Enabled",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"World",t:4,rt:$n[3].World,sn:"World"},{a:1,n:"_type",t:4,rt:$n[9].ControllerType,sn:"_type",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.ControllerType,System.Enum.toStringFn(FarseerPhysics.Controllers.ControllerType))}}]}},$n);$m("FarseerPhysics.Controllers.GravityType",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"DistanceSquared",is:!0,t:4,rt:$n[9].GravityType,sn:"DistanceSquared",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.GravityType,System.Enum.toStringFn(FarseerPhysics.Controllers.GravityType))}},{a:2,n:"Linear",is:!0,t:4,rt:$n[9].GravityType,sn:"Linear",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.GravityType,System.Enum.toStringFn(FarseerPhysics.Controllers.GravityType))}}]}},$n);$m("FarseerPhysics.Controllers.GravityController",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[0].Single],pi:[{n:"strength",pt:$n[0].Single,ps:0}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].Single,$n[0].Single,$n[0].Single],pi:[{n:"strength",pt:$n[0].Single,ps:0},{n:"maxRadius",pt:$n[0].Single,ps:1},{n:"minRadius",pt:$n[0].Single,ps:2}],sn:"$ctor1"},{a:2,n:"AddBody",t:8,pi:[{n:"body",pt:$n[3].Body,ps:0}],sn:"AddBody",rt:$n[0].Void,p:[$n[3].Body]},{a:2,n:"AddPoint",t:8,pi:[{n:"point",pt:$n[1].Vector2,ps:0}],sn:"AddPoint",rt:$n[0].Void,p:[$n[1].Vector2]},{ov:!0,a:2,n:"Update",t:8,pi:[{n:"dt",pt:$n[0].Single,ps:0}],sn:"Update",rt:$n[0].Void,p:[$n[0].Single]},{a:2,n:"Bodies",t:16,rt:$n[5].List$1(FarseerPhysics.Dynamics.Body),g:{a:2,n:"get_Bodies",t:8,rt:$n[5].List$1(FarseerPhysics.Dynamics.Body),fg:"Bodies"},s:{a:2,n:"set_Bodies",t:8,p:[$n[5].List$1(FarseerPhysics.Dynamics.Body)],rt:$n[0].Void,fs:"Bodies"},fn:"Bodies"},{a:2,n:"GravityType",t:16,rt:$n[9].GravityType,g:{a:2,n:"get_GravityType",t:8,rt:$n[9].GravityType,fg:"GravityType",box:function($v){return Bridge.box($v,FarseerPhysics.Controllers.GravityType,System.Enum.toStringFn(FarseerPhysics.Controllers.GravityType))}},s:{a:2,n:"set_GravityType",t:8,p:[$n[9].GravityType],rt:$n[0].Void,fs:"GravityType"},fn:"GravityType"},{a:2,n:"MaxRadius",t:16,rt:$n[0].Single,g:{a:2,n:"get_MaxRadius",t:8,rt:$n[0].Single,fg:"MaxRadius",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_MaxRadius",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"MaxRadius"},fn:"MaxRadius"},{a:2,n:"MinRadius",t:16,rt:$n[0].Single,g:{a:2,n:"get_MinRadius",t:8,rt:$n[0].Single,fg:"MinRadius",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_MinRadius",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"MinRadius"},fn:"MinRadius"},{a:2,n:"Points",t:16,rt:$n[5].List$1(Microsoft.Xna.Framework.Vector2),g:{a:2,n:"get_Points",t:8,rt:$n[5].List$1(Microsoft.Xna.Framework.Vector2),fg:"Points"},s:{a:2,n:"set_Points",t:8,p:[$n[5].List$1(Microsoft.Xna.Framework.Vector2)],rt:$n[0].Void,fs:"Points"},fn:"Points"},{a:2,n:"Strength",t:16,rt:$n[0].Single,g:{a:2,n:"get_Strength",t:8,rt:$n[0].Single,fg:"Strength",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Strength",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Strength"},fn:"Strength"}]}},$n);$m("FarseerPhysics.Controllers.SimpleWindForce",function(){return{att:1048577,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ov:!0,a:2,n:"ApplyForce",t:8,pi:[{n:"dt",pt:$n[0].Single,ps:0},{n:"strength",pt:$n[0].Single,ps:1}],sn:"ApplyForce",rt:$n[0].Void,p:[$n[0].Single,$n[0].Single]},{a:2,n:"Direction",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_Direction",t:8,rt:$n[1].Vector2,fg:"Direction"},s:{a:2,n:"set_Direction",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"Direction"},fn:"Direction"},{a:2,n:"Divergence",t:16,rt:$n[0].Single,g:{a:2,n:"get_Divergence",t:8,rt:$n[0].Single,fg:"Divergence",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Divergence",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Divergence"},fn:"Divergence"},{a:2,n:"IgnorePosition",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_IgnorePosition",t:8,rt:$n[0].Boolean,fg:"IgnorePosition",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_IgnorePosition",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"IgnorePosition"},fn:"IgnorePosition"}]}},$n);$m("FarseerPhysics.Controllers.VelocityLimitController",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].Single,$n[0].Single],pi:[{n:"maxLinearVelocity",pt:$n[0].Single,ps:0},{n:"maxAngularVelocity",pt:$n[0].Single,ps:1}],sn:"$ctor1"},{a:2,n:"AddBody",t:8,pi:[{n:"body",pt:$n[3].Body,ps:0}],sn:"AddBody",rt:$n[0].Void,p:[$n[3].Body]},{a:2,n:"RemoveBody",t:8,pi:[{n:"body",pt:$n[3].Body,ps:0}],sn:"RemoveBody",rt:$n[0].Void,p:[$n[3].Body]},{ov:!0,a:2,n:"Update",t:8,pi:[{n:"dt",pt:$n[0].Single,ps:0}],sn:"Update",rt:$n[0].Void,p:[$n[0].Single]},{a:2,n:"MaxAngularVelocity",t:16,rt:$n[0].Single,g:{a:2,n:"get_MaxAngularVelocity",t:8,rt:$n[0].Single,fg:"MaxAngularVelocity",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_MaxAngularVelocity",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"MaxAngularVelocity"},fn:"MaxAngularVelocity"},{a:2,n:"MaxLinearVelocity",t:16,rt:$n[0].Single,g:{a:2,n:"get_MaxLinearVelocity",t:8,rt:$n[0].Single,fg:"MaxLinearVelocity",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_MaxLinearVelocity",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"MaxLinearVelocity"},fn:"MaxLinearVelocity"},{a:2,n:"LimitAngularVelocity",t:4,rt:$n[0].Boolean,sn:"LimitAngularVelocity",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"LimitLinearVelocity",t:4,rt:$n[0].Boolean,sn:"LimitLinearVelocity",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_bodies",t:4,rt:$n[5].List$1(FarseerPhysics.Dynamics.Body),sn:"_bodies"},{a:1,n:"_maxAngularSqared",t:4,rt:$n[0].Single,sn:"_maxAngularSqared",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_maxAngularVelocity",t:4,rt:$n[0].Single,sn:"_maxAngularVelocity",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_maxLinearSqared",t:4,rt:$n[0].Single,sn:"_maxLinearSqared",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_maxLinearVelocity",t:4,rt:$n[0].Single,sn:"_maxLinearVelocity",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Content.FixtureTemplate",function(){return{att:1048577,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Friction",t:4,rt:$n[0].Single,sn:"Friction",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Name",t:4,rt:$n[0].String,sn:"Name"},{a:2,n:"Restitution",t:4,rt:$n[0].Single,sn:"Restitution",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Shape",t:4,rt:$n[7].Shape,sn:"Shape"}]}},$n);$m("FarseerPhysics.Content.BodyTemplate",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Create",t:8,pi:[{n:"world",pt:$n[3].World,ps:0}],sn:"Create",rt:$n[3].Body,p:[$n[3].World]},{a:2,n:"CreateBreakable",t:8,pi:[{n:"world",pt:$n[3].World,ps:0}],sn:"CreateBreakable",rt:$n[3].BreakableBody,p:[$n[3].World]},{a:2,n:"BodyType",t:4,rt:$n[3].BodyType,sn:"BodyType",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.BodyType,System.Enum.toStringFn(FarseerPhysics.Dynamics.BodyType))}},{a:2,n:"Fixtures",t:4,rt:$n[5].List$1(FarseerPhysics.Content.FixtureTemplate),sn:"Fixtures"},{a:2,n:"Mass",t:4,rt:$n[0].Single,sn:"Mass",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Content.BodyContainer",function(){return{att:1048577,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"}]}},$n);$m("FarseerPhysics.Content.FarseerBodyContainerReader",function(){return{att:1048577,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ov:!0,a:3,n:"Read",t:8,pi:[{n:"input",pt:$n[13].ContentReader,ps:0},{n:"existingInstance",pt:$n[14].BodyContainer,ps:1}],sn:"Read$1",rt:$n[14].BodyContainer,p:[$n[13].ContentReader,$n[14].BodyContainer]}]}},$n);$m("FarseerPhysics.Content.FarseerPolygonContainerReader",function(){return{att:1048577,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ov:!0,a:3,n:"Read",t:8,pi:[{n:"input",pt:$n[13].ContentReader,ps:0},{n:"existingInstance",pt:$n[14].PolygonContainer,ps:1}],sn:"Read$1",rt:$n[14].PolygonContainer,p:[$n[13].ContentReader,$n[14].PolygonContainer]}]}},$n);$m("FarseerPhysics.Content.Polygon",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[4].Vertices,$n[0].Boolean],pi:[{n:"v",pt:$n[4].Vertices,ps:0},{n:"closed",pt:$n[0].Boolean,ps:1}],sn:"$ctor1"},{a:2,n:"Closed",t:4,rt:$n[0].Boolean,sn:"Closed",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Vertices",t:4,rt:$n[4].Vertices,sn:"Vertices"}]}},$n);$m("FarseerPhysics.Content.PolygonContainer",function(){return{att:1048577,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Decompose",t:8,sn:"decompose",rt:$n[0].Void},{a:2,n:"IsDecomposed",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_IsDecomposed",t:8,rt:$n[0].Boolean,fg:"IsDecomposed",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"IsDecomposed"},{a:1,n:"_decomposed",t:4,rt:$n[0].Boolean,sn:"_decomposed",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("FarseerPhysics.Common.FixedArray2$1",function(T){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Item",t:16,rt:T,p:[$n[0].Int32],i:!0,ipi:[{n:"index",pt:$n[0].Int32,ps:0}],g:{a:2,n:"get_Item",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0}],sn:"getItem",rt:T,p:[$n[0].Int32]},s:{a:2,n:"set_Item",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0},{n:"value",pt:T,ps:1}],sn:"setItem",rt:$n[0].Void,p:[$n[0].Int32,T]}},{a:1,n:"_value0",t:4,rt:T,sn:"_value0"},{a:1,n:"_value1",t:4,rt:T,sn:"_value1"}]}},$n);$m("FarseerPhysics.Common.FixedArray3$1",function(T){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Item",t:16,rt:T,p:[$n[0].Int32],i:!0,ipi:[{n:"index",pt:$n[0].Int32,ps:0}],g:{a:2,n:"get_Item",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0}],sn:"getItem",rt:T,p:[$n[0].Int32]},s:{a:2,n:"set_Item",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0},{n:"value",pt:T,ps:1}],sn:"setItem",rt:$n[0].Void,p:[$n[0].Int32,T]}},{a:1,n:"_value0",t:4,rt:T,sn:"_value0"},{a:1,n:"_value1",t:4,rt:T,sn:"_value1"},{a:1,n:"_value2",t:4,rt:T,sn:"_value2"}]}},$n);$m("FarseerPhysics.Common.FixedArray4$1",function(T){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Item",t:16,rt:T,p:[$n[0].Int32],i:!0,ipi:[{n:"index",pt:$n[0].Int32,ps:0}],g:{a:2,n:"get_Item",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0}],sn:"getItem",rt:T,p:[$n[0].Int32]},s:{a:2,n:"set_Item",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0},{n:"value",pt:T,ps:1}],sn:"setItem",rt:$n[0].Void,p:[$n[0].Int32,T]}},{a:1,n:"_value0",t:4,rt:T,sn:"_value0"},{a:1,n:"_value1",t:4,rt:T,sn:"_value1"},{a:1,n:"_value2",t:4,rt:T,sn:"_value2"},{a:1,n:"_value3",t:4,rt:T,sn:"_value3"}]}},$n);$m("FarseerPhysics.Common.FixedArray8$1",function(T){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Item",t:16,rt:T,p:[$n[0].Int32],i:!0,ipi:[{n:"index",pt:$n[0].Int32,ps:0}],g:{a:2,n:"get_Item",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0}],sn:"getItem",rt:T,p:[$n[0].Int32]},s:{a:2,n:"set_Item",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0},{n:"value",pt:T,ps:1}],sn:"setItem",rt:$n[0].Void,p:[$n[0].Int32,T]}},{a:1,n:"_value0",t:4,rt:T,sn:"_value0"},{a:1,n:"_value1",t:4,rt:T,sn:"_value1"},{a:1,n:"_value2",t:4,rt:T,sn:"_value2"},{a:1,n:"_value3",t:4,rt:T,sn:"_value3"},{a:1,n:"_value4",t:4,rt:T,sn:"_value4"},{a:1,n:"_value5",t:4,rt:T,sn:"_value5"},{a:1,n:"_value6",t:4,rt:T,sn:"_value6"},{a:1,n:"_value7",t:4,rt:T,sn:"_value7"}]}},$n);$m("FarseerPhysics.Common.LineTools",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"DistanceBetweenPointAndLineSegment",is:!0,t:8,pi:[{n:"point",ref:!0,pt:$n[1].Vector2,ps:0},{n:"start",ref:!0,pt:$n[1].Vector2,ps:1},{n:"end",ref:!0,pt:$n[1].Vector2,ps:2}],sn:"DistanceBetweenPointAndLineSegment",rt:$n[0].Single,p:[$n[1].Vector2,$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"LineIntersect",is:!0,t:8,pi:[{n:"p1",pt:$n[1].Vector2,ps:0},{n:"p2",pt:$n[1].Vector2,ps:1},{n:"q1",pt:$n[1].Vector2,ps:2},{n:"q2",pt:$n[1].Vector2,ps:3}],sn:"LineIntersect",rt:$n[1].Vector2,p:[$n[1].Vector2,$n[1].Vector2,$n[1].Vector2,$n[1].Vector2]},{a:2,n:"LineIntersect",is:!0,t:8,pi:[{n:"point1",ref:!0,pt:$n[1].Vector2,ps:0},{n:"point2",ref:!0,pt:$n[1].Vector2,ps:1},{n:"point3",ref:!0,pt:$n[1].Vector2,ps:2},{n:"point4",ref:!0,pt:$n[1].Vector2,ps:3},{n:"intersectionPoint",out:!0,pt:$n[1].Vector2,ps:4}],sn:"LineIntersect$3",rt:$n[0].Boolean,p:[$n[1].Vector2,$n[1].Vector2,$n[1].Vector2,$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"LineIntersect",is:!0,t:8,pi:[{n:"point1",pt:$n[1].Vector2,ps:0},{n:"point2",pt:$n[1].Vector2,ps:1},{n:"point3",pt:$n[1].Vector2,ps:2},{n:"point4",pt:$n[1].Vector2,ps:3},{n:"intersectionPoint",out:!0,pt:$n[1].Vector2,ps:4}],sn:"LineIntersect$1",rt:$n[0].Boolean,p:[$n[1].Vector2,$n[1].Vector2,$n[1].Vector2,$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"LineIntersect",is:!0,t:8,pi:[{n:"point1",ref:!0,pt:$n[1].Vector2,ps:0},{n:"point2",ref:!0,pt:$n[1].Vector2,ps:1},{n:"point3",ref:!0,pt:$n[1].Vector2,ps:2},{n:"point4",ref:!0,pt:$n[1].Vector2,ps:3},{n:"firstIsSegment",pt:$n[0].Boolean,ps:4},{n:"secondIsSegment",pt:$n[0].Boolean,ps:5},{n:"point",out:!0,pt:$n[1].Vector2,ps:6}],sn:"LineIntersect$4",rt:$n[0].Boolean,p:[$n[1].Vector2,$n[1].Vector2,$n[1].Vector2,$n[1].Vector2,$n[0].Boolean,$n[0].Boolean,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"LineIntersect",is:!0,t:8,pi:[{n:"point1",pt:$n[1].Vector2,ps:0},{n:"point2",pt:$n[1].Vector2,ps:1},{n:"point3",pt:$n[1].Vector2,ps:2},{n:"point4",pt:$n[1].Vector2,ps:3},{n:"firstIsSegment",pt:$n[0].Boolean,ps:4},{n:"secondIsSegment",pt:$n[0].Boolean,ps:5},{n:"intersectionPoint",out:!0,pt:$n[1].Vector2,ps:6}],sn:"LineIntersect$2",rt:$n[0].Boolean,p:[$n[1].Vector2,$n[1].Vector2,$n[1].Vector2,$n[1].Vector2,$n[0].Boolean,$n[0].Boolean,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"LineIntersect2",is:!0,t:8,pi:[{n:"a0",ref:!0,pt:$n[1].Vector2,ps:0},{n:"a1",ref:!0,pt:$n[1].Vector2,ps:1},{n:"b0",ref:!0,pt:$n[1].Vector2,ps:2},{n:"b1",ref:!0,pt:$n[1].Vector2,ps:3},{n:"intersectionPoint",out:!0,pt:$n[1].Vector2,ps:4}],sn:"LineIntersect2",rt:$n[0].Boolean,p:[$n[1].Vector2,$n[1].Vector2,$n[1].Vector2,$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"LineSegmentAABBIntersect",is:!0,t:8,pi:[{n:"point1",ref:!0,pt:$n[1].Vector2,ps:0},{n:"point2",ref:!0,pt:$n[1].Vector2,ps:1},{n:"aabb",pt:$n[11].AABB,ps:2}],sn:"LineSegmentAABBIntersect",rt:$n[4].Vertices,p:[$n[1].Vector2,$n[1].Vector2,$n[11].AABB]},{a:2,n:"LineSegmentVerticesIntersect",is:!0,t:8,pi:[{n:"point1",ref:!0,pt:$n[1].Vector2,ps:0},{n:"point2",ref:!0,pt:$n[1].Vector2,ps:1},{n:"vertices",pt:$n[4].Vertices,ps:2}],sn:"LineSegmentVerticesIntersect",rt:$n[4].Vertices,p:[$n[1].Vector2,$n[1].Vector2,$n[4].Vertices]}]}},$n);$m("FarseerPhysics.Common.MathUtils",function(){return{nested:[$n[4].MathUtils.FloatConverter],att:1048961,a:2,s:!0,m:[{a:2,n:"Abs",is:!0,t:8,pi:[{n:"v",pt:$n[1].Vector2,ps:0}],sn:"Abs",rt:$n[1].Vector2,p:[$n[1].Vector2]},{a:2,n:"Area",is:!0,t:8,pi:[{n:"a",ref:!0,pt:$n[1].Vector2,ps:0},{n:"b",ref:!0,pt:$n[1].Vector2,ps:1},{n:"c",ref:!0,pt:$n[1].Vector2,ps:2}],sn:"Area$1",rt:$n[0].Single,p:[$n[1].Vector2,$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Area",is:!0,t:8,pi:[{n:"a",pt:$n[1].Vector2,ps:0},{n:"b",pt:$n[1].Vector2,ps:1},{n:"c",pt:$n[1].Vector2,ps:2}],sn:"Area",rt:$n[0].Single,p:[$n[1].Vector2,$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Clamp",is:!0,t:8,pi:[{n:"a",pt:$n[1].Vector2,ps:0},{n:"low",pt:$n[1].Vector2,ps:1},{n:"high",pt:$n[1].Vector2,ps:2}],sn:"Clamp",rt:$n[1].Vector2,p:[$n[1].Vector2,$n[1].Vector2,$n[1].Vector2]},{a:2,n:"Clamp",is:!0,t:8,pi:[{n:"a",pt:$n[0].Int32,ps:0},{n:"low",pt:$n[0].Int32,ps:1},{n:"high",pt:$n[0].Int32,ps:2}],sn:"Clamp$1",rt:$n[0].Int32,p:[$n[0].Int32,$n[0].Int32,$n[0].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Clamp",is:!0,t:8,pi:[{n:"a",pt:$n[0].Single,ps:0},{n:"low",pt:$n[0].Single,ps:1},{n:"high",pt:$n[0].Single,ps:2}],sn:"Clamp$2",rt:$n[0].Single,p:[$n[0].Single,$n[0].Single,$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Cross",is:!0,t:8,pi:[{n:"a",ref:!0,pt:$n[1].Vector2,ps:0},{n:"b",ref:!0,pt:$n[1].Vector2,ps:1}],sn:"Cross$4",rt:$n[0].Single,p:[$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Cross",is:!0,t:8,pi:[{n:"a",pt:$n[1].Vector2,ps:0},{n:"b",pt:$n[1].Vector2,ps:1}],sn:"Cross$3",rt:$n[0].Single,p:[$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Cross",is:!0,t:8,pi:[{n:"a",pt:$n[1].Vector2,ps:0},{n:"s",pt:$n[0].Single,ps:1}],sn:"Cross",rt:$n[1].Vector2,p:[$n[1].Vector2,$n[0].Single]},{a:2,n:"Cross",is:!0,t:8,pi:[{n:"a",pt:$n[1].Vector3,ps:0},{n:"b",pt:$n[1].Vector3,ps:1}],sn:"Cross$2",rt:$n[1].Vector3,p:[$n[1].Vector3,$n[1].Vector3]},{a:2,n:"Cross",is:!0,t:8,pi:[{n:"s",pt:$n[0].Single,ps:0},{n:"a",pt:$n[1].Vector2,ps:1}],sn:"Cross$1",rt:$n[1].Vector2,p:[$n[0].Single,$n[1].Vector2]},{a:2,n:"Cross",is:!0,t:8,pi:[{n:"a",ref:!0,pt:$n[1].Vector2,ps:0},{n:"b",ref:!0,pt:$n[1].Vector2,ps:1},{n:"c",out:!0,pt:$n[0].Single,ps:2}],sn:"Cross$5",rt:$n[0].Void,p:[$n[1].Vector2,$n[1].Vector2,$n[0].Single]},{a:2,n:"Cross",is:!0,t:8,pi:[{n:"s",pt:$n[0].Single,ps:0},{n:"a",ref:!0,pt:$n[1].Vector2,ps:1},{n:"b",out:!0,pt:$n[1].Vector2,ps:2}],sn:"Cross$6",rt:$n[0].Void,p:[$n[0].Single,$n[1].Vector2,$n[1].Vector2]},{a:2,n:"Dot",is:!0,t:8,pi:[{n:"a",pt:$n[1].Vector3,ps:0},{n:"b",pt:$n[1].Vector3,ps:1}],sn:"Dot",rt:$n[0].Single,p:[$n[1].Vector3,$n[1].Vector3],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"FloatEquals",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Single,ps:0},{n:"value2",pt:$n[0].Single,ps:1}],sn:"FloatEquals",rt:$n[0].Boolean,p:[$n[0].Single,$n[0].Single],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"FloatEquals",is:!0,t:8,pi:[{n:"value1",pt:$n[0].Single,ps:0},{n:"value2",pt:$n[0].Single,ps:1},{n:"delta",pt:$n[0].Single,ps:2}],sn:"FloatEquals$1",rt:$n[0].Boolean,p:[$n[0].Single,$n[0].Single,$n[0].Single],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"FloatInRange",is:!0,t:8,pi:[{n:"value",pt:$n[0].Single,ps:0},{n:"min",pt:$n[0].Single,ps:1},{n:"max",pt:$n[0].Single,ps:2}],sn:"FloatInRange",rt:$n[0].Boolean,p:[$n[0].Single,$n[0].Single,$n[0].Single],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"InvSqrt",is:!0,t:8,pi:[{n:"x",pt:$n[0].Single,ps:0}],sn:"InvSqrt",rt:$n[0].Single,p:[$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"IsCollinear",is:!0,t:8,pi:[{n:"a",ref:!0,pt:$n[1].Vector2,ps:0},{n:"b",ref:!0,pt:$n[1].Vector2,ps:1},{n:"c",ref:!0,pt:$n[1].Vector2,ps:2},{n:"tolerance",dv:0,o:!0,pt:$n[0].Single,ps:3}],sn:"IsCollinear",rt:$n[0].Boolean,p:[$n[1].Vector2,$n[1].Vector2,$n[1].Vector2,$n[0].Single],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsValid",is:!0,t:8,pi:[{n:"x",pt:$n[1].Vector2,ps:0}],sn:"IsValid",rt:$n[0].Boolean,p:[$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsValid",is:!0,t:8,pi:[{n:"x",pt:$n[0].Single,ps:0}],sn:"IsValid$1",rt:$n[0].Boolean,p:[$n[0].Single],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Mul",is:!0,t:8,pi:[{n:"A",ref:!0,pt:$n[4].Mat22,ps:0},{n:"v",pt:$n[1].Vector2,ps:1}],sn:"Mul$2",rt:$n[1].Vector2,p:[$n[4].Mat22,$n[1].Vector2]},{a:2,n:"Mul",is:!0,t:8,pi:[{n:"A",ref:!0,pt:$n[4].Mat22,ps:0},{n:"v",ref:!0,pt:$n[1].Vector2,ps:1}],sn:"Mul$3",rt:$n[1].Vector2,p:[$n[4].Mat22,$n[1].Vector2]},{a:2,n:"Mul",is:!0,t:8,pi:[{n:"A",pt:$n[4].Mat33,ps:0},{n:"v",pt:$n[1].Vector3,ps:1}],sn:"Mul$8",rt:$n[1].Vector3,p:[$n[4].Mat33,$n[1].Vector3]},{a:2,n:"Mul",is:!0,t:8,pi:[{n:"rot",ref:!0,pt:$n[4].Rot,ps:0},{n:"axis",pt:$n[1].Vector2,ps:1}],sn:"Mul$5",rt:$n[1].Vector2,p:[$n[4].Rot,$n[1].Vector2]},{a:2,n:"Mul",is:!0,t:8,pi:[{n:"q",pt:$n[4].Rot,ps:0},{n:"r",pt:$n[4].Rot,ps:1}],sn:"Mul",rt:$n[4].Rot,p:[$n[4].Rot,$n[4].Rot]},{a:2,n:"Mul",is:!0,t:8,pi:[{n:"q",pt:$n[4].Rot,ps:0},{n:"v",pt:$n[1].Vector2,ps:1}],sn:"Mul$4",rt:$n[1].Vector2,p:[$n[4].Rot,$n[1].Vector2]},{a:2,n:"Mul",is:!0,t:8,pi:[{n:"T",ref:!0,pt:$n[4].Transform,ps:0},{n:"v",pt:$n[1].Vector2,ps:1}],sn:"Mul$6",rt:$n[1].Vector2,p:[$n[4].Transform,$n[1].Vector2]},{a:2,n:"Mul",is:!0,t:8,pi:[{n:"T",ref:!0,pt:$n[4].Transform,ps:0},{n:"v",ref:!0,pt:$n[1].Vector2,ps:1}],sn:"Mul$7",rt:$n[1].Vector2,p:[$n[4].Transform,$n[1].Vector2]},{a:2,n:"Mul",is:!0,t:8,pi:[{n:"A",pt:$n[4].Transform,ps:0},{n:"B",pt:$n[4].Transform,ps:1}],sn:"Mul$1",rt:$n[4].Transform,p:[$n[4].Transform,$n[4].Transform]},{a:2,n:"Mul22",is:!0,t:8,pi:[{n:"A",pt:$n[4].Mat33,ps:0},{n:"v",pt:$n[1].Vector2,ps:1}],sn:"Mul22",rt:$n[1].Vector2,p:[$n[4].Mat33,$n[1].Vector2]},{a:2,n:"MulT",is:!0,t:8,pi:[{n:"A",ref:!0,pt:$n[4].Mat22,ps:0},{n:"v",pt:$n[1].Vector2,ps:1}],sn:"MulT$2",rt:$n[1].Vector2,p:[$n[4].Mat22,$n[1].Vector2]},{a:2,n:"MulT",is:!0,t:8,pi:[{n:"A",ref:!0,pt:$n[4].Mat22,ps:0},{n:"v",ref:!0,pt:$n[1].Vector2,ps:1}],sn:"MulT$3",rt:$n[1].Vector2,p:[$n[4].Mat22,$n[1].Vector2]},{a:2,n:"MulT",is:!0,t:8,pi:[{n:"rot",ref:!0,pt:$n[4].Rot,ps:0},{n:"axis",pt:$n[1].Vector2,ps:1}],sn:"MulT$5",rt:$n[1].Vector2,p:[$n[4].Rot,$n[1].Vector2]},{a:2,n:"MulT",is:!0,t:8,pi:[{n:"q",pt:$n[4].Rot,ps:0},{n:"r",pt:$n[4].Rot,ps:1}],sn:"MulT",rt:$n[4].Rot,p:[$n[4].Rot,$n[4].Rot]},{a:2,n:"MulT",is:!0,t:8,pi:[{n:"q",pt:$n[4].Rot,ps:0},{n:"v",pt:$n[1].Vector2,ps:1}],sn:"MulT$4",rt:$n[1].Vector2,p:[$n[4].Rot,$n[1].Vector2]},{a:2,n:"MulT",is:!0,t:8,pi:[{n:"T",ref:!0,pt:$n[4].Transform,ps:0},{n:"v",pt:$n[1].Vector2,ps:1}],sn:"MulT$7",rt:$n[1].Vector2,p:[$n[4].Transform,$n[1].Vector2]},{a:2,n:"MulT",is:!0,t:8,pi:[{n:"T",ref:!0,pt:$n[4].Transform,ps:0},{n:"v",ref:!0,pt:$n[1].Vector2,ps:1}],sn:"MulT$8",rt:$n[1].Vector2,p:[$n[4].Transform,$n[1].Vector2]},{a:2,n:"MulT",is:!0,t:8,pi:[{n:"A",pt:$n[4].Transform,ps:0},{n:"B",pt:$n[4].Transform,ps:1}],sn:"MulT$1",rt:$n[4].Transform,p:[$n[4].Transform,$n[4].Transform]},{a:2,n:"MulT",is:!0,t:8,pi:[{n:"T",pt:$n[4].Transform,ps:0},{n:"v",pt:$n[1].Vector2,ps:1}],sn:"MulT$6",rt:$n[1].Vector2,p:[$n[4].Transform,$n[1].Vector2]},{a:2,n:"MulT",is:!0,t:8,pi:[{n:"A",ref:!0,pt:$n[4].Mat22,ps:0},{n:"B",ref:!0,pt:$n[4].Mat22,ps:1},{n:"C",out:!0,pt:$n[4].Mat22,ps:2}],sn:"MulT$9",rt:$n[0].Void,p:[$n[4].Mat22,$n[4].Mat22,$n[4].Mat22]},{a:2,n:"MulT",is:!0,t:8,pi:[{n:"A",ref:!0,pt:$n[4].Transform,ps:0},{n:"B",ref:!0,pt:$n[4].Transform,ps:1},{n:"C",out:!0,pt:$n[4].Transform,ps:2}],sn:"MulT$10",rt:$n[0].Void,p:[$n[4].Transform,$n[4].Transform,$n[4].Transform]},{a:2,n:"Skew",is:!0,t:8,pi:[{n:"input",pt:$n[1].Vector2,ps:0}],sn:"Skew",rt:$n[1].Vector2,p:[$n[1].Vector2]},{a:2,n:"Swap",is:!0,t:8,pi:[{n:"a",ref:!0,pt:System.Object,ps:0},{n:"b",ref:!0,pt:System.Object,ps:1}],tpc:1,tprm:["T"],sn:"Swap",rt:$n[0].Void,p:[System.Object,System.Object]},{a:2,n:"VectorAngle",is:!0,t:8,pi:[{n:"p1",ref:!0,pt:$n[1].Vector2,ps:0},{n:"p2",ref:!0,pt:$n[1].Vector2,ps:1}],sn:"VectorAngle$1",rt:$n[0].Double,p:[$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Double,System.Double.format,System.Double.getHashCode)}},{a:2,n:"VectorAngle",is:!0,t:8,pi:[{n:"p1",pt:$n[1].Vector2,ps:0},{n:"p2",pt:$n[1].Vector2,ps:1}],sn:"VectorAngle",rt:$n[0].Double,p:[$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Double,System.Double.format,System.Double.getHashCode)}}]}},$n);$m("FarseerPhysics.Common.MathUtils.FloatConverter",function(){return{td:$n[4].MathUtils,att:1048851,a:1,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"i",t:4,rt:$n[0].Int32,sn:"i",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"x",t:4,rt:$n[0].Single,sn:"x",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Common.Mat22",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[1].Vector2,$n[1].Vector2],pi:[{n:"c1",pt:$n[1].Vector2,ps:0},{n:"c2",pt:$n[1].Vector2,ps:1}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Single],pi:[{n:"a11",pt:$n[0].Single,ps:0},{n:"a12",pt:$n[0].Single,ps:1},{n:"a21",pt:$n[0].Single,ps:2},{n:"a22",pt:$n[0].Single,ps:3}],sn:"$ctor2"},{a:2,n:"Add",is:!0,t:8,pi:[{n:"A",ref:!0,pt:$n[4].Mat22,ps:0},{n:"B",ref:!0,pt:$n[4].Mat22,ps:1},{n:"R",out:!0,pt:$n[4].Mat22,ps:2}],sn:"Add",rt:$n[0].Void,p:[$n[4].Mat22,$n[4].Mat22,$n[4].Mat22]},{a:2,n:"Set",t:8,pi:[{n:"c1",pt:$n[1].Vector2,ps:0},{n:"c2",pt:$n[1].Vector2,ps:1}],sn:"Set",rt:$n[0].Void,p:[$n[1].Vector2,$n[1].Vector2]},{a:2,n:"SetIdentity",t:8,sn:"SetIdentity",rt:$n[0].Void},{a:2,n:"SetZero",t:8,sn:"SetZero",rt:$n[0].Void},{a:2,n:"Solve",t:8,pi:[{n:"b",pt:$n[1].Vector2,ps:0}],sn:"Solve",rt:$n[1].Vector2,p:[$n[1].Vector2]},{a:2,n:"Inverse",t:16,rt:$n[4].Mat22,g:{a:2,n:"get_Inverse",t:8,rt:$n[4].Mat22,fg:"Inverse"},fn:"Inverse"},{a:2,n:"ex",t:4,rt:$n[1].Vector2,sn:"ex"},{a:2,n:"ey",t:4,rt:$n[1].Vector2,sn:"ey"}]}},$n);$m("FarseerPhysics.Common.Mat33",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[1].Vector3,$n[1].Vector3,$n[1].Vector3],pi:[{n:"c1",pt:$n[1].Vector3,ps:0},{n:"c2",pt:$n[1].Vector3,ps:1},{n:"c3",pt:$n[1].Vector3,ps:2}],sn:"$ctor1"},{a:2,n:"GetInverse22",t:8,pi:[{n:"M",ref:!0,pt:$n[4].Mat33,ps:0}],sn:"GetInverse22",rt:$n[0].Void,p:[$n[4].Mat33]},{a:2,n:"GetSymInverse33",t:8,pi:[{n:"M",ref:!0,pt:$n[4].Mat33,ps:0}],sn:"GetSymInverse33",rt:$n[0].Void,p:[$n[4].Mat33]},{a:2,n:"SetZero",t:8,sn:"SetZero",rt:$n[0].Void},{a:2,n:"Solve22",t:8,pi:[{n:"b",pt:$n[1].Vector2,ps:0}],sn:"Solve22",rt:$n[1].Vector2,p:[$n[1].Vector2]},{a:2,n:"Solve33",t:8,pi:[{n:"b",pt:$n[1].Vector3,ps:0}],sn:"Solve33",rt:$n[1].Vector3,p:[$n[1].Vector3]},{a:2,n:"ex",t:4,rt:$n[1].Vector3,sn:"ex"},{a:2,n:"ey",t:4,rt:$n[1].Vector3,sn:"ey"},{a:2,n:"ez",t:4,rt:$n[1].Vector3,sn:"ez"}]}},$n);$m("FarseerPhysics.Common.Rot",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].Single],pi:[{n:"angle",pt:$n[0].Single,ps:0}],sn:"$ctor1"},{a:2,n:"GetAngle",t:8,sn:"GetAngle",rt:$n[0].Single,box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"GetXAxis",t:8,sn:"GetXAxis",rt:$n[1].Vector2},{a:2,n:"GetYAxis",t:8,sn:"GetYAxis",rt:$n[1].Vector2},{a:2,n:"Set",t:8,pi:[{n:"angle",pt:$n[0].Single,ps:0}],sn:"Set",rt:$n[0].Void,p:[$n[0].Single]},{a:2,n:"SetIdentity",t:8,sn:"SetIdentity",rt:$n[0].Void},{a:2,n:"c",t:4,rt:$n[0].Single,sn:"c",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"s",t:4,rt:$n[0].Single,sn:"s",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Common.Transform",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[1].Vector2,$n[4].Rot],pi:[{n:"position",ref:!0,pt:$n[1].Vector2,ps:0},{n:"rotation",ref:!0,pt:$n[4].Rot,ps:1}],sn:"$ctor1"},{a:2,n:"Set",t:8,pi:[{n:"position",pt:$n[1].Vector2,ps:0},{n:"angle",pt:$n[0].Single,ps:1}],sn:"Set",rt:$n[0].Void,p:[$n[1].Vector2,$n[0].Single]},{a:2,n:"SetIdentity",t:8,sn:"SetIdentity",rt:$n[0].Void},{a:2,n:"p",t:4,rt:$n[1].Vector2,sn:"p"},{a:2,n:"q",t:4,rt:$n[4].Rot,sn:"q"}]}},$n);$m("FarseerPhysics.Common.Sweep",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Advance",t:8,pi:[{n:"alpha",pt:$n[0].Single,ps:0}],sn:"Advance",rt:$n[0].Void,p:[$n[0].Single]},{a:2,n:"GetTransform",t:8,pi:[{n:"xfb",out:!0,pt:$n[4].Transform,ps:0},{n:"beta",pt:$n[0].Single,ps:1}],sn:"GetTransform",rt:$n[0].Void,p:[$n[4].Transform,$n[0].Single]},{a:2,n:"Normalize",t:8,sn:"Normalize",rt:$n[0].Void},{a:2,n:"A",t:4,rt:$n[0].Single,sn:"A",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"A0",t:4,rt:$n[0].Single,sn:"A0",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Alpha0",t:4,rt:$n[0].Single,sn:"Alpha0",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"C",t:4,rt:$n[1].Vector2,sn:"C"},{a:2,n:"C0",t:4,rt:$n[1].Vector2,sn:"C0"},{a:2,n:"LocalCenter",t:4,rt:$n[1].Vector2,sn:"LocalCenter"}]}},$n);$m("FarseerPhysics.Common.Path",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[System.Array.type(Microsoft.Xna.Framework.Vector2)],pi:[{n:"vertices",pt:System.Array.type(Microsoft.Xna.Framework.Vector2),ps:0}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[5].IList$1(Microsoft.Xna.Framework.Vector2)],pi:[{n:"vertices",pt:$n[5].IList$1(Microsoft.Xna.Framework.Vector2),ps:0}],sn:"$ctor2"},{a:2,n:"Add",t:8,pi:[{n:"point",pt:$n[1].Vector2,ps:0}],sn:"Add",rt:$n[0].Void,p:[$n[1].Vector2]},{a:2,n:"GetLength",t:8,sn:"GetLength",rt:$n[0].Single,box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"GetPosition",t:8,pi:[{n:"time",pt:$n[0].Single,ps:0}],sn:"GetPosition",rt:$n[1].Vector2,p:[$n[0].Single]},{a:2,n:"GetPositionNormal",t:8,pi:[{n:"time",pt:$n[0].Single,ps:0}],sn:"GetPositionNormal",rt:$n[1].Vector2,p:[$n[0].Single]},{a:2,n:"GetVertices",t:8,pi:[{n:"divisions",pt:$n[0].Int32,ps:0}],sn:"GetVertices",rt:$n[4].Vertices,p:[$n[0].Int32]},{a:2,n:"NextIndex",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0}],sn:"NextIndex",rt:$n[0].Int32,p:[$n[0].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"PreviousIndex",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0}],sn:"PreviousIndex",rt:$n[0].Int32,p:[$n[0].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Remove",t:8,pi:[{n:"point",pt:$n[1].Vector2,ps:0}],sn:"Remove",rt:$n[0].Void,p:[$n[1].Vector2]},{a:2,n:"RemoveAt",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0}],sn:"RemoveAt",rt:$n[0].Void,p:[$n[0].Int32]},{a:2,n:"Rotate",t:8,pi:[{n:"value",pt:$n[0].Single,ps:0}],sn:"Rotate",rt:$n[0].Void,p:[$n[0].Single]},{a:2,n:"Scale",t:8,pi:[{n:"value",ref:!0,pt:$n[1].Vector2,ps:0}],sn:"Scale",rt:$n[0].Void,p:[$n[1].Vector2]},{a:2,n:"SubdivideEvenly",t:8,pi:[{n:"divisions",pt:$n[0].Int32,ps:0}],sn:"SubdivideEvenly",rt:$n[5].List$1(Microsoft.Xna.Framework.Vector3),p:[$n[0].Int32]},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[0].String},{a:2,n:"Translate",t:8,pi:[{n:"vector",ref:!0,pt:$n[1].Vector2,ps:0}],sn:"Translate",rt:$n[0].Void,p:[$n[1].Vector2]},{a:2,n:"Closed",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_Closed",t:8,rt:$n[0].Boolean,fg:"Closed",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_Closed",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"Closed"},fn:"Closed"},{a:2,n:"ControlPoints",t:4,rt:$n[5].List$1(Microsoft.Xna.Framework.Vector2),sn:"ControlPoints"},{a:1,n:"_deltaT",t:4,rt:$n[0].Single,sn:"_deltaT",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Common.PathManager",function(){return{nested:[$n[4].PathManager.LinkType],att:1048961,a:2,s:!0,m:[{a:2,n:"AttachBodiesWithRevoluteJoint",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"bodies",pt:$n[5].List$1(FarseerPhysics.Dynamics.Body),ps:1},{n:"localAnchorA",pt:$n[1].Vector2,ps:2},{n:"localAnchorB",pt:$n[1].Vector2,ps:3},{n:"connectFirstAndLast",pt:$n[0].Boolean,ps:4},{n:"collideConnected",pt:$n[0].Boolean,ps:5}],sn:"AttachBodiesWithRevoluteJoint",rt:$n[5].List$1(FarseerPhysics.Dynamics.Joints.RevoluteJoint),p:[$n[3].World,$n[5].List$1(FarseerPhysics.Dynamics.Body),$n[1].Vector2,$n[1].Vector2,$n[0].Boolean,$n[0].Boolean]},{a:2,n:"ConvertPathToEdges",is:!0,t:8,pi:[{n:"path",pt:$n[4].Path,ps:0},{n:"body",pt:$n[3].Body,ps:1},{n:"subdivisions",pt:$n[0].Int32,ps:2}],sn:"ConvertPathToEdges",rt:$n[0].Void,p:[$n[4].Path,$n[3].Body,$n[0].Int32]},{a:2,n:"ConvertPathToPolygon",is:!0,t:8,pi:[{n:"path",pt:$n[4].Path,ps:0},{n:"body",pt:$n[3].Body,ps:1},{n:"density",pt:$n[0].Single,ps:2},{n:"subdivisions",pt:$n[0].Int32,ps:3}],sn:"ConvertPathToPolygon",rt:$n[0].Void,p:[$n[4].Path,$n[3].Body,$n[0].Single,$n[0].Int32]},{a:2,n:"EvenlyDistributeShapesAlongPath",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"path",pt:$n[4].Path,ps:1},{n:"shape",pt:$n[7].Shape,ps:2},{n:"type",pt:$n[3].BodyType,ps:3},{n:"copies",pt:$n[0].Int32,ps:4}],sn:"EvenlyDistributeShapesAlongPath",rt:$n[5].List$1(FarseerPhysics.Dynamics.Body),p:[$n[3].World,$n[4].Path,$n[7].Shape,$n[3].BodyType,$n[0].Int32]},{a:2,n:"EvenlyDistributeShapesAlongPath",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"path",pt:$n[4].Path,ps:1},{n:"shape",pt:$n[7].Shape,ps:2},{n:"type",pt:$n[3].BodyType,ps:3},{n:"copies",pt:$n[0].Int32,ps:4},{n:"userData",pt:$n[0].Object,ps:5}],sn:"EvenlyDistributeShapesAlongPath$1",rt:$n[5].List$1(FarseerPhysics.Dynamics.Body),p:[$n[3].World,$n[4].Path,$n[7].Shape,$n[3].BodyType,$n[0].Int32,$n[0].Object]},{a:2,n:"EvenlyDistributeShapesAlongPath",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"path",pt:$n[4].Path,ps:1},{n:"shapes",pt:$n[5].IEnumerable$1(FarseerPhysics.Collision.Shapes.Shape),ps:2},{n:"type",pt:$n[3].BodyType,ps:3},{n:"copies",pt:$n[0].Int32,ps:4},{n:"userData",dv:null,o:!0,pt:$n[0].Object,ps:5}],sn:"EvenlyDistributeShapesAlongPath$2",rt:$n[5].List$1(FarseerPhysics.Dynamics.Body),p:[$n[3].World,$n[4].Path,$n[5].IEnumerable$1(FarseerPhysics.Collision.Shapes.Shape),$n[3].BodyType,$n[0].Int32,$n[0].Object]},{a:2,n:"MoveBodyOnPath",is:!0,t:8,pi:[{n:"path",pt:$n[4].Path,ps:0},{n:"body",pt:$n[3].Body,ps:1},{n:"time",pt:$n[0].Single,ps:2},{n:"strength",pt:$n[0].Single,ps:3},{n:"timeStep",pt:$n[0].Single,ps:4}],sn:"MoveBodyOnPath",rt:$n[0].Void,p:[$n[4].Path,$n[3].Body,$n[0].Single,$n[0].Single,$n[0].Single]}]}},$n);$m("FarseerPhysics.Common.PathManager.LinkType",function(){return{td:$n[4].PathManager,att:258,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Revolute",is:!0,t:4,rt:$n[4].PathManager.LinkType,sn:"Revolute",box:function($v){return Bridge.box($v,FarseerPhysics.Common.PathManager.LinkType,System.Enum.toStringFn(FarseerPhysics.Common.PathManager.LinkType))}},{a:2,n:"Slider",is:!0,t:4,rt:$n[4].PathManager.LinkType,sn:"Slider",box:function($v){return Bridge.box($v,FarseerPhysics.Common.PathManager.LinkType,System.Enum.toStringFn(FarseerPhysics.Common.PathManager.LinkType))}}]}},$n);$m("FarseerPhysics.Common.PolygonTools",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"CreateArc",is:!0,t:8,pi:[{n:"radians",pt:$n[0].Single,ps:0},{n:"sides",pt:$n[0].Int32,ps:1},{n:"radius",pt:$n[0].Single,ps:2}],sn:"CreateArc",rt:$n[4].Vertices,p:[$n[0].Single,$n[0].Int32,$n[0].Single]},{a:2,n:"CreateCapsule",is:!0,t:8,pi:[{n:"height",pt:$n[0].Single,ps:0},{n:"endRadius",pt:$n[0].Single,ps:1},{n:"edges",pt:$n[0].Int32,ps:2}],sn:"CreateCapsule",rt:$n[4].Vertices,p:[$n[0].Single,$n[0].Single,$n[0].Int32]},{a:2,n:"CreateCapsule",is:!0,t:8,pi:[{n:"height",pt:$n[0].Single,ps:0},{n:"topRadius",pt:$n[0].Single,ps:1},{n:"topEdges",pt:$n[0].Int32,ps:2},{n:"bottomRadius",pt:$n[0].Single,ps:3},{n:"bottomEdges",pt:$n[0].Int32,ps:4}],sn:"CreateCapsule$1",rt:$n[4].Vertices,p:[$n[0].Single,$n[0].Single,$n[0].Int32,$n[0].Single,$n[0].Int32]},{a:2,n:"CreateCircle",is:!0,t:8,pi:[{n:"radius",pt:$n[0].Single,ps:0},{n:"numberOfEdges",pt:$n[0].Int32,ps:1}],sn:"CreateCircle",rt:$n[4].Vertices,p:[$n[0].Single,$n[0].Int32]},{a:2,n:"CreateEllipse",is:!0,t:8,pi:[{n:"xRadius",pt:$n[0].Single,ps:0},{n:"yRadius",pt:$n[0].Single,ps:1},{n:"numberOfEdges",pt:$n[0].Int32,ps:2}],sn:"CreateEllipse",rt:$n[4].Vertices,p:[$n[0].Single,$n[0].Single,$n[0].Int32]},{a:2,n:"CreateGear",is:!0,t:8,pi:[{n:"radius",pt:$n[0].Single,ps:0},{n:"numberOfTeeth",pt:$n[0].Int32,ps:1},{n:"tipPercentage",pt:$n[0].Single,ps:2},{n:"toothHeight",pt:$n[0].Single,ps:3}],sn:"CreateGear",rt:$n[4].Vertices,p:[$n[0].Single,$n[0].Int32,$n[0].Single,$n[0].Single]},{a:2,n:"CreateLine",is:!0,t:8,pi:[{n:"start",pt:$n[1].Vector2,ps:0},{n:"end",pt:$n[1].Vector2,ps:1}],sn:"CreateLine",rt:$n[4].Vertices,p:[$n[1].Vector2,$n[1].Vector2]},{a:2,n:"CreatePolygon",is:!0,t:8,pi:[{n:"data",pt:$n[0].Array.type(System.UInt32),ps:0},{n:"width",pt:$n[0].Int32,ps:1}],sn:"CreatePolygon",rt:$n[4].Vertices,p:[$n[0].Array.type(System.UInt32),$n[0].Int32]},{a:2,n:"CreatePolygon",is:!0,t:8,pi:[{n:"data",pt:$n[0].Array.type(System.UInt32),ps:0},{n:"width",pt:$n[0].Int32,ps:1},{n:"holeDetection",pt:$n[0].Boolean,ps:2}],sn:"CreatePolygon$1",rt:$n[4].Vertices,p:[$n[0].Array.type(System.UInt32),$n[0].Int32,$n[0].Boolean]},{a:2,n:"CreatePolygon",is:!0,t:8,pi:[{n:"data",pt:$n[0].Array.type(System.UInt32),ps:0},{n:"width",pt:$n[0].Int32,ps:1},{n:"hullTolerance",pt:$n[0].Single,ps:2},{n:"alphaTolerance",pt:$n[0].Byte,ps:3},{n:"multiPartDetection",pt:$n[0].Boolean,ps:4},{n:"holeDetection",pt:$n[0].Boolean,ps:5}],sn:"CreatePolygon$2",rt:$n[5].List$1(FarseerPhysics.Common.Vertices),p:[$n[0].Array.type(System.UInt32),$n[0].Int32,$n[0].Single,$n[0].Byte,$n[0].Boolean,$n[0].Boolean]},{a:2,n:"CreateRectangle",is:!0,t:8,pi:[{n:"hx",pt:$n[0].Single,ps:0},{n:"hy",pt:$n[0].Single,ps:1}],sn:"CreateRectangle",rt:$n[4].Vertices,p:[$n[0].Single,$n[0].Single]},{a:2,n:"CreateRectangle",is:!0,t:8,pi:[{n:"hx",pt:$n[0].Single,ps:0},{n:"hy",pt:$n[0].Single,ps:1},{n:"center",pt:$n[1].Vector2,ps:2},{n:"angle",pt:$n[0].Single,ps:3}],sn:"CreateRectangle$1",rt:$n[4].Vertices,p:[$n[0].Single,$n[0].Single,$n[1].Vector2,$n[0].Single]},{a:2,n:"CreateRoundedRectangle",is:!0,t:8,pi:[{n:"width",pt:$n[0].Single,ps:0},{n:"height",pt:$n[0].Single,ps:1},{n:"xRadius",pt:$n[0].Single,ps:2},{n:"yRadius",pt:$n[0].Single,ps:3},{n:"segments",pt:$n[0].Int32,ps:4}],sn:"CreateRoundedRectangle",rt:$n[4].Vertices,p:[$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Int32]}]}},$n);$m("FarseerPhysics.Common.PolygonError",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"AreaTooSmall",is:!0,t:4,rt:$n[4].PolygonError,sn:"AreaTooSmall",box:function($v){return Bridge.box($v,FarseerPhysics.Common.PolygonError,System.Enum.toStringFn(FarseerPhysics.Common.PolygonError))}},{a:2,n:"InvalidAmountOfVertices",is:!0,t:4,rt:$n[4].PolygonError,sn:"InvalidAmountOfVertices",box:function($v){return Bridge.box($v,FarseerPhysics.Common.PolygonError,System.Enum.toStringFn(FarseerPhysics.Common.PolygonError))}},{a:2,n:"NoError",is:!0,t:4,rt:$n[4].PolygonError,sn:"NoError",box:function($v){return Bridge.box($v,FarseerPhysics.Common.PolygonError,System.Enum.toStringFn(FarseerPhysics.Common.PolygonError))}},{a:2,n:"NotConvex",is:!0,t:4,rt:$n[4].PolygonError,sn:"NotConvex",box:function($v){return Bridge.box($v,FarseerPhysics.Common.PolygonError,System.Enum.toStringFn(FarseerPhysics.Common.PolygonError))}},{a:2,n:"NotCounterClockWise",is:!0,t:4,rt:$n[4].PolygonError,sn:"NotCounterClockWise",box:function($v){return Bridge.box($v,FarseerPhysics.Common.PolygonError,System.Enum.toStringFn(FarseerPhysics.Common.PolygonError))}},{a:2,n:"NotSimple",is:!0,t:4,rt:$n[4].PolygonError,sn:"NotSimple",box:function($v){return Bridge.box($v,FarseerPhysics.Common.PolygonError,System.Enum.toStringFn(FarseerPhysics.Common.PolygonError))}},{a:2,n:"SideTooSmall",is:!0,t:4,rt:$n[4].PolygonError,sn:"SideTooSmall",box:function($v){return Bridge.box($v,FarseerPhysics.Common.PolygonError,System.Enum.toStringFn(FarseerPhysics.Common.PolygonError))}}]}},$n);$m("FarseerPhysics.Common.Vertices",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[5].IEnumerable$1(Microsoft.Xna.Framework.Vector2)],pi:[{n:"vertices",pt:$n[5].IEnumerable$1(Microsoft.Xna.Framework.Vector2),ps:0}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[0].Int32],pi:[{n:"capacity",pt:$n[0].Int32,ps:0}],sn:"$ctor2"},{a:2,n:"CheckPolygon",t:8,sn:"CheckPolygon",rt:$n[4].PolygonError,box:function($v){return Bridge.box($v,FarseerPhysics.Common.PolygonError,System.Enum.toStringFn(FarseerPhysics.Common.PolygonError))}},{a:2,n:"ForceCounterClockWise",t:8,sn:"ForceCounterClockWise",rt:$n[0].Void},{a:2,n:"GetAABB",t:8,sn:"GetAABB",rt:$n[11].AABB},{a:2,n:"GetArea",t:8,sn:"GetArea",rt:$n[0].Single,box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"GetCentroid",t:8,sn:"GetCentroid",rt:$n[1].Vector2},{a:2,n:"GetSignedArea",t:8,sn:"GetSignedArea",rt:$n[0].Single,box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"IsConvex",t:8,sn:"IsConvex",rt:$n[0].Boolean,box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsCounterClockWise",t:8,sn:"IsCounterClockWise",rt:$n[0].Boolean,box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsSimple",t:8,sn:"IsSimple",rt:$n[0].Boolean,box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"NextIndex",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0}],sn:"NextIndex",rt:$n[0].Int32,p:[$n[0].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"NextVertex",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0}],sn:"NextVertex",rt:$n[1].Vector2,p:[$n[0].Int32]},{a:2,n:"PointInPolygon",t:8,pi:[{n:"point",ref:!0,pt:$n[1].Vector2,ps:0}],sn:"PointInPolygon",rt:$n[0].Int32,p:[$n[1].Vector2],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"PointInPolygonAngle",t:8,pi:[{n:"point",ref:!0,pt:$n[1].Vector2,ps:0}],sn:"PointInPolygonAngle",rt:$n[0].Boolean,p:[$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"PreviousIndex",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0}],sn:"PreviousIndex",rt:$n[0].Int32,p:[$n[0].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"PreviousVertex",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0}],sn:"PreviousVertex",rt:$n[1].Vector2,p:[$n[0].Int32]},{a:2,n:"ProjectToAxis",t:8,pi:[{n:"axis",ref:!0,pt:$n[1].Vector2,ps:0},{n:"min",out:!0,pt:$n[0].Single,ps:1},{n:"max",out:!0,pt:$n[0].Single,ps:2}],sn:"ProjectToAxis",rt:$n[0].Void,p:[$n[1].Vector2,$n[0].Single,$n[0].Single]},{a:2,n:"Rotate",t:8,pi:[{n:"value",pt:$n[0].Single,ps:0}],sn:"Rotate",rt:$n[0].Void,p:[$n[0].Single]},{a:2,n:"Scale",t:8,pi:[{n:"value",pt:$n[1].Vector2,ps:0}],sn:"Scale",rt:$n[0].Void,p:[$n[1].Vector2]},{a:2,n:"Scale",t:8,pi:[{n:"value",ref:!0,pt:$n[1].Vector2,ps:0}],sn:"Scale$1",rt:$n[0].Void,p:[$n[1].Vector2]},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[0].String},{a:2,n:"Transform",t:8,pi:[{n:"transform",ref:!0,pt:$n[1].Matrix,ps:0}],sn:"Transform",rt:$n[0].Void,p:[$n[1].Matrix]},{a:2,n:"Translate",t:8,pi:[{n:"value",pt:$n[1].Vector2,ps:0}],sn:"Translate",rt:$n[0].Void,p:[$n[1].Vector2]},{a:2,n:"Translate",t:8,pi:[{n:"value",ref:!0,pt:$n[1].Vector2,ps:0}],sn:"Translate$1",rt:$n[0].Void,p:[$n[1].Vector2]},{a:4,n:"AttachedToBody",t:16,rt:$n[0].Boolean,g:{a:4,n:"get_AttachedToBody",t:8,rt:$n[0].Boolean,fg:"AttachedToBody",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:4,n:"set_AttachedToBody",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"AttachedToBody"},fn:"AttachedToBody"},{a:2,n:"Holes",t:16,rt:$n[5].List$1(FarseerPhysics.Common.Vertices),g:{a:2,n:"get_Holes",t:8,rt:$n[5].List$1(FarseerPhysics.Common.Vertices),fg:"Holes"},s:{a:2,n:"set_Holes",t:8,p:[$n[5].List$1(FarseerPhysics.Common.Vertices)],rt:$n[0].Void,fs:"Holes"},fn:"Holes"}]}},$n);$m("FarseerPhysics.Common.TextureTools.MarchingSquares",function(){return{nested:[$n[15].MarchingSquares.CxFastList$1,$n[15].MarchingSquares.CxFastListNode$1,$n[15].MarchingSquares.GeomPoly,$n[15].MarchingSquares.GeomPolyVal],att:1048961,a:2,s:!0,m:[{a:2,n:"DetectSquares",is:!0,t:8,pi:[{n:"domain",pt:$n[11].AABB,ps:0},{n:"cellWidth",pt:$n[0].Single,ps:1},{n:"cellHeight",pt:$n[0].Single,ps:2},{n:"f",pt:$n[0].Array.type(System.SByte,2),ps:3},{n:"lerpCount",pt:$n[0].Int32,ps:4},{n:"combine",pt:$n[0].Boolean,ps:5}],sn:"DetectSquares",rt:$n[5].List$1(FarseerPhysics.Common.Vertices),p:[$n[11].AABB,$n[0].Single,$n[0].Single,$n[0].Array.type(System.SByte,2),$n[0].Int32,$n[0].Boolean]},{a:1,n:"Lerp",is:!0,t:8,pi:[{n:"x0",pt:$n[0].Single,ps:0},{n:"x1",pt:$n[0].Single,ps:1},{n:"v0",pt:$n[0].Single,ps:2},{n:"v1",pt:$n[0].Single,ps:3}],sn:"Lerp",rt:$n[0].Single,p:[$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"MarchSquare",is:!0,t:8,pi:[{n:"f",pt:$n[0].Array.type(System.SByte,2),ps:0},{n:"fs",pt:$n[0].Array.type(System.SByte,2),ps:1},{n:"poly",ref:!0,pt:$n[15].MarchingSquares.GeomPoly,ps:2},{n:"ax",pt:$n[0].Int32,ps:3},{n:"ay",pt:$n[0].Int32,ps:4},{n:"x0",pt:$n[0].Single,ps:5},{n:"y0",pt:$n[0].Single,ps:6},{n:"x1",pt:$n[0].Single,ps:7},{n:"y1",pt:$n[0].Single,ps:8},{n:"bin",pt:$n[0].Int32,ps:9}],sn:"MarchSquare",rt:$n[0].Int32,p:[$n[0].Array.type(System.SByte,2),$n[0].Array.type(System.SByte,2),$n[15].MarchingSquares.GeomPoly,$n[0].Int32,$n[0].Int32,$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"Square",is:!0,t:8,pi:[{n:"x",pt:$n[0].Single,ps:0}],sn:"Square",rt:$n[0].Single,p:[$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"VecCross",is:!0,t:8,pi:[{n:"a",pt:$n[1].Vector2,ps:0},{n:"b",pt:$n[1].Vector2,ps:1}],sn:"VecCross",rt:$n[0].Single,p:[$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"VecDsq",is:!0,t:8,pi:[{n:"a",pt:$n[1].Vector2,ps:0},{n:"b",pt:$n[1].Vector2,ps:1}],sn:"VecDsq",rt:$n[0].Single,p:[$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"Xlerp",is:!0,t:8,pi:[{n:"x0",pt:$n[0].Single,ps:0},{n:"x1",pt:$n[0].Single,ps:1},{n:"y",pt:$n[0].Single,ps:2},{n:"v0",pt:$n[0].Single,ps:3},{n:"v1",pt:$n[0].Single,ps:4},{n:"f",pt:$n[0].Array.type(System.SByte,2),ps:5},{n:"c",pt:$n[0].Int32,ps:6}],sn:"Xlerp",rt:$n[0].Single,p:[$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Array.type(System.SByte,2),$n[0].Int32],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"Ylerp",is:!0,t:8,pi:[{n:"y0",pt:$n[0].Single,ps:0},{n:"y1",pt:$n[0].Single,ps:1},{n:"x",pt:$n[0].Single,ps:2},{n:"v0",pt:$n[0].Single,ps:3},{n:"v1",pt:$n[0].Single,ps:4},{n:"f",pt:$n[0].Array.type(System.SByte,2),ps:5},{n:"c",pt:$n[0].Int32,ps:6}],sn:"Ylerp",rt:$n[0].Single,p:[$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Array.type(System.SByte,2),$n[0].Int32],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"combLeft",is:!0,t:8,pi:[{n:"polya",ref:!0,pt:$n[15].MarchingSquares.GeomPoly,ps:0},{n:"polyb",ref:!0,pt:$n[15].MarchingSquares.GeomPoly,ps:1}],sn:"combLeft",rt:$n[0].Void,p:[$n[15].MarchingSquares.GeomPoly,$n[15].MarchingSquares.GeomPoly]},{a:1,n:"_lookMarch",is:!0,t:4,rt:$n[0].Array.type(System.Int32),sn:"_lookMarch"}]}},$n);$m("FarseerPhysics.Common.TextureTools.MarchingSquares.CxFastList$1",function(T){return{td:$n[15].MarchingSquares,att:1048581,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Add",t:8,pi:[{n:"value",pt:T,ps:0}],sn:"Add",rt:$n[15].MarchingSquares.CxFastListNode$1(T),p:[T]},{a:2,n:"Begin",t:8,sn:"Begin",rt:$n[15].MarchingSquares.CxFastListNode$1(T)},{a:2,n:"Clear",t:8,sn:"Clear",rt:$n[0].Void},{a:2,n:"Empty",t:8,sn:"Empty",rt:$n[0].Boolean,box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"End",t:8,sn:"End",rt:$n[15].MarchingSquares.CxFastListNode$1(T)},{a:2,n:"Erase",t:8,pi:[{n:"prev",pt:$n[15].MarchingSquares.CxFastListNode$1(T),ps:0},{n:"node",pt:$n[15].MarchingSquares.CxFastListNode$1(T),ps:1}],sn:"Erase",rt:$n[15].MarchingSquares.CxFastListNode$1(T),p:[$n[15].MarchingSquares.CxFastListNode$1(T),$n[15].MarchingSquares.CxFastListNode$1(T)]},{a:2,n:"Find",t:8,pi:[{n:"value",pt:T,ps:0}],sn:"Find",rt:$n[15].MarchingSquares.CxFastListNode$1(T),p:[T]},{a:2,n:"Front",t:8,sn:"Front",rt:T},{a:2,n:"GetListOfElements",t:8,sn:"GetListOfElements",rt:$n[5].List$1(T)},{a:2,n:"Has",t:8,pi:[{n:"value",pt:T,ps:0}],sn:"Has",rt:$n[0].Boolean,p:[T],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Insert",t:8,pi:[{n:"node",pt:$n[15].MarchingSquares.CxFastListNode$1(T),ps:0},{n:"value",pt:T,ps:1}],sn:"Insert",rt:$n[15].MarchingSquares.CxFastListNode$1(T),p:[$n[15].MarchingSquares.CxFastListNode$1(T),T]},{a:2,n:"Pop",t:8,sn:"Pop",rt:$n[15].MarchingSquares.CxFastListNode$1(T)},{a:2,n:"Remove",t:8,pi:[{n:"value",pt:T,ps:0}],sn:"Remove",rt:$n[0].Boolean,p:[T],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Size",t:8,sn:"Size",rt:$n[0].Int32,box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_count",t:4,rt:$n[0].Int32,sn:"_count",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_head",t:4,rt:$n[15].MarchingSquares.CxFastListNode$1(T),sn:"_head"}]}},$n);$m("FarseerPhysics.Common.TextureTools.MarchingSquares.CxFastListNode$1",function(T){return{td:$n[15].MarchingSquares,att:1048581,a:4,m:[{a:2,n:".ctor",t:1,p:[T],pi:[{n:"obj",pt:T,ps:0}],sn:"ctor"},{a:2,n:"Elem",t:8,sn:"Elem",rt:T},{a:2,n:"Next",t:8,sn:"Next",rt:$n[15].MarchingSquares.CxFastListNode$1(T)},{a:4,n:"_elt",t:4,rt:T,sn:"_elt"},{a:4,n:"_next",t:4,rt:$n[15].MarchingSquares.CxFastListNode$1(T),sn:"_next"}]}},$n);$m("FarseerPhysics.Common.TextureTools.MarchingSquares.GeomPoly",function(){return{td:$n[15].MarchingSquares,att:1048581,a:4,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Length",t:4,rt:$n[0].Int32,sn:"Length",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Points",t:4,rt:$n[15].MarchingSquares.CxFastList$1(Microsoft.Xna.Framework.Vector2),sn:"Points"}]}},$n);$m("FarseerPhysics.Common.TextureTools.MarchingSquares.GeomPolyVal",function(){return{td:$n[15].MarchingSquares,att:1048579,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[15].MarchingSquares.GeomPoly,$n[0].Int32],pi:[{n:"geomP",pt:$n[15].MarchingSquares.GeomPoly,ps:0},{n:"K",pt:$n[0].Int32,ps:1}],sn:"ctor"},{a:2,n:"GeomP",t:4,rt:$n[15].MarchingSquares.GeomPoly,sn:"GeomP"},{a:2,n:"Key",t:4,rt:$n[0].Int32,sn:"Key",box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("FarseerPhysics.Common.TextureTools.Terrain",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[3].World,$n[11].AABB],pi:[{n:"world",pt:$n[3].World,ps:0},{n:"area",pt:$n[11].AABB,ps:1}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[3].World,$n[1].Vector2,$n[0].Single,$n[0].Single],pi:[{n:"world",pt:$n[3].World,ps:0},{n:"position",pt:$n[1].Vector2,ps:1},{n:"width",pt:$n[0].Single,ps:2},{n:"height",pt:$n[0].Single,ps:3}],sn:"$ctor1"},{a:2,n:"ApplyData",t:8,pi:[{n:"data",pt:$n[0].Array.type(System.SByte,2),ps:0},{n:"offset",dv:null,o:!0,pt:$n[1].Vector2,ps:1}],sn:"ApplyData",rt:$n[0].Void,p:[$n[0].Array.type(System.SByte,2),$n[1].Vector2]},{a:1,n:"GenerateTerrain",t:8,pi:[{n:"gx",pt:$n[0].Int32,ps:0},{n:"gy",pt:$n[0].Int32,ps:1}],sn:"GenerateTerrain",rt:$n[0].Void,p:[$n[0].Int32,$n[0].Int32]},{a:2,n:"Initialize",t:8,sn:"Initialize",rt:$n[0].Void},{a:2,n:"ModifyTerrain",t:8,pi:[{n:"location",pt:$n[1].Vector2,ps:0},{n:"value",pt:$n[0].SByte,ps:1}],sn:"ModifyTerrain",rt:$n[0].Void,p:[$n[1].Vector2,$n[0].SByte]},{a:2,n:"RegenerateTerrain",t:8,sn:"RegenerateTerrain",rt:$n[0].Void},{a:1,n:"RemoveOldData",t:8,pi:[{n:"xStart",pt:$n[0].Int32,ps:0},{n:"xEnd",pt:$n[0].Int32,ps:1},{n:"yStart",pt:$n[0].Int32,ps:2},{n:"yEnd",pt:$n[0].Int32,ps:3}],sn:"RemoveOldData",rt:$n[0].Void,p:[$n[0].Int32,$n[0].Int32,$n[0].Int32,$n[0].Int32]},{a:2,n:"CellSize",t:4,rt:$n[0].Int32,sn:"CellSize",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Center",t:4,rt:$n[1].Vector2,sn:"Center"},{a:2,n:"Decomposer",t:4,rt:$n[16].TriangulationAlgorithm,sn:"Decomposer",box:function($v){return Bridge.box($v,FarseerPhysics.Common.Decomposition.TriangulationAlgorithm,System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.TriangulationAlgorithm))}},{a:2,n:"Height",t:4,rt:$n[0].Single,sn:"Height",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Iterations",t:4,rt:$n[0].Int32,sn:"Iterations",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"PointsPerUnit",t:4,rt:$n[0].Int32,sn:"PointsPerUnit",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"SubCellSize",t:4,rt:$n[0].Int32,sn:"SubCellSize",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Width",t:4,rt:$n[0].Single,sn:"Width",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"World",t:4,rt:$n[3].World,sn:"World"},{a:1,n:"_bodyMap",t:4,rt:System.Array.type(System.Collections.Generic.List$1(FarseerPhysics.Dynamics.Body),2),sn:"_bodyMap"},{a:1,n:"_dirtyArea",t:4,rt:$n[11].AABB,sn:"_dirtyArea"},{a:1,n:"_localHeight",t:4,rt:$n[0].Single,sn:"_localHeight",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_localWidth",t:4,rt:$n[0].Single,sn:"_localWidth",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_terrainMap",t:4,rt:$n[0].Array.type(System.SByte,2),sn:"_terrainMap"},{a:1,n:"_topLeft",t:4,rt:$n[1].Vector2,sn:"_topLeft"},{a:1,n:"_xnum",t:4,rt:$n[0].Int32,sn:"_xnum",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_ynum",t:4,rt:$n[0].Int32,sn:"_ynum",box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("FarseerPhysics.Common.TextureTools.VerticesDetectionType",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Integrated",is:!0,t:4,rt:$n[15].VerticesDetectionType,sn:"Integrated",box:function($v){return Bridge.box($v,FarseerPhysics.Common.TextureTools.VerticesDetectionType,System.Enum.toStringFn(FarseerPhysics.Common.TextureTools.VerticesDetectionType))}},{a:2,n:"Separated",is:!0,t:4,rt:$n[15].VerticesDetectionType,sn:"Separated",box:function($v){return Bridge.box($v,FarseerPhysics.Common.TextureTools.VerticesDetectionType,System.Enum.toStringFn(FarseerPhysics.Common.TextureTools.VerticesDetectionType))}}]}},$n);$m("FarseerPhysics.Common.TextureTools.TextureConverter",function(){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].Array.type(System.UInt32),$n[0].Int32],pi:[{n:"data",pt:$n[0].Array.type(System.UInt32),ps:0},{n:"width",pt:$n[0].Int32,ps:1}],sn:"$ctor2"},{a:2,n:".ctor",t:1,p:[$n[0].Nullable$1(System.Byte),$n[0].Nullable$1(System.Single),$n[0].Nullable$1(System.Boolean),$n[0].Nullable$1(System.Boolean),$n[0].Nullable$1(System.Boolean),$n[0].Nullable$1(Microsoft.Xna.Framework.Matrix)],pi:[{n:"alphaTolerance",pt:$n[0].Nullable$1(System.Byte),ps:0},{n:"hullTolerance",pt:$n[0].Nullable$1(System.Single),ps:1},{n:"holeDetection",pt:$n[0].Nullable$1(System.Boolean),ps:2},{n:"multipartDetection",pt:$n[0].Nullable$1(System.Boolean),ps:3},{n:"pixelOffsetOptimization",pt:$n[0].Nullable$1(System.Boolean),ps:4},{n:"transform",pt:$n[0].Nullable$1(Microsoft.Xna.Framework.Matrix),ps:5}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[0].Array.type(System.UInt32),$n[0].Int32,$n[0].Nullable$1(System.Byte),$n[0].Nullable$1(System.Single),$n[0].Nullable$1(System.Boolean),$n[0].Nullable$1(System.Boolean),$n[0].Nullable$1(System.Boolean),$n[0].Nullable$1(Microsoft.Xna.Framework.Matrix)],pi:[{n:"data",pt:$n[0].Array.type(System.UInt32),ps:0},{n:"width",pt:$n[0].Int32,ps:1},{n:"alphaTolerance",pt:$n[0].Nullable$1(System.Byte),ps:2},{n:"hullTolerance",pt:$n[0].Nullable$1(System.Single),ps:3},{n:"holeDetection",pt:$n[0].Nullable$1(System.Boolean),ps:4},{n:"multipartDetection",pt:$n[0].Nullable$1(System.Boolean),ps:5},{n:"pixelOffsetOptimization",pt:$n[0].Nullable$1(System.Boolean),ps:6},{n:"transform",pt:$n[0].Nullable$1(Microsoft.Xna.Framework.Matrix),ps:7}],sn:"$ctor3"},{a:1,n:"ApplyTransform",t:8,pi:[{n:"detectedPolygons",ref:!0,pt:$n[5].List$1(FarseerPhysics.Common.Vertices),ps:0}],sn:"ApplyTransform",rt:$n[0].Void,p:[$n[5].List$1(FarseerPhysics.Common.Vertices)]},{a:1,n:"ApplyTriangulationCompatibleWinding",t:8,pi:[{n:"detectedPolygons",ref:!0,pt:$n[5].List$1(FarseerPhysics.Common.Vertices),ps:0}],sn:"ApplyTriangulationCompatibleWinding",rt:$n[0].Void,p:[$n[5].List$1(FarseerPhysics.Common.Vertices)]},{a:1,n:"CreateSimplePolygon",t:8,pi:[{n:"entrance",pt:$n[1].Vector2,ps:0},{n:"last",pt:$n[1].Vector2,ps:1}],sn:"CreateSimplePolygon",rt:$n[4].Vertices,p:[$n[1].Vector2,$n[1].Vector2]},{a:2,n:"DetectVertices",t:8,sn:"DetectVertices",rt:$n[5].List$1(FarseerPhysics.Common.Vertices)},{a:2,n:"DetectVertices",is:!0,t:8,pi:[{n:"data",pt:$n[0].Array.type(System.UInt32),ps:0},{n:"width",pt:$n[0].Int32,ps:1}],sn:"DetectVertices",rt:$n[4].Vertices,p:[$n[0].Array.type(System.UInt32),$n[0].Int32]},{a:2,n:"DetectVertices",is:!0,t:8,pi:[{n:"data",pt:$n[0].Array.type(System.UInt32),ps:0},{n:"width",pt:$n[0].Int32,ps:1},{n:"holeDetection",pt:$n[0].Boolean,ps:2}],sn:"DetectVertices$1",rt:$n[4].Vertices,p:[$n[0].Array.type(System.UInt32),$n[0].Int32,$n[0].Boolean]},{a:2,n:"DetectVertices",is:!0,t:8,pi:[{n:"data",pt:$n[0].Array.type(System.UInt32),ps:0},{n:"width",pt:$n[0].Int32,ps:1},{n:"hullTolerance",pt:$n[0].Single,ps:2},{n:"alphaTolerance",pt:$n[0].Byte,ps:3},{n:"multiPartDetection",pt:$n[0].Boolean,ps:4},{n:"holeDetection",pt:$n[0].Boolean,ps:5}],sn:"DetectVertices$2",rt:$n[5].List$1(FarseerPhysics.Common.Vertices),p:[$n[0].Array.type(System.UInt32),$n[0].Int32,$n[0].Single,$n[0].Byte,$n[0].Boolean,$n[0].Boolean]},{a:1,n:"DistanceToHullAcceptable",t:8,pi:[{n:"polygon",pt:$n[4].Vertices,ps:0},{n:"point",pt:$n[1].Vector2,ps:1},{n:"higherDetail",pt:$n[0].Boolean,ps:2}],sn:"DistanceToHullAcceptable",rt:$n[0].Boolean,p:[$n[4].Vertices,$n[1].Vector2,$n[0].Boolean],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"DistanceToHullAcceptableHoles",t:8,pi:[{n:"polygon",pt:$n[4].Vertices,ps:0},{n:"point",pt:$n[1].Vector2,ps:1},{n:"higherDetail",pt:$n[0].Boolean,ps:2}],sn:"DistanceToHullAcceptableHoles",rt:$n[0].Boolean,p:[$n[4].Vertices,$n[1].Vector2,$n[0].Boolean],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"GetBottomMostCoord",t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0}],sn:"GetBottomMostCoord",rt:$n[0].Single,p:[$n[4].Vertices],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"GetIndexOfFirstPixelToCheck",t:8,pi:[{n:"last",ref:!0,pt:$n[1].Vector2,ps:0},{n:"current",ref:!0,pt:$n[1].Vector2,ps:1}],sn:"GetIndexOfFirstPixelToCheck",rt:$n[0].Int32,p:[$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"GetNextHullPoint",t:8,pi:[{n:"last",ref:!0,pt:$n[1].Vector2,ps:0},{n:"current",ref:!0,pt:$n[1].Vector2,ps:1},{n:"next",out:!0,pt:$n[1].Vector2,ps:2}],sn:"GetNextHullPoint",rt:$n[0].Boolean,p:[$n[1].Vector2,$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"GetTopMostCoord",t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0}],sn:"GetTopMostCoord",rt:$n[0].Single,p:[$n[4].Vertices],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"GetTopMostVertex",t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0}],sn:"GetTopMostVertex",rt:$n[0].Nullable$1(Microsoft.Xna.Framework.Vector2),p:[$n[4].Vertices]},{a:2,n:"InBounds",t:8,pi:[{n:"coord",ref:!0,pt:$n[1].Vector2,ps:0}],sn:"InBounds",rt:$n[0].Boolean,p:[$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"InPolygon",t:8,pi:[{n:"polygon",pt:$n[4].Vertices,ps:0},{n:"point",pt:$n[1].Vector2,ps:1}],sn:"InPolygon",rt:$n[0].Boolean,p:[$n[4].Vertices,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"Initialize",t:8,pi:[{n:"data",pt:$n[0].Array.type(System.UInt32),ps:0},{n:"width",pt:$n[0].Nullable$1(System.Int32),ps:1},{n:"alphaTolerance",pt:$n[0].Nullable$1(System.Byte),ps:2},{n:"hullTolerance",pt:$n[0].Nullable$1(System.Single),ps:3},{n:"holeDetection",pt:$n[0].Nullable$1(System.Boolean),ps:4},{n:"multipartDetection",pt:$n[0].Nullable$1(System.Boolean),ps:5},{n:"pixelOffsetOptimization",pt:$n[0].Nullable$1(System.Boolean),ps:6},{n:"transform",pt:$n[0].Nullable$1(Microsoft.Xna.Framework.Matrix),ps:7}],sn:"Initialize",rt:$n[0].Void,p:[$n[0].Array.type(System.UInt32),$n[0].Nullable$1(System.Int32),$n[0].Nullable$1(System.Byte),$n[0].Nullable$1(System.Single),$n[0].Nullable$1(System.Boolean),$n[0].Nullable$1(System.Boolean),$n[0].Nullable$1(System.Boolean),$n[0].Nullable$1(Microsoft.Xna.Framework.Matrix)]},{a:1,n:"IsNearPixel",t:8,pi:[{n:"current",ref:!0,pt:$n[1].Vector2,ps:0},{n:"near",ref:!0,pt:$n[1].Vector2,ps:1}],sn:"IsNearPixel",rt:$n[0].Boolean,p:[$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsSolid",t:8,pi:[{n:"v",ref:!0,pt:$n[1].Vector2,ps:0}],sn:"IsSolid",rt:$n[0].Boolean,p:[$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsSolid",t:8,pi:[{n:"index",ref:!0,pt:$n[0].Int32,ps:0}],sn:"IsSolid$1",rt:$n[0].Boolean,p:[$n[0].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsSolid",t:8,pi:[{n:"x",ref:!0,pt:$n[0].Int32,ps:0},{n:"y",ref:!0,pt:$n[0].Int32,ps:1}],sn:"IsSolid$2",rt:$n[0].Boolean,p:[$n[0].Int32,$n[0].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"SearchCrossingEdges",t:8,pi:[{n:"polygon",pt:$n[4].Vertices,ps:0},{n:"y",pt:$n[0].Int32,ps:1}],sn:"SearchCrossingEdges",rt:$n[5].List$1(System.Single),p:[$n[4].Vertices,$n[0].Int32]},{a:1,n:"SearchCrossingEdgesHoles",t:8,pi:[{n:"polygon",pt:$n[4].Vertices,ps:0},{n:"y",pt:$n[0].Int32,ps:1}],sn:"SearchCrossingEdgesHoles",rt:$n[5].List$1(System.Single),p:[$n[4].Vertices,$n[0].Int32]},{a:1,n:"SearchForOutstandingVertex",t:8,pi:[{n:"hullArea",pt:$n[4].Vertices,ps:0},{n:"outstanding",out:!0,pt:$n[1].Vector2,ps:1}],sn:"SearchForOutstandingVertex",rt:$n[0].Boolean,p:[$n[4].Vertices,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"SearchHoleEntrance",t:8,pi:[{n:"polygon",pt:$n[4].Vertices,ps:0},{n:"lastHoleEntrance",pt:$n[0].Nullable$1(Microsoft.Xna.Framework.Vector2),ps:1}],sn:"SearchHoleEntrance",rt:$n[0].Nullable$1(Microsoft.Xna.Framework.Vector2),p:[$n[4].Vertices,$n[0].Nullable$1(Microsoft.Xna.Framework.Vector2)]},{a:1,n:"SearchHullEntrance",t:8,pi:[{n:"entrance",out:!0,pt:$n[1].Vector2,ps:0}],sn:"SearchHullEntrance",rt:$n[0].Boolean,p:[$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"SearchNearPixels",t:8,pi:[{n:"searchingForSolidPixel",pt:$n[0].Boolean,ps:0},{n:"current",ref:!0,pt:$n[1].Vector2,ps:1},{n:"foundPixel",out:!0,pt:$n[1].Vector2,ps:2}],sn:"SearchNearPixels",rt:$n[0].Boolean,p:[$n[0].Boolean,$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"SearchNextHullEntrance",t:8,pi:[{n:"detectedPolygons",pt:$n[5].List$1(FarseerPhysics.Common.Vertices),ps:0},{n:"start",pt:$n[1].Vector2,ps:1},{n:"entrance",out:!0,pt:$n[0].Nullable$1(Microsoft.Xna.Framework.Vector2),ps:2}],sn:"SearchNextHullEntrance",rt:$n[0].Boolean,p:[$n[5].List$1(FarseerPhysics.Common.Vertices),$n[1].Vector2,$n[0].Nullable$1(Microsoft.Xna.Framework.Vector2)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"SetTextureData",t:8,pi:[{n:"data",pt:$n[0].Array.type(System.UInt32),ps:0},{n:"width",pt:$n[0].Int32,ps:1}],sn:"SetTextureData",rt:$n[0].Void,p:[$n[0].Array.type(System.UInt32),$n[0].Int32]},{a:1,n:"SplitPolygonEdge",t:8,pi:[{n:"polygon",pt:$n[4].Vertices,ps:0},{n:"coordInsideThePolygon",pt:$n[1].Vector2,ps:1},{n:"vertex1Index",out:!0,pt:$n[0].Int32,ps:2},{n:"vertex2Index",out:!0,pt:$n[0].Int32,ps:3}],sn:"SplitPolygonEdge",rt:$n[0].Boolean,p:[$n[4].Vertices,$n[1].Vector2,$n[0].Int32,$n[0].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"AlphaTolerance",t:16,rt:$n[0].Byte,g:{a:2,n:"get_AlphaTolerance",t:8,rt:$n[0].Byte,fg:"AlphaTolerance",box:function($v){return Bridge.box($v,System.Byte)}},s:{a:2,n:"set_AlphaTolerance",t:8,p:[$n[0].Byte],rt:$n[0].Void,fs:"AlphaTolerance"},fn:"AlphaTolerance"},{a:2,n:"HoleDetection",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_HoleDetection",t:8,rt:$n[0].Boolean,fg:"HoleDetection",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_HoleDetection",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"HoleDetection"},fn:"HoleDetection"},{a:2,n:"HullTolerance",t:16,rt:$n[0].Single,g:{a:2,n:"get_HullTolerance",t:8,rt:$n[0].Single,fg:"HullTolerance",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_HullTolerance",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"HullTolerance"},fn:"HullTolerance"},{a:2,n:"MultipartDetection",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_MultipartDetection",t:8,rt:$n[0].Boolean,fg:"MultipartDetection",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_MultipartDetection",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"MultipartDetection"},fn:"MultipartDetection"},{a:2,n:"PixelOffsetOptimization",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_PixelOffsetOptimization",t:8,rt:$n[0].Boolean,fg:"PixelOffsetOptimization",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_PixelOffsetOptimization",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"PixelOffsetOptimization"},fn:"PixelOffsetOptimization"},{a:2,n:"PolygonDetectionType",t:16,rt:$n[15].VerticesDetectionType,g:{a:2,n:"get_PolygonDetectionType",t:8,rt:$n[15].VerticesDetectionType,fg:"PolygonDetectionType",box:function($v){return Bridge.box($v,FarseerPhysics.Common.TextureTools.VerticesDetectionType,System.Enum.toStringFn(FarseerPhysics.Common.TextureTools.VerticesDetectionType))}},s:{a:2,n:"set_PolygonDetectionType",t:8,p:[$n[15].VerticesDetectionType],rt:$n[0].Void,fs:"PolygonDetectionType"},fn:"PolygonDetectionType"},{a:2,n:"Transform",t:16,rt:$n[1].Matrix,g:{a:2,n:"get_Transform",t:8,rt:$n[1].Matrix,fg:"Transform"},s:{a:2,n:"set_Transform",t:8,p:[$n[1].Matrix],rt:$n[0].Void,fs:"Transform"},fn:"Transform"},{a:1,n:"ClosepixelsLength",is:!0,t:4,rt:$n[0].Int32,sn:"ClosepixelsLength",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_alphaTolerance",t:4,rt:$n[0].UInt32,sn:"_alphaTolerance",box:function($v){return Bridge.box($v,System.UInt32)}},{a:1,n:"_closePixels",is:!0,t:4,rt:$n[0].Array.type(System.Int32,2),sn:"_closePixels"},{a:1,n:"_data",t:4,rt:$n[0].Array.type(System.UInt32),sn:"_data"},{a:1,n:"_dataLength",t:4,rt:$n[0].Int32,sn:"_dataLength",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_height",t:4,rt:$n[0].Int32,sn:"_height",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_holeDetection",t:4,rt:$n[0].Boolean,sn:"_holeDetection",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_hullTolerance",t:4,rt:$n[0].Single,sn:"_hullTolerance",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_multipartDetection",t:4,rt:$n[0].Boolean,sn:"_multipartDetection",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_pixelOffsetOptimization",t:4,rt:$n[0].Boolean,sn:"_pixelOffsetOptimization",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_polygonDetectionType",t:4,rt:$n[15].VerticesDetectionType,sn:"_polygonDetectionType",box:function($v){return Bridge.box($v,FarseerPhysics.Common.TextureTools.VerticesDetectionType,System.Enum.toStringFn(FarseerPhysics.Common.TextureTools.VerticesDetectionType))}},{a:1,n:"_tempIsSolidX",t:4,rt:$n[0].Int32,sn:"_tempIsSolidX",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_tempIsSolidY",t:4,rt:$n[0].Int32,sn:"_tempIsSolidY",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_transform",t:4,rt:$n[1].Matrix,sn:"_transform"},{a:1,n:"_width",t:4,rt:$n[0].Int32,sn:"_width",box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("FarseerPhysics.Common.PolygonManipulation.CuttingTools",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"Cut",is:!0,t:8,pi:[{n:"world",pt:$n[3].World,ps:0},{n:"start",pt:$n[1].Vector2,ps:1},{n:"end",pt:$n[1].Vector2,ps:2}],sn:"Cut",rt:$n[0].Boolean,p:[$n[3].World,$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"SplitShape",is:!0,t:8,pi:[{n:"fixture",pt:$n[3].Fixture,ps:0},{n:"entryPoint",pt:$n[1].Vector2,ps:1},{n:"exitPoint",pt:$n[1].Vector2,ps:2},{n:"first",out:!0,pt:$n[4].Vertices,ps:3},{n:"second",out:!0,pt:$n[4].Vertices,ps:4}],sn:"SplitShape",rt:$n[0].Void,p:[$n[3].Fixture,$n[1].Vector2,$n[1].Vector2,$n[4].Vertices,$n[4].Vertices]}]}},$n);$m("FarseerPhysics.Common.PolygonManipulation.SimpleCombiner",function(){return{att:1048961,a:2,s:!0,m:[{a:1,n:"AddTriangle",is:!0,t:8,pi:[{n:"t",pt:$n[4].Vertices,ps:0},{n:"vertices",pt:$n[4].Vertices,ps:1}],sn:"AddTriangle",rt:$n[4].Vertices,p:[$n[4].Vertices,$n[4].Vertices]},{a:2,n:"PolygonizeTriangles",is:!0,t:8,pi:[{n:"triangles",pt:$n[5].List$1(FarseerPhysics.Common.Vertices),ps:0},{n:"maxPolys",dv:2147483647,o:!0,pt:$n[0].Int32,ps:1},{n:"tolerance",dv:.001,o:!0,pt:$n[0].Single,ps:2}],sn:"PolygonizeTriangles",rt:$n[5].List$1(FarseerPhysics.Common.Vertices),p:[$n[5].List$1(FarseerPhysics.Common.Vertices),$n[0].Int32,$n[0].Single]}]}},$n);$m("FarseerPhysics.Common.PolygonManipulation.SimplifyTools",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"CollinearSimplify",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0},{n:"collinearityTolerance",dv:0,o:!0,pt:$n[0].Single,ps:1}],sn:"CollinearSimplify",rt:$n[4].Vertices,p:[$n[4].Vertices,$n[0].Single]},{a:2,n:"DouglasPeuckerSimplify",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0},{n:"distanceTolerance",pt:$n[0].Single,ps:1}],sn:"DouglasPeuckerSimplify",rt:$n[4].Vertices,p:[$n[4].Vertices,$n[0].Single]},{a:2,n:"MergeIdenticalPoints",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0}],sn:"MergeIdenticalPoints",rt:$n[4].Vertices,p:[$n[4].Vertices]},{a:2,n:"MergeParallelEdges",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0},{n:"tolerance",pt:$n[0].Single,ps:1}],sn:"MergeParallelEdges",rt:$n[4].Vertices,p:[$n[4].Vertices,$n[0].Single]},{a:2,n:"ReduceByArea",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0},{n:"areaTolerance",pt:$n[0].Single,ps:1}],sn:"ReduceByArea",rt:$n[4].Vertices,p:[$n[4].Vertices,$n[0].Single]},{a:2,n:"ReduceByDistance",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0},{n:"distance",pt:$n[0].Single,ps:1}],sn:"ReduceByDistance",rt:$n[4].Vertices,p:[$n[4].Vertices,$n[0].Single]},{a:2,n:"ReduceByNth",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0},{n:"nth",pt:$n[0].Int32,ps:1}],sn:"ReduceByNth",rt:$n[4].Vertices,p:[$n[4].Vertices,$n[0].Int32]},{a:1,n:"SimplifySection",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0},{n:"i",pt:$n[0].Int32,ps:1},{n:"j",pt:$n[0].Int32,ps:2},{n:"usePoint",pt:$n[0].Array.type(System.Boolean),ps:3},{n:"distanceTolerance",pt:$n[0].Single,ps:4}],sn:"SimplifySection",rt:$n[0].Void,p:[$n[4].Vertices,$n[0].Int32,$n[0].Int32,$n[0].Array.type(System.Boolean),$n[0].Single]}]}},$n);$m("FarseerPhysics.Common.PolygonManipulation.PolyClipType",function(){return{att:256,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Difference",is:!0,t:4,rt:$n[17].PolyClipType,sn:"Difference",box:function($v){return Bridge.box($v,FarseerPhysics.Common.PolygonManipulation.PolyClipType,System.Enum.toStringFn(FarseerPhysics.Common.PolygonManipulation.PolyClipType))}},{a:2,n:"Intersect",is:!0,t:4,rt:$n[17].PolyClipType,sn:"Intersect",box:function($v){return Bridge.box($v,FarseerPhysics.Common.PolygonManipulation.PolyClipType,System.Enum.toStringFn(FarseerPhysics.Common.PolygonManipulation.PolyClipType))}},{a:2,n:"Union",is:!0,t:4,rt:$n[17].PolyClipType,sn:"Union",box:function($v){return Bridge.box($v,FarseerPhysics.Common.PolygonManipulation.PolyClipType,System.Enum.toStringFn(FarseerPhysics.Common.PolygonManipulation.PolyClipType))}}]}},$n);$m("FarseerPhysics.Common.PolygonManipulation.PolyClipError",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"BrokenResult",is:!0,t:4,rt:$n[17].PolyClipError,sn:"BrokenResult",box:function($v){return Bridge.box($v,FarseerPhysics.Common.PolygonManipulation.PolyClipError,System.Enum.toStringFn(FarseerPhysics.Common.PolygonManipulation.PolyClipError))}},{a:2,n:"DegeneratedOutput",is:!0,t:4,rt:$n[17].PolyClipError,sn:"DegeneratedOutput",box:function($v){return Bridge.box($v,FarseerPhysics.Common.PolygonManipulation.PolyClipError,System.Enum.toStringFn(FarseerPhysics.Common.PolygonManipulation.PolyClipError))}},{a:2,n:"NonSimpleInput",is:!0,t:4,rt:$n[17].PolyClipError,sn:"NonSimpleInput",box:function($v){return Bridge.box($v,FarseerPhysics.Common.PolygonManipulation.PolyClipError,System.Enum.toStringFn(FarseerPhysics.Common.PolygonManipulation.PolyClipError))}},{a:2,n:"None",is:!0,t:4,rt:$n[17].PolyClipError,sn:"None",box:function($v){return Bridge.box($v,FarseerPhysics.Common.PolygonManipulation.PolyClipError,System.Enum.toStringFn(FarseerPhysics.Common.PolygonManipulation.PolyClipError))}}]}},$n);$m("FarseerPhysics.Common.PolygonManipulation.YuPengClipper",function(){return{nested:[$n[17].YuPengClipper.Edge],att:1048961,a:2,s:!0,m:[{a:1,n:"BuildPolygonsFromChain",is:!0,t:8,pi:[{n:"simplicies",pt:$n[5].List$1(FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge),ps:0},{n:"result",out:!0,pt:$n[5].List$1(FarseerPhysics.Common.Vertices),ps:1}],sn:"BuildPolygonsFromChain",rt:$n[17].PolyClipError,p:[$n[5].List$1(FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge),$n[5].List$1(FarseerPhysics.Common.Vertices)],box:function($v){return Bridge.box($v,FarseerPhysics.Common.PolygonManipulation.PolyClipError,System.Enum.toStringFn(FarseerPhysics.Common.PolygonManipulation.PolyClipError))}},{a:1,n:"CalculateBeta",is:!0,t:8,pi:[{n:"point",pt:$n[1].Vector2,ps:0},{n:"e",pt:$n[17].YuPengClipper.Edge,ps:1},{n:"coefficient",pt:$n[0].Single,ps:2}],sn:"CalculateBeta",rt:$n[0].Single,p:[$n[1].Vector2,$n[17].YuPengClipper.Edge,$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"CalculateIntersections",is:!0,t:8,pi:[{n:"polygon1",pt:$n[4].Vertices,ps:0},{n:"polygon2",pt:$n[4].Vertices,ps:1},{n:"slicedPoly1",out:!0,pt:$n[4].Vertices,ps:2},{n:"slicedPoly2",out:!0,pt:$n[4].Vertices,ps:3}],sn:"CalculateIntersections",rt:$n[0].Void,p:[$n[4].Vertices,$n[4].Vertices,$n[4].Vertices,$n[4].Vertices]},{a:1,n:"CalculateResultChain",is:!0,t:8,pi:[{n:"poly1Coeff",pt:$n[5].List$1(System.Single),ps:0},{n:"poly1Simplicies",pt:$n[5].List$1(FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge),ps:1},{n:"poly2Coeff",pt:$n[5].List$1(System.Single),ps:2},{n:"poly2Simplicies",pt:$n[5].List$1(FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge),ps:3},{n:"clipType",pt:$n[17].PolyClipType,ps:4},{n:"resultSimplices",out:!0,pt:$n[5].List$1(FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge),ps:5}],sn:"CalculateResultChain",rt:$n[0].Void,p:[$n[5].List$1(System.Single),$n[5].List$1(FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge),$n[5].List$1(System.Single),$n[5].List$1(FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge),$n[17].PolyClipType,$n[5].List$1(FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge)]},{a:1,n:"CalculateSimplexCoefficient",is:!0,t:8,pi:[{n:"a",pt:$n[1].Vector2,ps:0},{n:"b",pt:$n[1].Vector2,ps:1},{n:"c",pt:$n[1].Vector2,ps:2}],sn:"CalculateSimplexCoefficient",rt:$n[0].Single,p:[$n[1].Vector2,$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"CalculateSimplicalChain",is:!0,t:8,pi:[{n:"poly",pt:$n[4].Vertices,ps:0},{n:"coeff",out:!0,pt:$n[5].List$1(System.Single),ps:1},{n:"simplicies",out:!0,pt:$n[5].List$1(FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge),ps:2}],sn:"CalculateSimplicalChain",rt:$n[0].Void,p:[$n[4].Vertices,$n[5].List$1(System.Single),$n[5].List$1(FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge)]},{a:2,n:"Difference",is:!0,t:8,pi:[{n:"polygon1",pt:$n[4].Vertices,ps:0},{n:"polygon2",pt:$n[4].Vertices,ps:1},{n:"error",out:!0,pt:$n[17].PolyClipError,ps:2}],sn:"Difference",rt:$n[5].List$1(FarseerPhysics.Common.Vertices),p:[$n[4].Vertices,$n[4].Vertices,$n[17].PolyClipError]},{a:1,n:"Execute",is:!0,t:8,pi:[{n:"subject",pt:$n[4].Vertices,ps:0},{n:"clip",pt:$n[4].Vertices,ps:1},{n:"clipType",pt:$n[17].PolyClipType,ps:2},{n:"error",out:!0,pt:$n[17].PolyClipError,ps:3}],sn:"Execute",rt:$n[5].List$1(FarseerPhysics.Common.Vertices),p:[$n[4].Vertices,$n[4].Vertices,$n[17].PolyClipType,$n[17].PolyClipError]},{a:1,n:"GetAlpha",is:!0,t:8,pi:[{n:"start",pt:$n[1].Vector2,ps:0},{n:"end",pt:$n[1].Vector2,ps:1},{n:"point",pt:$n[1].Vector2,ps:2}],sn:"GetAlpha",rt:$n[0].Single,p:[$n[1].Vector2,$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Intersect",is:!0,t:8,pi:[{n:"polygon1",pt:$n[4].Vertices,ps:0},{n:"polygon2",pt:$n[4].Vertices,ps:1},{n:"error",out:!0,pt:$n[17].PolyClipError,ps:2}],sn:"Intersect",rt:$n[5].List$1(FarseerPhysics.Common.Vertices),p:[$n[4].Vertices,$n[4].Vertices,$n[17].PolyClipError]},{a:1,n:"PointInSimplex",is:!0,t:8,pi:[{n:"point",pt:$n[1].Vector2,ps:0},{n:"edge",pt:$n[17].YuPengClipper.Edge,ps:1}],sn:"PointInSimplex",rt:$n[0].Boolean,p:[$n[1].Vector2,$n[17].YuPengClipper.Edge],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"PointOnLineSegment",is:!0,t:8,pi:[{n:"start",pt:$n[1].Vector2,ps:0},{n:"end",pt:$n[1].Vector2,ps:1},{n:"point",pt:$n[1].Vector2,ps:2}],sn:"PointOnLineSegment",rt:$n[0].Boolean,p:[$n[1].Vector2,$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Union",is:!0,t:8,pi:[{n:"polygon1",pt:$n[4].Vertices,ps:0},{n:"polygon2",pt:$n[4].Vertices,ps:1},{n:"error",out:!0,pt:$n[17].PolyClipError,ps:2}],sn:"Union",rt:$n[5].List$1(FarseerPhysics.Common.Vertices),p:[$n[4].Vertices,$n[4].Vertices,$n[17].PolyClipError]},{a:1,n:"VectorEqual",is:!0,t:8,pi:[{n:"vec1",pt:$n[1].Vector2,ps:0},{n:"vec2",pt:$n[1].Vector2,ps:1}],sn:"VectorEqual",rt:$n[0].Boolean,p:[$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"ClipperEpsilonSquared",is:!0,t:4,rt:$n[0].Single,sn:"ClipperEpsilonSquared",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Common.PolygonManipulation.YuPengClipper.Edge",function(){return{td:$n[17].YuPengClipper,att:1048835,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[1].Vector2,$n[1].Vector2],pi:[{n:"edgeStart",pt:$n[1].Vector2,ps:0},{n:"edgeEnd",pt:$n[1].Vector2,ps:1}],sn:"ctor"},{a:2,n:"Equals",t:8,pi:[{n:"e",pt:$n[17].YuPengClipper.Edge,ps:0}],sn:"Equals",rt:$n[0].Boolean,p:[$n[17].YuPengClipper.Edge],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[0].Object,ps:0}],sn:"equals",rt:$n[0].Boolean,p:[$n[0].Object],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"GetCenter",t:8,sn:"GetCenter",rt:$n[1].Vector2},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[0].Int32,box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"op_UnaryNegation",is:!0,t:8,pi:[{n:"e",pt:$n[17].YuPengClipper.Edge,ps:0}],sn:"op_UnaryNegation",rt:$n[17].YuPengClipper.Edge,p:[$n[17].YuPengClipper.Edge]},{a:2,n:"EdgeEnd",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_EdgeEnd",t:8,rt:$n[1].Vector2,fg:"EdgeEnd"},s:{a:1,n:"set_EdgeEnd",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"EdgeEnd"},fn:"EdgeEnd"},{a:2,n:"EdgeStart",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_EdgeStart",t:8,rt:$n[1].Vector2,fg:"EdgeStart"},s:{a:1,n:"set_EdgeStart",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"EdgeStart"},fn:"EdgeStart"}]}},$n);$m("FarseerPhysics.Common.PhysicsLogic.FilterData",function(){return{att:1048705,a:2,m:[{a:3,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"AddDisabledCategory",t:8,pi:[{n:"category",pt:$n[3].Category,ps:0}],sn:"AddDisabledCategory",rt:$n[0].Void,p:[$n[3].Category]},{a:2,n:"AddEnabledCategory",t:8,pi:[{n:"category",pt:$n[3].Category,ps:0}],sn:"AddEnabledCategory",rt:$n[0].Void,p:[$n[3].Category]},{v:!0,a:2,n:"IsActiveOn",t:8,pi:[{n:"body",pt:$n[3].Body,ps:0}],sn:"IsActiveOn",rt:$n[0].Boolean,p:[$n[3].Body],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsInDisabledCategory",t:8,pi:[{n:"category",pt:$n[3].Category,ps:0}],sn:"IsInDisabledCategory",rt:$n[0].Boolean,p:[$n[3].Category],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsInEnabledInCategory",t:8,pi:[{n:"category",pt:$n[3].Category,ps:0}],sn:"IsInEnabledInCategory",rt:$n[0].Boolean,p:[$n[3].Category],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"RemoveDisabledCategory",t:8,pi:[{n:"category",pt:$n[3].Category,ps:0}],sn:"RemoveDisabledCategory",rt:$n[0].Void,p:[$n[3].Category]},{a:2,n:"RemoveEnabledCategory",t:8,pi:[{n:"category",pt:$n[3].Category,ps:0}],sn:"RemoveEnabledCategory",rt:$n[0].Void,p:[$n[3].Category]},{a:2,n:"DisabledOnCategories",t:4,rt:$n[3].Category,sn:"DisabledOnCategories",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"DisabledOnGroup",t:4,rt:$n[0].Int32,sn:"DisabledOnGroup",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"EnabledOnCategories",t:4,rt:$n[3].Category,sn:"EnabledOnCategories",box:function($v){return Bridge.box($v,FarseerPhysics.Dynamics.Category,System.Enum.toStringFn(FarseerPhysics.Dynamics.Category))}},{a:2,n:"EnabledOnGroup",t:4,rt:$n[0].Int32,sn:"EnabledOnGroup",box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("FarseerPhysics.Common.PhysicsLogic.PhysicsLogicType",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Explosion",is:!0,t:4,rt:$n[10].PhysicsLogicType,sn:"Explosion",box:function($v){return Bridge.box($v,FarseerPhysics.Common.PhysicsLogic.PhysicsLogicType,System.Enum.toStringFn(FarseerPhysics.Common.PhysicsLogic.PhysicsLogicType))}}]}},$n);$m("FarseerPhysics.Common.PhysicsLogic.PhysicsLogicFilter",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"IgnorePhysicsLogic",t:8,pi:[{n:"type",pt:$n[10].PhysicsLogicType,ps:0}],sn:"IgnorePhysicsLogic",rt:$n[0].Void,p:[$n[10].PhysicsLogicType]},{a:2,n:"IsPhysicsLogicIgnored",t:8,pi:[{n:"type",pt:$n[10].PhysicsLogicType,ps:0}],sn:"IsPhysicsLogicIgnored",rt:$n[0].Boolean,p:[$n[10].PhysicsLogicType],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"RestorePhysicsLogic",t:8,pi:[{n:"type",pt:$n[10].PhysicsLogicType,ps:0}],sn:"RestorePhysicsLogic",rt:$n[0].Void,p:[$n[10].PhysicsLogicType]},{a:2,n:"ControllerIgnores",t:4,rt:$n[10].PhysicsLogicType,sn:"ControllerIgnores",box:function($v){return Bridge.box($v,FarseerPhysics.Common.PhysicsLogic.PhysicsLogicType,System.Enum.toStringFn(FarseerPhysics.Common.PhysicsLogic.PhysicsLogicType))}}]}},$n);$m("FarseerPhysics.Common.PhysicsLogic.PhysicsLogic",function(){return{att:1048705,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[3].World,$n[10].PhysicsLogicType],pi:[{n:"world",pt:$n[3].World,ps:0},{n:"type",pt:$n[10].PhysicsLogicType,ps:1}],sn:"ctor"},{ov:!0,a:2,n:"IsActiveOn",t:8,pi:[{n:"body",pt:$n[3].Body,ps:0}],sn:"IsActiveOn",rt:$n[0].Boolean,p:[$n[3].Body],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"World",t:4,rt:$n[3].World,sn:"World"},{a:1,n:"_type",t:4,rt:$n[10].PhysicsLogicType,sn:"_type",box:function($v){return Bridge.box($v,FarseerPhysics.Common.PhysicsLogic.PhysicsLogicType,System.Enum.toStringFn(FarseerPhysics.Common.PhysicsLogic.PhysicsLogicType))}}]}},$n);$m("FarseerPhysics.Common.PhysicsLogic.ShapeData",function(){return{att:1048840,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Body",t:4,rt:$n[3].Body,sn:"Body"},{a:2,n:"Max",t:4,rt:$n[0].Single,sn:"Max",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Min",t:4,rt:$n[0].Single,sn:"Min",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Common.PhysicsLogic.RayDataComparer",function(){return{att:1048576,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"}]}},$n);$m("FarseerPhysics.Common.PhysicsLogic.RealExplosion",function(){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[3].World],pi:[{n:"world",pt:$n[3].World,ps:0}],sn:"ctor"},{a:2,n:"Activate",t:8,pi:[{n:"pos",pt:$n[1].Vector2,ps:0},{n:"radius",pt:$n[0].Single,ps:1},{n:"maxForce",pt:$n[0].Single,ps:2}],sn:"Activate",rt:$n[5].Dictionary$2(FarseerPhysics.Dynamics.Fixture,Microsoft.Xna.Framework.Vector2),p:[$n[1].Vector2,$n[0].Single,$n[0].Single]},{a:2,n:"EdgeRatio",t:4,rt:$n[0].Single,sn:"EdgeRatio",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"IgnoreWhenInsideShape",t:4,rt:$n[0].Boolean,sn:"IgnoreWhenInsideShape",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"MaxAngle",t:4,rt:$n[0].Single,sn:"MaxAngle",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"MaxEdgeOffset",is:!0,t:4,rt:$n[0].Single,sn:"MaxEdgeOffset",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"MaxShapes",t:4,rt:$n[0].Int32,sn:"MaxShapes",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"MinRays",t:4,rt:$n[0].Int32,sn:"MinRays",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_data",t:4,rt:$n[5].List$1(FarseerPhysics.Common.PhysicsLogic.ShapeData),sn:"_data"},{a:1,n:"_rdc",t:4,rt:$n[10].RayDataComparer,sn:"_rdc"}]}},$n);$m("FarseerPhysics.Common.PhysicsLogic.SimpleExplosion",function(){return{att:1048833,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[3].World],pi:[{n:"world",pt:$n[3].World,ps:0}],sn:"ctor"},{a:2,n:"Activate",t:8,pi:[{n:"pos",pt:$n[1].Vector2,ps:0},{n:"radius",pt:$n[0].Single,ps:1},{n:"force",pt:$n[0].Single,ps:2},{n:"maxForce",dv:340282347e30,o:!0,pt:$n[0].Single,ps:3}],sn:"Activate",rt:$n[5].Dictionary$2(FarseerPhysics.Dynamics.Body,Microsoft.Xna.Framework.Vector2),p:[$n[1].Vector2,$n[0].Single,$n[0].Single,$n[0].Single]},{a:1,n:"ApplyImpulse",t:8,pi:[{n:"pos",pt:$n[1].Vector2,ps:0},{n:"radius",pt:$n[0].Single,ps:1},{n:"force",pt:$n[0].Single,ps:2},{n:"maxForce",pt:$n[0].Single,ps:3},{n:"overlappingBodies",pt:$n[5].HashSet$1(FarseerPhysics.Dynamics.Body),ps:4}],sn:"ApplyImpulse",rt:$n[5].Dictionary$2(FarseerPhysics.Dynamics.Body,Microsoft.Xna.Framework.Vector2),p:[$n[1].Vector2,$n[0].Single,$n[0].Single,$n[0].Single,$n[5].HashSet$1(FarseerPhysics.Dynamics.Body)]},{a:1,n:"GetPercent",t:8,pi:[{n:"distance",pt:$n[0].Single,ps:0},{n:"radius",pt:$n[0].Single,ps:1}],sn:"GetPercent",rt:$n[0].Single,p:[$n[0].Single,$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Power",t:16,rt:$n[0].Single,g:{a:2,n:"get_Power",t:8,rt:$n[0].Single,fg:"Power",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Power",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Power"},fn:"Power"}]}},$n);$m("FarseerPhysics.Common.Decomposition.BayazitDecomposer",function(){return{att:1048960,a:4,s:!0,m:[{a:1,n:"At",is:!0,t:8,pi:[{n:"i",pt:$n[0].Int32,ps:0},{n:"vertices",pt:$n[4].Vertices,ps:1}],sn:"At",rt:$n[1].Vector2,p:[$n[0].Int32,$n[4].Vertices]},{a:1,n:"CanSee",is:!0,t:8,pi:[{n:"i",pt:$n[0].Int32,ps:0},{n:"j",pt:$n[0].Int32,ps:1},{n:"vertices",pt:$n[4].Vertices,ps:2}],sn:"CanSee",rt:$n[0].Boolean,p:[$n[0].Int32,$n[0].Int32,$n[4].Vertices],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"ConvexPartition",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0}],sn:"ConvexPartition",rt:$n[5].List$1(FarseerPhysics.Common.Vertices),p:[$n[4].Vertices]},{a:1,n:"Copy",is:!0,t:8,pi:[{n:"i",pt:$n[0].Int32,ps:0},{n:"j",pt:$n[0].Int32,ps:1},{n:"vertices",pt:$n[4].Vertices,ps:2}],sn:"Copy",rt:$n[4].Vertices,p:[$n[0].Int32,$n[0].Int32,$n[4].Vertices]},{a:1,n:"Left",is:!0,t:8,pi:[{n:"a",pt:$n[1].Vector2,ps:0},{n:"b",pt:$n[1].Vector2,ps:1},{n:"c",pt:$n[1].Vector2,ps:2}],sn:"Left",rt:$n[0].Boolean,p:[$n[1].Vector2,$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"LeftOn",is:!0,t:8,pi:[{n:"a",pt:$n[1].Vector2,ps:0},{n:"b",pt:$n[1].Vector2,ps:1},{n:"c",pt:$n[1].Vector2,ps:2}],sn:"LeftOn",rt:$n[0].Boolean,p:[$n[1].Vector2,$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"Reflex",is:!0,t:8,pi:[{n:"i",pt:$n[0].Int32,ps:0},{n:"vertices",pt:$n[4].Vertices,ps:1}],sn:"Reflex",rt:$n[0].Boolean,p:[$n[0].Int32,$n[4].Vertices],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"Right",is:!0,t:8,pi:[{n:"i",pt:$n[0].Int32,ps:0},{n:"vertices",pt:$n[4].Vertices,ps:1}],sn:"Right$1",rt:$n[0].Boolean,p:[$n[0].Int32,$n[4].Vertices],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"Right",is:!0,t:8,pi:[{n:"a",pt:$n[1].Vector2,ps:0},{n:"b",pt:$n[1].Vector2,ps:1},{n:"c",pt:$n[1].Vector2,ps:2}],sn:"Right",rt:$n[0].Boolean,p:[$n[1].Vector2,$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"RightOn",is:!0,t:8,pi:[{n:"a",pt:$n[1].Vector2,ps:0},{n:"b",pt:$n[1].Vector2,ps:1},{n:"c",pt:$n[1].Vector2,ps:2}],sn:"RightOn",rt:$n[0].Boolean,p:[$n[1].Vector2,$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"SquareDist",is:!0,t:8,pi:[{n:"a",pt:$n[1].Vector2,ps:0},{n:"b",pt:$n[1].Vector2,ps:1}],sn:"SquareDist",rt:$n[0].Single,p:[$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"TriangulatePolygon",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0}],sn:"TriangulatePolygon",rt:$n[5].List$1(FarseerPhysics.Common.Vertices),p:[$n[4].Vertices]}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDTDecomposer",function(){return{att:1048960,a:4,s:!0,m:[{a:2,n:"ConvexPartition",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0}],sn:"ConvexPartition",rt:$n[5].List$1(FarseerPhysics.Common.Vertices),p:[$n[4].Vertices]}]}},$n);$m("FarseerPhysics.Common.Decomposition.EarclipDecomposer",function(){return{nested:[$n[16].EarclipDecomposer.Triangle],att:1048960,a:4,s:!0,m:[{a:2,n:"ConvexPartition",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0},{n:"tolerance",dv:.001,o:!0,pt:$n[0].Single,ps:1}],sn:"ConvexPartition",rt:$n[5].List$1(FarseerPhysics.Common.Vertices),p:[$n[4].Vertices,$n[0].Single]},{a:1,n:"IsEar",is:!0,t:8,pi:[{n:"i",pt:$n[0].Int32,ps:0},{n:"xv",pt:$n[0].Array.type(System.Single),ps:1},{n:"yv",pt:$n[0].Array.type(System.Single),ps:2},{n:"xvLength",pt:$n[0].Int32,ps:3}],sn:"IsEar",rt:$n[0].Boolean,p:[$n[0].Int32,$n[0].Array.type(System.Single),$n[0].Array.type(System.Single),$n[0].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"Remainder",is:!0,t:8,pi:[{n:"x",pt:$n[0].Int32,ps:0},{n:"modulus",pt:$n[0].Int32,ps:1}],sn:"Remainder",rt:$n[0].Int32,p:[$n[0].Int32,$n[0].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"ResolvePinchPoint",is:!0,t:8,pi:[{n:"pin",pt:$n[4].Vertices,ps:0},{n:"poutA",out:!0,pt:$n[4].Vertices,ps:1},{n:"poutB",out:!0,pt:$n[4].Vertices,ps:2},{n:"tolerance",pt:$n[0].Single,ps:3}],sn:"ResolvePinchPoint",rt:$n[0].Boolean,p:[$n[4].Vertices,$n[4].Vertices,$n[4].Vertices,$n[0].Single],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"TriangulatePolygon",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0},{n:"tolerance",pt:$n[0].Single,ps:1}],sn:"TriangulatePolygon",rt:$n[5].List$1(FarseerPhysics.Common.Vertices),p:[$n[4].Vertices,$n[0].Single]}]}},$n);$m("FarseerPhysics.Common.Decomposition.EarclipDecomposer.Triangle",function(){return{td:$n[16].EarclipDecomposer,att:1048579,a:1,m:[{a:2,n:".ctor",t:1,p:[$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Single],pi:[{n:"x1",pt:$n[0].Single,ps:0},{n:"y1",pt:$n[0].Single,ps:1},{n:"x2",pt:$n[0].Single,ps:2},{n:"y2",pt:$n[0].Single,ps:3},{n:"x3",pt:$n[0].Single,ps:4},{n:"y3",pt:$n[0].Single,ps:5}],sn:"ctor"},{a:2,n:"IsInside",t:8,pi:[{n:"x",pt:$n[0].Single,ps:0},{n:"y",pt:$n[0].Single,ps:1}],sn:"IsInside",rt:$n[0].Boolean,p:[$n[0].Single,$n[0].Single],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("FarseerPhysics.Common.Decomposition.FlipcodeDecomposer",function(){return{att:1048960,a:4,s:!0,m:[{a:2,n:"ConvexPartition",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0}],sn:"ConvexPartition",rt:$n[5].List$1(FarseerPhysics.Common.Vertices),p:[$n[4].Vertices]},{a:1,n:"InsideTriangle",is:!0,t:8,pi:[{n:"a",ref:!0,pt:$n[1].Vector2,ps:0},{n:"b",ref:!0,pt:$n[1].Vector2,ps:1},{n:"c",ref:!0,pt:$n[1].Vector2,ps:2},{n:"p",ref:!0,pt:$n[1].Vector2,ps:3}],sn:"InsideTriangle",rt:$n[0].Boolean,p:[$n[1].Vector2,$n[1].Vector2,$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"Snip",is:!0,t:8,pi:[{n:"contour",pt:$n[4].Vertices,ps:0},{n:"u",pt:$n[0].Int32,ps:1},{n:"v",pt:$n[0].Int32,ps:2},{n:"w",pt:$n[0].Int32,ps:3},{n:"n",pt:$n[0].Int32,ps:4},{n:"V",pt:$n[0].Array.type(System.Int32),ps:5}],sn:"Snip",rt:$n[0].Boolean,p:[$n[4].Vertices,$n[0].Int32,$n[0].Int32,$n[0].Int32,$n[0].Int32,$n[0].Array.type(System.Int32)],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_tmpA",is:!0,t:4,rt:$n[1].Vector2,sn:"_tmpA"},{a:1,n:"_tmpB",is:!0,t:4,rt:$n[1].Vector2,sn:"_tmpB"},{a:1,n:"_tmpC",is:!0,t:4,rt:$n[1].Vector2,sn:"_tmpC"}]}},$n);$m("FarseerPhysics.Common.Decomposition.SeidelDecomposer",function(){return{att:1048960,a:4,s:!0,m:[{a:2,n:"ConvexPartition",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0},{n:"sheer",dv:.001,o:!0,pt:$n[0].Single,ps:1}],sn:"ConvexPartition",rt:$n[5].List$1(FarseerPhysics.Common.Vertices),p:[$n[4].Vertices,$n[0].Single]},{a:2,n:"ConvexPartitionTrapezoid",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0},{n:"sheer",dv:.001,o:!0,pt:$n[0].Single,ps:1}],sn:"ConvexPartitionTrapezoid",rt:$n[5].List$1(FarseerPhysics.Common.Vertices),p:[$n[4].Vertices,$n[0].Single]}]}},$n);$m("FarseerPhysics.Common.Decomposition.TriangulationAlgorithm",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Bayazit",is:!0,t:4,rt:$n[16].TriangulationAlgorithm,sn:"Bayazit",box:function($v){return Bridge.box($v,FarseerPhysics.Common.Decomposition.TriangulationAlgorithm,System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.TriangulationAlgorithm))}},{a:2,n:"Delauny",is:!0,t:4,rt:$n[16].TriangulationAlgorithm,sn:"Delauny",box:function($v){return Bridge.box($v,FarseerPhysics.Common.Decomposition.TriangulationAlgorithm,System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.TriangulationAlgorithm))}},{a:2,n:"Earclip",is:!0,t:4,rt:$n[16].TriangulationAlgorithm,sn:"Earclip",box:function($v){return Bridge.box($v,FarseerPhysics.Common.Decomposition.TriangulationAlgorithm,System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.TriangulationAlgorithm))}},{a:2,n:"Flipcode",is:!0,t:4,rt:$n[16].TriangulationAlgorithm,sn:"Flipcode",box:function($v){return Bridge.box($v,FarseerPhysics.Common.Decomposition.TriangulationAlgorithm,System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.TriangulationAlgorithm))}},{a:2,n:"Seidel",is:!0,t:4,rt:$n[16].TriangulationAlgorithm,sn:"Seidel",box:function($v){return Bridge.box($v,FarseerPhysics.Common.Decomposition.TriangulationAlgorithm,System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.TriangulationAlgorithm))}},{a:2,n:"SeidelTrapezoids",is:!0,t:4,rt:$n[16].TriangulationAlgorithm,sn:"SeidelTrapezoids",box:function($v){return Bridge.box($v,FarseerPhysics.Common.Decomposition.TriangulationAlgorithm,System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.TriangulationAlgorithm))}}]}},$n);$m("FarseerPhysics.Common.Decomposition.Triangulate",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"ConvexPartition",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0},{n:"algorithm",pt:$n[16].TriangulationAlgorithm,ps:1},{n:"discardAndFixInvalid",dv:!0,o:!0,pt:$n[0].Boolean,ps:2},{n:"tolerance",dv:.001,o:!0,pt:$n[0].Single,ps:3}],sn:"ConvexPartition",rt:$n[5].List$1(FarseerPhysics.Common.Vertices),p:[$n[4].Vertices,$n[16].TriangulationAlgorithm,$n[0].Boolean,$n[0].Single]},{a:1,n:"ValidatePolygon",is:!0,t:8,pi:[{n:"polygon",pt:$n[4].Vertices,ps:0}],sn:"ValidatePolygon",rt:$n[0].Boolean,p:[$n[4].Vertices],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("FarseerPhysics.Common.Decomposition.Seidel.Edge",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[18].Point,$n[18].Point],pi:[{n:"p",pt:$n[18].Point,ps:0},{n:"q",pt:$n[18].Point,ps:1}],sn:"ctor"},{a:2,n:"AddMpoint",t:8,pi:[{n:"point",pt:$n[18].Point,ps:0}],sn:"AddMpoint",rt:$n[0].Void,p:[$n[18].Point]},{a:2,n:"IsAbove",t:8,pi:[{n:"point",pt:$n[18].Point,ps:0}],sn:"IsAbove",rt:$n[0].Boolean,p:[$n[18].Point],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsBelow",t:8,pi:[{n:"point",pt:$n[18].Point,ps:0}],sn:"IsBelow",rt:$n[0].Boolean,p:[$n[18].Point],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Above",t:4,rt:$n[18].Trapezoid,sn:"Above"},{a:2,n:"B",t:4,rt:$n[0].Single,sn:"B",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Below",t:4,rt:$n[18].Trapezoid,sn:"Below"},{a:2,n:"MPoints",t:4,rt:$n[5].HashSet$1(FarseerPhysics.Common.Decomposition.Seidel.Point),sn:"MPoints"},{a:2,n:"P",t:4,rt:$n[18].Point,sn:"P"},{a:2,n:"Q",t:4,rt:$n[18].Point,sn:"Q"},{a:2,n:"Slope",t:4,rt:$n[0].Single,sn:"Slope",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Common.Decomposition.Seidel.MonotoneMountain",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Add",t:8,pi:[{n:"point",pt:$n[18].Point,ps:0}],sn:"Add",rt:$n[0].Void,p:[$n[18].Point]},{a:1,n:"Angle",t:8,pi:[{n:"p",pt:$n[18].Point,ps:0}],sn:"Angle",rt:$n[0].Single,p:[$n[18].Point],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"AngleSign",t:8,sn:"AngleSign",rt:$n[0].Boolean,box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"GenMonoPoly",t:8,sn:"GenMonoPoly",rt:$n[0].Void},{a:1,n:"IsConvex",t:8,pi:[{n:"p",pt:$n[18].Point,ps:0}],sn:"IsConvex",rt:$n[0].Boolean,p:[$n[18].Point],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Process",t:8,sn:"Process",rt:$n[0].Void},{a:2,n:"Remove",t:8,pi:[{n:"point",pt:$n[18].Point,ps:0}],sn:"Remove",rt:$n[0].Void,p:[$n[18].Point]},{a:1,n:"Triangulate",t:8,sn:"Triangulate",rt:$n[0].Void},{a:1,n:"Valid",t:8,pi:[{n:"p",pt:$n[18].Point,ps:0}],sn:"Valid",rt:$n[0].Boolean,p:[$n[18].Point],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"PiSlop",is:!0,t:4,rt:$n[0].Single,sn:"PiSlop",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Triangles",t:4,rt:$n[5].List$1(System.Collections.Generic.List$1(FarseerPhysics.Common.Decomposition.Seidel.Point)),sn:"Triangles"},{a:1,n:"_convexPoints",t:4,rt:$n[5].HashSet$1(FarseerPhysics.Common.Decomposition.Seidel.Point),sn:"_convexPoints"},{a:1,n:"_head",t:4,rt:$n[18].Point,sn:"_head"},{a:1,n:"_monoPoly",t:4,rt:$n[5].List$1(FarseerPhysics.Common.Decomposition.Seidel.Point),sn:"_monoPoly"},{a:1,n:"_positive",t:4,rt:$n[0].Boolean,sn:"_positive",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_size",t:4,rt:$n[0].Int32,sn:"_size",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_tail",t:4,rt:$n[18].Point,sn:"_tail"}]}},$n);$m("FarseerPhysics.Common.Decomposition.Seidel.Node",function(){return{att:1048704,a:4,m:[{a:3,n:".ctor",t:1,p:[$n[18].Node,$n[18].Node],pi:[{n:"left",pt:$n[18].Node,ps:0},{n:"right",pt:$n[18].Node,ps:1}],sn:"ctor"},{ab:!0,a:2,n:"Locate",t:8,pi:[{n:"s",pt:$n[18].Edge,ps:0}],sn:"Locate",rt:$n[18].Sink,p:[$n[18].Edge]},{a:2,n:"Replace",t:8,pi:[{n:"node",pt:$n[18].Node,ps:0}],sn:"Replace",rt:$n[0].Void,p:[$n[18].Node]},{a:3,n:"LeftChild",t:4,rt:$n[18].Node,sn:"LeftChild"},{a:2,n:"ParentList",t:4,rt:$n[5].List$1(FarseerPhysics.Common.Decomposition.Seidel.Node),sn:"ParentList"},{a:3,n:"RightChild",t:4,rt:$n[18].Node,sn:"RightChild"}]}},$n);$m("FarseerPhysics.Common.Decomposition.Seidel.Point",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[0].Single,$n[0].Single],pi:[{n:"x",pt:$n[0].Single,ps:0},{n:"y",pt:$n[0].Single,ps:1}],sn:"ctor"},{a:2,n:"Cross",t:8,pi:[{n:"p",pt:$n[18].Point,ps:0}],sn:"Cross",rt:$n[0].Single,p:[$n[18].Point],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Dot",t:8,pi:[{n:"p",pt:$n[18].Point,ps:0}],sn:"Dot",rt:$n[0].Single,p:[$n[18].Point],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Neq",t:8,pi:[{n:"p",pt:$n[18].Point,ps:0}],sn:"Neq",rt:$n[0].Boolean,p:[$n[18].Point],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Orient2D",t:8,pi:[{n:"pb",pt:$n[18].Point,ps:0},{n:"pc",pt:$n[18].Point,ps:1}],sn:"Orient2D",rt:$n[0].Single,p:[$n[18].Point,$n[18].Point],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"op_Addition",is:!0,t:8,pi:[{n:"p1",pt:$n[18].Point,ps:0},{n:"p2",pt:$n[18].Point,ps:1}],sn:"op_Addition",rt:$n[18].Point,p:[$n[18].Point,$n[18].Point]},{a:2,n:"op_Addition",is:!0,t:8,pi:[{n:"p1",pt:$n[18].Point,ps:0},{n:"f",pt:$n[0].Single,ps:1}],sn:"op_Addition$1",rt:$n[18].Point,p:[$n[18].Point,$n[0].Single]},{a:2,n:"op_Subtraction",is:!0,t:8,pi:[{n:"p1",pt:$n[18].Point,ps:0},{n:"p2",pt:$n[18].Point,ps:1}],sn:"op_Subtraction",rt:$n[18].Point,p:[$n[18].Point,$n[18].Point]},{a:2,n:"op_Subtraction",is:!0,t:8,pi:[{n:"p1",pt:$n[18].Point,ps:0},{n:"f",pt:$n[0].Single,ps:1}],sn:"op_Subtraction$1",rt:$n[18].Point,p:[$n[18].Point,$n[0].Single]},{a:2,n:"Next",t:4,rt:$n[18].Point,sn:"Next"},{a:2,n:"Prev",t:4,rt:$n[18].Point,sn:"Prev"},{a:2,n:"X",t:4,rt:$n[0].Single,sn:"X",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Y",t:4,rt:$n[0].Single,sn:"Y",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Common.Decomposition.Seidel.QueryGraph",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[18].Node],pi:[{n:"head",pt:$n[18].Node,ps:0}],sn:"ctor"},{a:2,n:"Case1",t:8,pi:[{n:"sink",pt:$n[18].Sink,ps:0},{n:"edge",pt:$n[18].Edge,ps:1},{n:"tList",pt:System.Array.type(FarseerPhysics.Common.Decomposition.Seidel.Trapezoid),ps:2}],sn:"Case1",rt:$n[0].Void,p:[$n[18].Sink,$n[18].Edge,System.Array.type(FarseerPhysics.Common.Decomposition.Seidel.Trapezoid)]},{a:2,n:"Case2",t:8,pi:[{n:"sink",pt:$n[18].Sink,ps:0},{n:"edge",pt:$n[18].Edge,ps:1},{n:"tList",pt:System.Array.type(FarseerPhysics.Common.Decomposition.Seidel.Trapezoid),ps:2}],sn:"Case2",rt:$n[0].Void,p:[$n[18].Sink,$n[18].Edge,System.Array.type(FarseerPhysics.Common.Decomposition.Seidel.Trapezoid)]},{a:2,n:"Case3",t:8,pi:[{n:"sink",pt:$n[18].Sink,ps:0},{n:"edge",pt:$n[18].Edge,ps:1},{n:"tList",pt:System.Array.type(FarseerPhysics.Common.Decomposition.Seidel.Trapezoid),ps:2}],sn:"Case3",rt:$n[0].Void,p:[$n[18].Sink,$n[18].Edge,System.Array.type(FarseerPhysics.Common.Decomposition.Seidel.Trapezoid)]},{a:2,n:"Case4",t:8,pi:[{n:"sink",pt:$n[18].Sink,ps:0},{n:"edge",pt:$n[18].Edge,ps:1},{n:"tList",pt:System.Array.type(FarseerPhysics.Common.Decomposition.Seidel.Trapezoid),ps:2}],sn:"Case4",rt:$n[0].Void,p:[$n[18].Sink,$n[18].Edge,System.Array.type(FarseerPhysics.Common.Decomposition.Seidel.Trapezoid)]},{a:2,n:"FollowEdge",t:8,pi:[{n:"edge",pt:$n[18].Edge,ps:0}],sn:"FollowEdge",rt:$n[5].List$1(FarseerPhysics.Common.Decomposition.Seidel.Trapezoid),p:[$n[18].Edge]},{a:1,n:"Locate",t:8,pi:[{n:"edge",pt:$n[18].Edge,ps:0}],sn:"Locate",rt:$n[18].Trapezoid,p:[$n[18].Edge]},{a:1,n:"Replace",t:8,pi:[{n:"sink",pt:$n[18].Sink,ps:0},{n:"node",pt:$n[18].Node,ps:1}],sn:"Replace",rt:$n[0].Void,p:[$n[18].Sink,$n[18].Node]},{a:1,n:"_head",t:4,rt:$n[18].Node,sn:"_head"}]}},$n);$m("FarseerPhysics.Common.Decomposition.Seidel.Sink",function(){return{att:1048576,a:4,m:[{a:1,n:".ctor",t:1,p:[$n[18].Trapezoid],pi:[{n:"trapezoid",pt:$n[18].Trapezoid,ps:0}],sn:"ctor"},{a:2,n:"Isink",is:!0,t:8,pi:[{n:"trapezoid",pt:$n[18].Trapezoid,ps:0}],sn:"Isink",rt:$n[18].Sink,p:[$n[18].Trapezoid]},{ov:!0,a:2,n:"Locate",t:8,pi:[{n:"edge",pt:$n[18].Edge,ps:0}],sn:"Locate",rt:$n[18].Sink,p:[$n[18].Edge]},{a:2,n:"Trapezoid",t:4,rt:$n[18].Trapezoid,sn:"Trapezoid"}]}},$n);$m("FarseerPhysics.Common.Decomposition.Seidel.Trapezoid",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[18].Point,$n[18].Point,$n[18].Edge,$n[18].Edge],pi:[{n:"leftPoint",pt:$n[18].Point,ps:0},{n:"rightPoint",pt:$n[18].Point,ps:1},{n:"top",pt:$n[18].Edge,ps:2},{n:"bottom",pt:$n[18].Edge,ps:3}],sn:"ctor"},{a:2,n:"AddPoints",t:8,sn:"AddPoints",rt:$n[0].Void},{a:2,n:"Contains",t:8,pi:[{n:"point",pt:$n[18].Point,ps:0}],sn:"Contains",rt:$n[0].Boolean,p:[$n[18].Point],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"GetVertices",t:8,sn:"GetVertices",rt:$n[5].List$1(FarseerPhysics.Common.Decomposition.Seidel.Point)},{a:1,n:"LineIntersect",t:8,pi:[{n:"edge",pt:$n[18].Edge,ps:0},{n:"x",pt:$n[0].Single,ps:1}],sn:"LineIntersect",rt:$n[18].Point,p:[$n[18].Edge,$n[0].Single]},{a:2,n:"TrimNeighbors",t:8,sn:"TrimNeighbors",rt:$n[0].Void},{a:2,n:"UpdateLeft",t:8,pi:[{n:"ul",pt:$n[18].Trapezoid,ps:0},{n:"ll",pt:$n[18].Trapezoid,ps:1}],sn:"UpdateLeft",rt:$n[0].Void,p:[$n[18].Trapezoid,$n[18].Trapezoid]},{a:2,n:"UpdateLeftRight",t:8,pi:[{n:"ul",pt:$n[18].Trapezoid,ps:0},{n:"ll",pt:$n[18].Trapezoid,ps:1},{n:"ur",pt:$n[18].Trapezoid,ps:2},{n:"lr",pt:$n[18].Trapezoid,ps:3}],sn:"UpdateLeftRight",rt:$n[0].Void,p:[$n[18].Trapezoid,$n[18].Trapezoid,$n[18].Trapezoid,$n[18].Trapezoid]},{a:2,n:"UpdateRight",t:8,pi:[{n:"ur",pt:$n[18].Trapezoid,ps:0},{n:"lr",pt:$n[18].Trapezoid,ps:1}],sn:"UpdateRight",rt:$n[0].Void,p:[$n[18].Trapezoid,$n[18].Trapezoid]},{a:2,n:"Bottom",t:4,rt:$n[18].Edge,sn:"Bottom"},{a:2,n:"Inside",t:4,rt:$n[0].Boolean,sn:"Inside",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"LeftPoint",t:4,rt:$n[18].Point,sn:"LeftPoint"},{a:2,n:"LowerLeft",t:4,rt:$n[18].Trapezoid,sn:"LowerLeft"},{a:2,n:"LowerRight",t:4,rt:$n[18].Trapezoid,sn:"LowerRight"},{a:2,n:"RightPoint",t:4,rt:$n[18].Point,sn:"RightPoint"},{a:2,n:"Sink",t:4,rt:$n[18].Sink,sn:"Sink"},{a:2,n:"Top",t:4,rt:$n[18].Edge,sn:"Top"},{a:2,n:"UpperLeft",t:4,rt:$n[18].Trapezoid,sn:"UpperLeft"},{a:2,n:"UpperRight",t:4,rt:$n[18].Trapezoid,sn:"UpperRight"}]}},$n);$m("FarseerPhysics.Common.Decomposition.Seidel.TrapezoidalMap",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:"BoundingBox",t:8,pi:[{n:"edges",pt:$n[5].List$1(FarseerPhysics.Common.Decomposition.Seidel.Edge),ps:0}],sn:"BoundingBox",rt:$n[18].Trapezoid,p:[$n[5].List$1(FarseerPhysics.Common.Decomposition.Seidel.Edge)]},{a:2,n:"Case1",t:8,pi:[{n:"t",pt:$n[18].Trapezoid,ps:0},{n:"e",pt:$n[18].Edge,ps:1}],sn:"Case1",rt:System.Array.type(FarseerPhysics.Common.Decomposition.Seidel.Trapezoid),p:[$n[18].Trapezoid,$n[18].Edge]},{a:2,n:"Case2",t:8,pi:[{n:"t",pt:$n[18].Trapezoid,ps:0},{n:"e",pt:$n[18].Edge,ps:1}],sn:"Case2",rt:System.Array.type(FarseerPhysics.Common.Decomposition.Seidel.Trapezoid),p:[$n[18].Trapezoid,$n[18].Edge]},{a:2,n:"Case3",t:8,pi:[{n:"t",pt:$n[18].Trapezoid,ps:0},{n:"e",pt:$n[18].Edge,ps:1}],sn:"Case3",rt:System.Array.type(FarseerPhysics.Common.Decomposition.Seidel.Trapezoid),p:[$n[18].Trapezoid,$n[18].Edge]},{a:2,n:"Case4",t:8,pi:[{n:"t",pt:$n[18].Trapezoid,ps:0},{n:"e",pt:$n[18].Edge,ps:1}],sn:"Case4",rt:System.Array.type(FarseerPhysics.Common.Decomposition.Seidel.Trapezoid),p:[$n[18].Trapezoid,$n[18].Edge]},{a:2,n:"Clear",t:8,sn:"Clear",rt:$n[0].Void},{a:2,n:"Map",t:4,rt:$n[5].HashSet$1(FarseerPhysics.Common.Decomposition.Seidel.Trapezoid),sn:"Map"},{a:1,n:"_bCross",t:4,rt:$n[18].Edge,sn:"_bCross"},{a:1,n:"_cross",t:4,rt:$n[18].Edge,sn:"_cross"},{a:1,n:"_margin",t:4,rt:$n[0].Single,sn:"_margin",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Common.Decomposition.Seidel.Triangulator",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[5].List$1(FarseerPhysics.Common.Decomposition.Seidel.Point),$n[0].Single],pi:[{n:"polyLine",pt:$n[5].List$1(FarseerPhysics.Common.Decomposition.Seidel.Point),ps:0},{n:"sheer",pt:$n[0].Single,ps:1}],sn:"ctor"},{a:1,n:"CreateMountains",t:8,sn:"CreateMountains",rt:$n[0].Void},{a:1,n:"InitEdges",t:8,pi:[{n:"points",pt:$n[5].List$1(FarseerPhysics.Common.Decomposition.Seidel.Point),ps:0}],sn:"InitEdges",rt:$n[5].List$1(FarseerPhysics.Common.Decomposition.Seidel.Edge),p:[$n[5].List$1(FarseerPhysics.Common.Decomposition.Seidel.Point)]},{a:1,n:"MarkOutside",t:8,pi:[{n:"t",pt:$n[18].Trapezoid,ps:0}],sn:"MarkOutside",rt:$n[0].Void,p:[$n[18].Trapezoid]},{a:1,n:"OrderSegments",t:8,pi:[{n:"edgeInput",pt:$n[5].List$1(FarseerPhysics.Common.Decomposition.Seidel.Edge),ps:0}],sn:"OrderSegments",rt:$n[5].List$1(FarseerPhysics.Common.Decomposition.Seidel.Edge),p:[$n[5].List$1(FarseerPhysics.Common.Decomposition.Seidel.Edge)]},{a:1,n:"Process",t:8,sn:"Process",rt:$n[0].Void},{a:1,n:"ShearTransform",t:8,pi:[{n:"point",pt:$n[18].Point,ps:0}],sn:"ShearTransform",rt:$n[18].Point,p:[$n[18].Point]},{a:1,n:"Shuffle",is:!0,t:8,pi:[{n:"list",pt:$n[5].IList$1(System.Object),ps:0}],tpc:1,tprm:["T"],sn:"Shuffle",rt:$n[0].Void,p:[$n[5].IList$1(System.Object)]},{a:2,n:"Trapezoids",t:4,rt:$n[5].List$1(FarseerPhysics.Common.Decomposition.Seidel.Trapezoid),sn:"Trapezoids"},{a:2,n:"Triangles",t:4,rt:$n[5].List$1(System.Collections.Generic.List$1(FarseerPhysics.Common.Decomposition.Seidel.Point)),sn:"Triangles"},{a:1,n:"_boundingBox",t:4,rt:$n[18].Trapezoid,sn:"_boundingBox"},{a:1,n:"_edgeList",t:4,rt:$n[5].List$1(FarseerPhysics.Common.Decomposition.Seidel.Edge),sn:"_edgeList"},{a:1,n:"_queryGraph",t:4,rt:$n[18].QueryGraph,sn:"_queryGraph"},{a:1,n:"_sheer",t:4,rt:$n[0].Single,sn:"_sheer",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_trapezoidalMap",t:4,rt:$n[18].TrapezoidalMap,sn:"_trapezoidalMap"},{a:1,n:"_xMonoPoly",t:4,rt:$n[5].List$1(FarseerPhysics.Common.Decomposition.Seidel.MonotoneMountain),sn:"_xMonoPoly"}]}},$n);$m("FarseerPhysics.Common.Decomposition.Seidel.XNode",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[18].Point,$n[18].Node,$n[18].Node],pi:[{n:"point",pt:$n[18].Point,ps:0},{n:"lChild",pt:$n[18].Node,ps:1},{n:"rChild",pt:$n[18].Node,ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Locate",t:8,pi:[{n:"edge",pt:$n[18].Edge,ps:0}],sn:"Locate",rt:$n[18].Sink,p:[$n[18].Edge]},{a:1,n:"_point",t:4,rt:$n[18].Point,sn:"_point"}]}},$n);$m("FarseerPhysics.Common.Decomposition.Seidel.YNode",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[18].Edge,$n[18].Node,$n[18].Node],pi:[{n:"edge",pt:$n[18].Edge,ps:0},{n:"lChild",pt:$n[18].Node,ps:1},{n:"rChild",pt:$n[18].Node,ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Locate",t:8,pi:[{n:"edge",pt:$n[18].Edge,ps:0}],sn:"Locate",rt:$n[18].Sink,p:[$n[18].Edge]},{a:1,n:"_edge",t:4,rt:$n[18].Edge,sn:"_edge"}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.Triangulatable",function(){return{att:160,a:4,m:[{ab:!0,a:2,n:"AddTriangle",t:8,pi:[{n:"t",pt:$n[19].DelaunayTriangle,ps:0}],sn:"FarseerPhysics$Common$Decomposition$CDT$Triangulatable$AddTriangle",rt:$n[0].Void,p:[$n[19].DelaunayTriangle]},{ab:!0,a:2,n:"AddTriangles",t:8,pi:[{n:"list",pt:$n[5].IEnumerable$1(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle),ps:0}],sn:"FarseerPhysics$Common$Decomposition$CDT$Triangulatable$AddTriangles",rt:$n[0].Void,p:[$n[5].IEnumerable$1(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle)]},{ab:!0,a:2,n:"ClearTriangles",t:8,sn:"FarseerPhysics$Common$Decomposition$CDT$Triangulatable$ClearTriangles",rt:$n[0].Void},{ab:!0,a:2,n:"PrepareTriangulation",t:8,pi:[{n:"tcx",pt:$n[20].TriangulationContext,ps:0}],sn:"FarseerPhysics$Common$Decomposition$CDT$Triangulatable$PrepareTriangulation",rt:$n[0].Void,p:[$n[20].TriangulationContext]},{ab:!0,a:2,n:"Points",t:16,rt:$n[5].IList$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint),g:{ab:!0,a:2,n:"get_Points",t:8,rt:$n[5].IList$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint),fg:"FarseerPhysics$Common$Decomposition$CDT$Triangulatable$Points"},fn:"FarseerPhysics$Common$Decomposition$CDT$Triangulatable$Points"},{ab:!0,a:2,n:"Triangles",t:16,rt:$n[5].IList$1(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle),g:{ab:!0,a:2,n:"get_Triangles",t:8,rt:$n[5].IList$1(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle),fg:"FarseerPhysics$Common$Decomposition$CDT$Triangulatable$Triangles"},fn:"FarseerPhysics$Common$Decomposition$CDT$Triangulatable$Triangles"},{ab:!0,a:2,n:"TriangulationMode",t:16,rt:$n[20].TriangulationMode,g:{ab:!0,a:2,n:"get_TriangulationMode",t:8,rt:$n[20].TriangulationMode,fg:"FarseerPhysics$Common$Decomposition$CDT$Triangulatable$TriangulationMode",box:function($v){return Bridge.box($v,FarseerPhysics.Common.Decomposition.CDT.TriangulationMode,System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.CDT.TriangulationMode))}},fn:"FarseerPhysics$Common$Decomposition$CDT$Triangulatable$TriangulationMode"}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.Orientation",function(){return{att:256,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"CCW",is:!0,t:4,rt:$n[20].Orientation,sn:"CCW",box:function($v){return Bridge.box($v,FarseerPhysics.Common.Decomposition.CDT.Orientation,System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.CDT.Orientation))}},{a:2,n:"CW",is:!0,t:4,rt:$n[20].Orientation,sn:"CW",box:function($v){return Bridge.box($v,FarseerPhysics.Common.Decomposition.CDT.Orientation,System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.CDT.Orientation))}},{a:2,n:"Collinear",is:!0,t:4,rt:$n[20].Orientation,sn:"Collinear",box:function($v){return Bridge.box($v,FarseerPhysics.Common.Decomposition.CDT.Orientation,System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.CDT.Orientation))}}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.TriangulationConstraint",function(){return{att:1048576,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"P",t:4,rt:$n[20].TriangulationPoint,sn:"P"},{a:2,n:"Q",t:4,rt:$n[20].TriangulationPoint,sn:"Q"}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.TriangulationContext",function(){return{att:1048704,a:4,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{v:!0,a:2,n:"Clear",t:8,sn:"Clear",rt:$n[0].Void},{a:2,n:"Done",t:8,sn:"Done",rt:$n[0].Void},{ab:!0,a:2,n:"NewConstraint",t:8,pi:[{n:"a",pt:$n[20].TriangulationPoint,ps:0},{n:"b",pt:$n[20].TriangulationPoint,ps:1}],sn:"NewConstraint",rt:$n[20].TriangulationConstraint,p:[$n[20].TriangulationPoint,$n[20].TriangulationPoint]},{v:!0,a:2,n:"PrepareTriangulation",t:8,pi:[{n:"t",pt:$n[20].Triangulatable,ps:0}],sn:"PrepareTriangulation",rt:$n[0].Void,p:[$n[20].Triangulatable]},{a:2,n:"Update",t:8,pi:[{n:"message",pt:$n[0].String,ps:0}],sn:"Update",rt:$n[0].Void,p:[$n[0].String]},{v:!0,a:2,n:"IsDebugEnabled",t:16,rt:$n[0].Boolean,g:{v:!0,a:2,n:"get_IsDebugEnabled",t:8,rt:$n[0].Boolean,fg:"IsDebugEnabled",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{v:!0,a:3,n:"set_IsDebugEnabled",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"IsDebugEnabled"},fn:"IsDebugEnabled"},{a:2,n:"StepCount",t:16,rt:$n[0].Int32,g:{a:2,n:"get_StepCount",t:8,rt:$n[0].Int32,fg:"StepCount",box:function($v){return Bridge.box($v,System.Int32)}},s:{a:1,n:"set_StepCount",t:8,p:[$n[0].Int32],rt:$n[0].Void,fs:"StepCount"},fn:"StepCount"},{a:2,n:"Terminated",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_Terminated",t:8,rt:$n[0].Boolean,fg:"Terminated",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_Terminated",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"Terminated"},fn:"Terminated"},{a:2,n:"Triangulatable",t:16,rt:$n[20].Triangulatable,g:{a:2,n:"get_Triangulatable",t:8,rt:$n[20].Triangulatable,fg:"Triangulatable"},s:{a:1,n:"set_Triangulatable",t:8,p:[$n[20].Triangulatable],rt:$n[0].Void,fs:"Triangulatable"},fn:"Triangulatable"},{a:2,n:"TriangulationMode",t:16,rt:$n[20].TriangulationMode,g:{a:2,n:"get_TriangulationMode",t:8,rt:$n[20].TriangulationMode,fg:"TriangulationMode",box:function($v){return Bridge.box($v,FarseerPhysics.Common.Decomposition.CDT.TriangulationMode,System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.CDT.TriangulationMode))}},s:{a:3,n:"set_TriangulationMode",t:8,p:[$n[20].TriangulationMode],rt:$n[0].Void,fs:"TriangulationMode"},fn:"TriangulationMode"},{a:2,n:"WaitUntilNotified",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_WaitUntilNotified",t:8,rt:$n[0].Boolean,fg:"WaitUntilNotified",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:1,n:"set_WaitUntilNotified",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"WaitUntilNotified"},fn:"WaitUntilNotified"},{a:2,n:"Points",t:4,rt:$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint),sn:"Points",ro:!0},{a:2,n:"Triangles",t:4,rt:$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle),sn:"Triangles",ro:!0},{a:1,n:"_stepTime",t:4,rt:$n[0].Int32,sn:"_stepTime",box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.TriangulationMode",function(){return{att:256,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Constrained",is:!0,t:4,rt:$n[20].TriangulationMode,sn:"Constrained",box:function($v){return Bridge.box($v,FarseerPhysics.Common.Decomposition.CDT.TriangulationMode,System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.CDT.TriangulationMode))}},{a:2,n:"Polygon",is:!0,t:4,rt:$n[20].TriangulationMode,sn:"Polygon",box:function($v){return Bridge.box($v,FarseerPhysics.Common.Decomposition.CDT.TriangulationMode,System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.CDT.TriangulationMode))}},{a:2,n:"Unconstrained",is:!0,t:4,rt:$n[20].TriangulationMode,sn:"Unconstrained",box:function($v){return Bridge.box($v,FarseerPhysics.Common.Decomposition.CDT.TriangulationMode,System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.CDT.TriangulationMode))}}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[0].Double,$n[0].Double],pi:[{n:"x",pt:$n[0].Double,ps:0},{n:"y",pt:$n[0].Double,ps:1}],sn:"ctor"},{a:2,n:"AddEdge",t:8,pi:[{n:"e",pt:$n[21].DTSweepConstraint,ps:0}],sn:"AddEdge",rt:$n[0].Void,p:[$n[21].DTSweepConstraint]},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[0].String},{a:2,n:"Edges",t:16,rt:$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepConstraint),g:{a:2,n:"get_Edges",t:8,rt:$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepConstraint),fg:"Edges"},s:{a:1,n:"set_Edges",t:8,p:[$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepConstraint)],rt:$n[0].Void,fs:"Edges"},fn:"Edges"},{a:2,n:"HasEdges",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_HasEdges",t:8,rt:$n[0].Boolean,fg:"HasEdges",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"HasEdges"},{a:2,n:"Xf",t:16,rt:$n[0].Single,g:{a:2,n:"get_Xf",t:8,rt:$n[0].Single,fg:"Xf",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Xf",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Xf"},fn:"Xf"},{a:2,n:"Yf",t:16,rt:$n[0].Single,g:{a:2,n:"get_Yf",t:8,rt:$n[0].Single,fg:"Yf",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Yf",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Yf"},fn:"Yf"},{a:2,n:"X",t:4,rt:$n[0].Double,sn:"X",box:function($v){return Bridge.box($v,System.Double,System.Double.format,System.Double.getHashCode)}},{a:2,n:"Y",t:4,rt:$n[0].Double,sn:"Y",box:function($v){return Bridge.box($v,System.Double,System.Double.format,System.Double.getHashCode)}}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.TriangulationUtil",function(){return{att:1048576,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"InScanArea",is:!0,t:8,pi:[{n:"pa",pt:$n[20].TriangulationPoint,ps:0},{n:"pb",pt:$n[20].TriangulationPoint,ps:1},{n:"pc",pt:$n[20].TriangulationPoint,ps:2},{n:"pd",pt:$n[20].TriangulationPoint,ps:3}],sn:"InScanArea",rt:$n[0].Boolean,p:[$n[20].TriangulationPoint,$n[20].TriangulationPoint,$n[20].TriangulationPoint,$n[20].TriangulationPoint],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Orient2d",is:!0,t:8,pi:[{n:"pa",pt:$n[20].TriangulationPoint,ps:0},{n:"pb",pt:$n[20].TriangulationPoint,ps:1},{n:"pc",pt:$n[20].TriangulationPoint,ps:2}],sn:"Orient2d",rt:$n[20].Orientation,p:[$n[20].TriangulationPoint,$n[20].TriangulationPoint,$n[20].TriangulationPoint],box:function($v){return Bridge.box($v,FarseerPhysics.Common.Decomposition.CDT.Orientation,System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.CDT.Orientation))}},{a:2,n:"SmartIncircle",is:!0,t:8,pi:[{n:"pa",pt:$n[20].TriangulationPoint,ps:0},{n:"pb",pt:$n[20].TriangulationPoint,ps:1},{n:"pc",pt:$n[20].TriangulationPoint,ps:2},{n:"pd",pt:$n[20].TriangulationPoint,ps:3}],sn:"SmartIncircle",rt:$n[0].Boolean,p:[$n[20].TriangulationPoint,$n[20].TriangulationPoint,$n[20].TriangulationPoint,$n[20].TriangulationPoint],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"EPSILON",is:!0,t:4,rt:$n[0].Double,sn:"EPSILON",box:function($v){return Bridge.box($v,System.Double,System.Double.format,System.Double.getHashCode)}}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.Util.FixedArray3$1",function(T){return{att:1048840,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Clear",t:8,sn:"Clear",rt:$n[0].Void},{a:2,n:"Clear",t:8,pi:[{n:"value",pt:T,ps:0}],sn:"Clear$1",rt:$n[0].Void,p:[T]},{a:2,n:"Contains",t:8,pi:[{n:"value",pt:T,ps:0}],sn:"Contains",rt:$n[0].Boolean,p:[T],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"Enumerate",t:8,sn:"Enumerate",rt:$n[5].IEnumerable$1(T)},{a:2,n:"GetEnumerator",t:8,sn:"GetEnumerator",rt:$n[5].IEnumerator$1(T)},{a:2,n:"IndexOf",t:8,pi:[{n:"value",pt:T,ps:0}],sn:"IndexOf",rt:$n[0].Int32,p:[T],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Item",t:16,rt:T,p:[$n[0].Int32],i:!0,ipi:[{n:"index",pt:$n[0].Int32,ps:0}],g:{a:2,n:"get_Item",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0}],sn:"getItem",rt:T,p:[$n[0].Int32]},s:{a:2,n:"set_Item",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0},{n:"value",pt:T,ps:1}],sn:"setItem",rt:$n[0].Void,p:[$n[0].Int32,T]}},{a:2,n:"_0",t:4,rt:T,sn:"_0"},{a:2,n:"_1",t:4,rt:T,sn:"_1"},{a:2,n:"_2",t:4,rt:T,sn:"_2"}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.Util.FixedBitArray3",function(){return{att:1048840,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Clear",t:8,sn:"Clear",rt:$n[0].Void},{a:2,n:"Clear",t:8,pi:[{n:"value",pt:$n[0].Boolean,ps:0}],sn:"Clear$1",rt:$n[0].Void,p:[$n[0].Boolean]},{a:2,n:"Contains",t:8,pi:[{n:"value",pt:$n[0].Boolean,ps:0}],sn:"Contains",rt:$n[0].Boolean,p:[$n[0].Boolean],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"Enumerate",t:8,sn:"Enumerate",rt:$n[5].IEnumerable$1(System.Boolean)},{a:2,n:"GetEnumerator",t:8,sn:"GetEnumerator",rt:$n[5].IEnumerator$1(System.Boolean)},{a:2,n:"IndexOf",t:8,pi:[{n:"value",pt:$n[0].Boolean,ps:0}],sn:"IndexOf",rt:$n[0].Int32,p:[$n[0].Boolean],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Item",t:16,rt:$n[0].Boolean,p:[$n[0].Int32],i:!0,ipi:[{n:"index",pt:$n[0].Int32,ps:0}],g:{a:2,n:"get_Item",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0}],sn:"getItem",rt:$n[0].Boolean,p:[$n[0].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_Item",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0},{n:"value",pt:$n[0].Boolean,ps:1}],sn:"setItem",rt:$n[0].Void,p:[$n[0].Int32,$n[0].Boolean]}},{a:2,n:"_0",t:4,rt:$n[0].Boolean,sn:"_0",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"_1",t:4,rt:$n[0].Boolean,sn:"_1",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"_2",t:4,rt:$n[0].Boolean,sn:"_2",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.Util.PointGenerator",function(){return{att:1048576,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"UniformDistribution",is:!0,t:8,pi:[{n:"n",pt:$n[0].Int32,ps:0},{n:"scale",pt:$n[0].Double,ps:1}],sn:"UniformDistribution",rt:$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint),p:[$n[0].Int32,$n[0].Double]},{a:2,n:"UniformGrid",is:!0,t:8,pi:[{n:"n",pt:$n[0].Int32,ps:0},{n:"scale",pt:$n[0].Double,ps:1}],sn:"UniformGrid",rt:$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint),p:[$n[0].Int32,$n[0].Double]},{a:1,n:"RNG",is:!0,t:4,rt:$n[0].Random,sn:"RNG",ro:!0}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.Util.PolygonGenerator",function(){return{att:1048576,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"RandomCircleSweep",is:!0,t:8,pi:[{n:"scale",pt:$n[0].Double,ps:0},{n:"vertexCount",pt:$n[0].Int32,ps:1}],sn:"RandomCircleSweep",rt:$n[22].Polygon,p:[$n[0].Double,$n[0].Int32]},{a:2,n:"RandomCircleSweep2",is:!0,t:8,pi:[{n:"scale",pt:$n[0].Double,ps:0},{n:"vertexCount",pt:$n[0].Int32,ps:1}],sn:"RandomCircleSweep2",rt:$n[22].Polygon,p:[$n[0].Double,$n[0].Int32]},{a:1,n:"PI_2",is:!0,t:4,rt:$n[0].Double,sn:"PI_2",box:function($v){return Bridge.box($v,System.Double,System.Double.format,System.Double.getHashCode)}},{a:1,n:"RNG",is:!0,t:4,rt:$n[0].Random,sn:"RNG",ro:!0}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.Sets.ConstrainedPointSet",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint),$n[5].IEnumerable$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint)],pi:[{n:"points",pt:$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint),ps:0},{n:"constraints",pt:$n[5].IEnumerable$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint),ps:1}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint),$n[0].Array.type(System.Int32)],pi:[{n:"points",pt:$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint),ps:0},{n:"index",pt:$n[0].Array.type(System.Int32),ps:1}],sn:"$ctor1"},{ov:!0,a:2,n:"PrepareTriangulation",t:8,pi:[{n:"tcx",pt:$n[20].TriangulationContext,ps:0}],sn:"PrepareTriangulation",rt:$n[0].Void,p:[$n[20].TriangulationContext]},{a:2,n:"isValid",t:8,sn:"isValid",rt:$n[0].Boolean,box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"EdgeIndex",t:16,rt:$n[0].Array.type(System.Int32),g:{a:2,n:"get_EdgeIndex",t:8,rt:$n[0].Array.type(System.Int32),fg:"EdgeIndex"},s:{a:1,n:"set_EdgeIndex",t:8,p:[$n[0].Array.type(System.Int32)],rt:$n[0].Void,fs:"EdgeIndex"},fn:"EdgeIndex"},{ov:!0,a:2,n:"TriangulationMode",t:16,rt:$n[20].TriangulationMode,g:{ov:!0,a:2,n:"get_TriangulationMode",t:8,rt:$n[20].TriangulationMode,fg:"TriangulationMode",box:function($v){return Bridge.box($v,FarseerPhysics.Common.Decomposition.CDT.TriangulationMode,System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.CDT.TriangulationMode))}},fn:"TriangulationMode"},{a:1,n:"_constrainedPointList",t:4,rt:$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint),sn:"_constrainedPointList"}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.Sets.PointSet",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint)],pi:[{n:"points",pt:$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint),ps:0}],sn:"ctor"},{a:2,n:"AddTriangle",t:8,pi:[{n:"t",pt:$n[19].DelaunayTriangle,ps:0}],sn:"AddTriangle",rt:$n[0].Void,p:[$n[19].DelaunayTriangle]},{a:2,n:"AddTriangles",t:8,pi:[{n:"list",pt:$n[5].IEnumerable$1(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle),ps:0}],sn:"AddTriangles",rt:$n[0].Void,p:[$n[5].IEnumerable$1(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle)]},{a:2,n:"ClearTriangles",t:8,sn:"ClearTriangles",rt:$n[0].Void},{v:!0,a:2,n:"PrepareTriangulation",t:8,pi:[{n:"tcx",pt:$n[20].TriangulationContext,ps:0}],sn:"PrepareTriangulation",rt:$n[0].Void,p:[$n[20].TriangulationContext]},{a:2,n:"Points",t:16,rt:$n[5].IList$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint),g:{a:2,n:"get_Points",t:8,rt:$n[5].IList$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint),fg:"Points"},s:{a:1,n:"set_Points",t:8,p:[$n[5].IList$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint)],rt:$n[0].Void,fs:"Points"},fn:"Points"},{a:2,n:"Triangles",t:16,rt:$n[5].IList$1(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle),g:{a:2,n:"get_Triangles",t:8,rt:$n[5].IList$1(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle),fg:"Triangles"},s:{a:1,n:"set_Triangles",t:8,p:[$n[5].IList$1(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle)],rt:$n[0].Void,fs:"Triangles"},fn:"Triangles"},{v:!0,a:2,n:"TriangulationMode",t:16,rt:$n[20].TriangulationMode,g:{v:!0,a:2,n:"get_TriangulationMode",t:8,rt:$n[20].TriangulationMode,fg:"TriangulationMode",box:function($v){return Bridge.box($v,FarseerPhysics.Common.Decomposition.CDT.TriangulationMode,System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.CDT.TriangulationMode))}},fn:"TriangulationMode"}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.Polygon.Polygon",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[5].IEnumerable$1(FarseerPhysics.Common.Decomposition.CDT.Polygon.PolygonPoint)],pi:[{n:"points",pt:$n[5].IEnumerable$1(FarseerPhysics.Common.Decomposition.CDT.Polygon.PolygonPoint),ps:0}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[5].IList$1(FarseerPhysics.Common.Decomposition.CDT.Polygon.PolygonPoint)],pi:[{n:"points",pt:$n[5].IList$1(FarseerPhysics.Common.Decomposition.CDT.Polygon.PolygonPoint),ps:0}],sn:"$ctor2"},{a:2,n:"AddHole",t:8,pi:[{n:"poly",pt:$n[22].Polygon,ps:0}],sn:"AddHole",rt:$n[0].Void,p:[$n[22].Polygon]},{a:2,n:"AddPoint",t:8,pi:[{n:"p",pt:$n[22].PolygonPoint,ps:0}],sn:"AddPoint",rt:$n[0].Void,p:[$n[22].PolygonPoint]},{a:2,n:"AddPoints",t:8,pi:[{n:"list",pt:$n[5].IEnumerable$1(FarseerPhysics.Common.Decomposition.CDT.Polygon.PolygonPoint),ps:0}],sn:"AddPoints",rt:$n[0].Void,p:[$n[5].IEnumerable$1(FarseerPhysics.Common.Decomposition.CDT.Polygon.PolygonPoint)]},{a:2,n:"AddSteinerPoint",t:8,pi:[{n:"point",pt:$n[20].TriangulationPoint,ps:0}],sn:"AddSteinerPoint",rt:$n[0].Void,p:[$n[20].TriangulationPoint]},{a:2,n:"AddSteinerPoints",t:8,pi:[{n:"points",pt:$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint),ps:0}],sn:"AddSteinerPoints",rt:$n[0].Void,p:[$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint)]},{a:2,n:"AddTriangle",t:8,pi:[{n:"t",pt:$n[19].DelaunayTriangle,ps:0}],sn:"AddTriangle",rt:$n[0].Void,p:[$n[19].DelaunayTriangle]},{a:2,n:"AddTriangles",t:8,pi:[{n:"list",pt:$n[5].IEnumerable$1(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle),ps:0}],sn:"AddTriangles",rt:$n[0].Void,p:[$n[5].IEnumerable$1(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle)]},{a:2,n:"ClearSteinerPoints",t:8,sn:"ClearSteinerPoints",rt:$n[0].Void},{a:2,n:"ClearTriangles",t:8,sn:"ClearTriangles",rt:$n[0].Void},{a:2,n:"InsertPointAfter",t:8,pi:[{n:"point",pt:$n[22].PolygonPoint,ps:0},{n:"newPoint",pt:$n[22].PolygonPoint,ps:1}],sn:"InsertPointAfter",rt:$n[0].Void,p:[$n[22].PolygonPoint,$n[22].PolygonPoint]},{a:2,n:"PrepareTriangulation",t:8,pi:[{n:"tcx",pt:$n[20].TriangulationContext,ps:0}],sn:"PrepareTriangulation",rt:$n[0].Void,p:[$n[20].TriangulationContext]},{a:2,n:"RemovePoint",t:8,pi:[{n:"p",pt:$n[22].PolygonPoint,ps:0}],sn:"RemovePoint",rt:$n[0].Void,p:[$n[22].PolygonPoint]},{a:2,n:"Holes",t:16,rt:$n[5].IList$1(FarseerPhysics.Common.Decomposition.CDT.Polygon.Polygon),g:{a:2,n:"get_Holes",t:8,rt:$n[5].IList$1(FarseerPhysics.Common.Decomposition.CDT.Polygon.Polygon),fg:"Holes"},fn:"Holes"},{a:2,n:"Points",t:16,rt:$n[5].IList$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint),g:{a:2,n:"get_Points",t:8,rt:$n[5].IList$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint),fg:"Points"},fn:"Points"},{a:2,n:"Triangles",t:16,rt:$n[5].IList$1(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle),g:{a:2,n:"get_Triangles",t:8,rt:$n[5].IList$1(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle),fg:"Triangles"},fn:"Triangles"},{a:2,n:"TriangulationMode",t:16,rt:$n[20].TriangulationMode,g:{a:2,n:"get_TriangulationMode",t:8,rt:$n[20].TriangulationMode,fg:"TriangulationMode",box:function($v){return Bridge.box($v,FarseerPhysics.Common.Decomposition.CDT.TriangulationMode,System.Enum.toStringFn(FarseerPhysics.Common.Decomposition.CDT.TriangulationMode))}},fn:"TriangulationMode"},{a:3,n:"_holes",t:4,rt:$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.Polygon.Polygon),sn:"_holes"},{a:3,n:"_last",t:4,rt:$n[22].PolygonPoint,sn:"_last"},{a:3,n:"_points",t:4,rt:$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint),sn:"_points"},{a:3,n:"_steinerPoints",t:4,rt:$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint),sn:"_steinerPoints"},{a:3,n:"_triangles",t:4,rt:$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle),sn:"_triangles"}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.Polygon.PolygonPoint",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[0].Double,$n[0].Double],pi:[{n:"x",pt:$n[0].Double,ps:0},{n:"y",pt:$n[0].Double,ps:1}],sn:"ctor"},{a:2,n:"Next",t:16,rt:$n[22].PolygonPoint,g:{a:2,n:"get_Next",t:8,rt:$n[22].PolygonPoint,fg:"Next"},s:{a:2,n:"set_Next",t:8,p:[$n[22].PolygonPoint],rt:$n[0].Void,fs:"Next"},fn:"Next"},{a:2,n:"Previous",t:16,rt:$n[22].PolygonPoint,g:{a:2,n:"get_Previous",t:8,rt:$n[22].PolygonPoint,fg:"Previous"},s:{a:2,n:"set_Previous",t:8,p:[$n[22].PolygonPoint],rt:$n[0].Void,fs:"Previous"},fn:"Previous"}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.Polygon.PolygonSet",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[22].Polygon],pi:[{n:"poly",pt:$n[22].Polygon,ps:0}],sn:"$ctor1"},{a:2,n:"Add",t:8,pi:[{n:"p",pt:$n[22].Polygon,ps:0}],sn:"Add",rt:$n[0].Void,p:[$n[22].Polygon]},{a:2,n:"Polygons",t:16,rt:$n[5].IEnumerable$1(FarseerPhysics.Common.Decomposition.CDT.Polygon.Polygon),g:{a:2,n:"get_Polygons",t:8,rt:$n[5].IEnumerable$1(FarseerPhysics.Common.Decomposition.CDT.Polygon.Polygon),fg:"Polygons"},fn:"Polygons"},{a:3,n:"_polygons",t:4,rt:$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.Polygon.Polygon),sn:"_polygons"}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[20].TriangulationPoint,$n[20].TriangulationPoint,$n[20].TriangulationPoint],pi:[{n:"p1",pt:$n[20].TriangulationPoint,ps:0},{n:"p2",pt:$n[20].TriangulationPoint,ps:1},{n:"p3",pt:$n[20].TriangulationPoint,ps:2}],sn:"ctor"},{a:2,n:"Area",t:8,sn:"Area",rt:$n[0].Double,box:function($v){return Bridge.box($v,System.Double,System.Double.format,System.Double.getHashCode)}},{a:2,n:"Centroid",t:8,sn:"Centroid",rt:$n[20].TriangulationPoint},{a:2,n:"Clear",t:8,sn:"Clear",rt:$n[0].Void},{a:2,n:"ClearNeighbor",t:8,pi:[{n:"triangle",pt:$n[19].DelaunayTriangle,ps:0}],sn:"ClearNeighbor",rt:$n[0].Void,p:[$n[19].DelaunayTriangle]},{a:2,n:"ClearNeighbors",t:8,sn:"ClearNeighbors",rt:$n[0].Void},{a:2,n:"Contains",t:8,pi:[{n:"e",pt:$n[21].DTSweepConstraint,ps:0}],sn:"Contains",rt:$n[0].Boolean,p:[$n[21].DTSweepConstraint],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Contains",t:8,pi:[{n:"p",pt:$n[20].TriangulationPoint,ps:0}],sn:"Contains$1",rt:$n[0].Boolean,p:[$n[20].TriangulationPoint],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Contains",t:8,pi:[{n:"p",pt:$n[20].TriangulationPoint,ps:0},{n:"q",pt:$n[20].TriangulationPoint,ps:1}],sn:"Contains$2",rt:$n[0].Boolean,p:[$n[20].TriangulationPoint,$n[20].TriangulationPoint],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"EdgeIndex",t:8,pi:[{n:"p1",pt:$n[20].TriangulationPoint,ps:0},{n:"p2",pt:$n[20].TriangulationPoint,ps:1}],sn:"EdgeIndex",rt:$n[0].Int32,p:[$n[20].TriangulationPoint,$n[20].TriangulationPoint],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"GetConstrainedEdgeAcross",t:8,pi:[{n:"p",pt:$n[20].TriangulationPoint,ps:0}],sn:"GetConstrainedEdgeAcross",rt:$n[0].Boolean,p:[$n[20].TriangulationPoint],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"GetConstrainedEdgeCCW",t:8,pi:[{n:"p",pt:$n[20].TriangulationPoint,ps:0}],sn:"GetConstrainedEdgeCCW",rt:$n[0].Boolean,p:[$n[20].TriangulationPoint],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"GetConstrainedEdgeCW",t:8,pi:[{n:"p",pt:$n[20].TriangulationPoint,ps:0}],sn:"GetConstrainedEdgeCW",rt:$n[0].Boolean,p:[$n[20].TriangulationPoint],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"GetDelaunayEdgeAcross",t:8,pi:[{n:"p",pt:$n[20].TriangulationPoint,ps:0}],sn:"GetDelaunayEdgeAcross",rt:$n[0].Boolean,p:[$n[20].TriangulationPoint],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"GetDelaunayEdgeCCW",t:8,pi:[{n:"p",pt:$n[20].TriangulationPoint,ps:0}],sn:"GetDelaunayEdgeCCW",rt:$n[0].Boolean,p:[$n[20].TriangulationPoint],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"GetDelaunayEdgeCW",t:8,pi:[{n:"p",pt:$n[20].TriangulationPoint,ps:0}],sn:"GetDelaunayEdgeCW",rt:$n[0].Boolean,p:[$n[20].TriangulationPoint],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IndexCCW",t:8,pi:[{n:"p",pt:$n[20].TriangulationPoint,ps:0}],sn:"IndexCCW",rt:$n[0].Int32,p:[$n[20].TriangulationPoint],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"IndexCW",t:8,pi:[{n:"p",pt:$n[20].TriangulationPoint,ps:0}],sn:"IndexCW",rt:$n[0].Int32,p:[$n[20].TriangulationPoint],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"IndexOf",t:8,pi:[{n:"p",pt:$n[20].TriangulationPoint,ps:0}],sn:"IndexOf",rt:$n[0].Int32,p:[$n[20].TriangulationPoint],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Legalize",t:8,pi:[{n:"oPoint",pt:$n[20].TriangulationPoint,ps:0},{n:"nPoint",pt:$n[20].TriangulationPoint,ps:1}],sn:"Legalize",rt:$n[0].Void,p:[$n[20].TriangulationPoint,$n[20].TriangulationPoint]},{a:2,n:"MarkConstrainedEdge",t:8,pi:[{n:"edge",pt:$n[21].DTSweepConstraint,ps:0}],sn:"MarkConstrainedEdge",rt:$n[0].Void,p:[$n[21].DTSweepConstraint]},{a:2,n:"MarkConstrainedEdge",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0}],sn:"MarkConstrainedEdge$2",rt:$n[0].Void,p:[$n[0].Int32]},{a:2,n:"MarkConstrainedEdge",t:8,pi:[{n:"p",pt:$n[20].TriangulationPoint,ps:0},{n:"q",pt:$n[20].TriangulationPoint,ps:1}],sn:"MarkConstrainedEdge$1",rt:$n[0].Void,p:[$n[20].TriangulationPoint,$n[20].TriangulationPoint]},{a:2,n:"MarkEdge",t:8,pi:[{n:"triangle",pt:$n[19].DelaunayTriangle,ps:0}],sn:"MarkEdge",rt:$n[0].Void,p:[$n[19].DelaunayTriangle]},{a:2,n:"MarkEdge",t:8,pi:[{n:"tList",pt:$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle),ps:0}],sn:"MarkEdge$1",rt:$n[0].Void,p:[$n[5].List$1(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle)]},{a:2,n:"MarkNeighbor",t:8,pi:[{n:"t",pt:$n[19].DelaunayTriangle,ps:0}],sn:"MarkNeighbor",rt:$n[0].Void,p:[$n[19].DelaunayTriangle]},{a:1,n:"MarkNeighbor",t:8,pi:[{n:"p1",pt:$n[20].TriangulationPoint,ps:0},{n:"p2",pt:$n[20].TriangulationPoint,ps:1},{n:"t",pt:$n[19].DelaunayTriangle,ps:2}],sn:"MarkNeighbor$1",rt:$n[0].Void,p:[$n[20].TriangulationPoint,$n[20].TriangulationPoint,$n[19].DelaunayTriangle]},{a:2,n:"MarkNeighborEdges",t:8,sn:"MarkNeighborEdges",rt:$n[0].Void},{a:2,n:"NeighborAcross",t:8,pi:[{n:"point",pt:$n[20].TriangulationPoint,ps:0}],sn:"NeighborAcross",rt:$n[19].DelaunayTriangle,p:[$n[20].TriangulationPoint]},{a:2,n:"NeighborCCW",t:8,pi:[{n:"point",pt:$n[20].TriangulationPoint,ps:0}],sn:"NeighborCCW",rt:$n[19].DelaunayTriangle,p:[$n[20].TriangulationPoint]},{a:2,n:"NeighborCW",t:8,pi:[{n:"point",pt:$n[20].TriangulationPoint,ps:0}],sn:"NeighborCW",rt:$n[19].DelaunayTriangle,p:[$n[20].TriangulationPoint]},{a:2,n:"OppositePoint",t:8,pi:[{n:"t",pt:$n[19].DelaunayTriangle,ps:0},{n:"p",pt:$n[20].TriangulationPoint,ps:1}],sn:"OppositePoint",rt:$n[20].TriangulationPoint,p:[$n[19].DelaunayTriangle,$n[20].TriangulationPoint]},{a:2,n:"PointCCW",t:8,pi:[{n:"point",pt:$n[20].TriangulationPoint,ps:0}],sn:"PointCCW",rt:$n[20].TriangulationPoint,p:[$n[20].TriangulationPoint]},{a:2,n:"PointCW",t:8,pi:[{n:"point",pt:$n[20].TriangulationPoint,ps:0}],sn:"PointCW",rt:$n[20].TriangulationPoint,p:[$n[20].TriangulationPoint]},{a:1,n:"RotateCW",t:8,sn:"RotateCW",rt:$n[0].Void},{a:2,n:"SetConstrainedEdgeAcross",t:8,pi:[{n:"p",pt:$n[20].TriangulationPoint,ps:0},{n:"ce",pt:$n[0].Boolean,ps:1}],sn:"SetConstrainedEdgeAcross",rt:$n[0].Void,p:[$n[20].TriangulationPoint,$n[0].Boolean]},{a:2,n:"SetConstrainedEdgeCCW",t:8,pi:[{n:"p",pt:$n[20].TriangulationPoint,ps:0},{n:"ce",pt:$n[0].Boolean,ps:1}],sn:"SetConstrainedEdgeCCW",rt:$n[0].Void,p:[$n[20].TriangulationPoint,$n[0].Boolean]},{a:2,n:"SetConstrainedEdgeCW",t:8,pi:[{n:"p",pt:$n[20].TriangulationPoint,ps:0},{n:"ce",pt:$n[0].Boolean,ps:1}],sn:"SetConstrainedEdgeCW",rt:$n[0].Void,p:[$n[20].TriangulationPoint,$n[0].Boolean]},{a:2,n:"SetDelaunayEdgeAcross",t:8,pi:[{n:"p",pt:$n[20].TriangulationPoint,ps:0},{n:"ce",pt:$n[0].Boolean,ps:1}],sn:"SetDelaunayEdgeAcross",rt:$n[0].Void,p:[$n[20].TriangulationPoint,$n[0].Boolean]},{a:2,n:"SetDelaunayEdgeCCW",t:8,pi:[{n:"p",pt:$n[20].TriangulationPoint,ps:0},{n:"ce",pt:$n[0].Boolean,ps:1}],sn:"SetDelaunayEdgeCCW",rt:$n[0].Void,p:[$n[20].TriangulationPoint,$n[0].Boolean]},{a:2,n:"SetDelaunayEdgeCW",t:8,pi:[{n:"p",pt:$n[20].TriangulationPoint,ps:0},{n:"ce",pt:$n[0].Boolean,ps:1}],sn:"SetDelaunayEdgeCW",rt:$n[0].Void,p:[$n[20].TriangulationPoint,$n[0].Boolean]},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[0].String},{a:2,n:"IsInterior",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_IsInterior",t:8,rt:$n[0].Boolean,fg:"IsInterior",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_IsInterior",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"IsInterior"},fn:"IsInterior"},{a:2,n:"EdgeIsConstrained",t:4,rt:$n[23].FixedBitArray3,sn:"EdgeIsConstrained"},{a:2,n:"EdgeIsDelaunay",t:4,rt:$n[23].FixedBitArray3,sn:"EdgeIsDelaunay"},{a:2,n:"Neighbors",t:4,rt:$n[23].FixedArray3$1(FarseerPhysics.Common.Decomposition.CDT.Delaunay.DelaunayTriangle),sn:"Neighbors"},{a:2,n:"Points",t:4,rt:$n[23].FixedArray3$1(FarseerPhysics.Common.Decomposition.CDT.TriangulationPoint),sn:"Points"}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.AdvancingFront",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[21].AdvancingFrontNode,$n[21].AdvancingFrontNode],pi:[{n:"head",pt:$n[21].AdvancingFrontNode,ps:0},{n:"tail",pt:$n[21].AdvancingFrontNode,ps:1}],sn:"ctor"},{a:2,n:"AddNode",t:8,pi:[{n:"node",pt:$n[21].AdvancingFrontNode,ps:0}],sn:"AddNode",rt:$n[0].Void,p:[$n[21].AdvancingFrontNode]},{a:1,n:"FindSearchNode",t:8,pi:[{n:"x",pt:$n[0].Double,ps:0}],sn:"FindSearchNode",rt:$n[21].AdvancingFrontNode,p:[$n[0].Double]},{a:2,n:"LocateNode",t:8,pi:[{n:"point",pt:$n[20].TriangulationPoint,ps:0}],sn:"LocateNode",rt:$n[21].AdvancingFrontNode,p:[$n[20].TriangulationPoint]},{a:1,n:"LocateNode",t:8,pi:[{n:"x",pt:$n[0].Double,ps:0}],sn:"LocateNode$1",rt:$n[21].AdvancingFrontNode,p:[$n[0].Double]},{a:2,n:"LocatePoint",t:8,pi:[{n:"point",pt:$n[20].TriangulationPoint,ps:0}],sn:"LocatePoint",rt:$n[21].AdvancingFrontNode,p:[$n[20].TriangulationPoint]},{a:2,n:"RemoveNode",t:8,pi:[{n:"node",pt:$n[21].AdvancingFrontNode,ps:0}],sn:"RemoveNode",rt:$n[0].Void,p:[$n[21].AdvancingFrontNode]},{ov:!0,a:2,n:"ToString",t:8,sn:"toString",rt:$n[0].String},{a:2,n:"Head",t:4,rt:$n[21].AdvancingFrontNode,sn:"Head"},{a:3,n:"Search",t:4,rt:$n[21].AdvancingFrontNode,sn:"Search"},{a:2,n:"Tail",t:4,rt:$n[21].AdvancingFrontNode,sn:"Tail"}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.AdvancingFrontNode",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[20].TriangulationPoint],pi:[{n:"point",pt:$n[20].TriangulationPoint,ps:0}],sn:"ctor"},{a:2,n:"HasNext",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_HasNext",t:8,rt:$n[0].Boolean,fg:"HasNext",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"HasNext"},{a:2,n:"HasPrev",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_HasPrev",t:8,rt:$n[0].Boolean,fg:"HasPrev",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},fn:"HasPrev"},{a:2,n:"Next",t:4,rt:$n[21].AdvancingFrontNode,sn:"Next"},{a:2,n:"Point",t:4,rt:$n[20].TriangulationPoint,sn:"Point"},{a:2,n:"Prev",t:4,rt:$n[21].AdvancingFrontNode,sn:"Prev"},{a:2,n:"Triangle",t:4,rt:$n[19].DelaunayTriangle,sn:"Triangle"},{a:2,n:"Value",t:4,rt:$n[0].Double,sn:"Value",box:function($v){return Bridge.box($v,System.Double,System.Double.format,System.Double.getHashCode)}}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweep",function(){return{att:1048960,a:4,s:!0,m:[{a:1,n:"Angle",is:!0,t:8,pi:[{n:"origin",pt:$n[20].TriangulationPoint,ps:0},{n:"pa",pt:$n[20].TriangulationPoint,ps:1},{n:"pb",pt:$n[20].TriangulationPoint,ps:2}],sn:"Angle",rt:$n[0].Double,p:[$n[20].TriangulationPoint,$n[20].TriangulationPoint,$n[20].TriangulationPoint],box:function($v){return Bridge.box($v,System.Double,System.Double.format,System.Double.getHashCode)}},{a:1,n:"AngleExceeds90Degrees",is:!0,t:8,pi:[{n:"origin",pt:$n[20].TriangulationPoint,ps:0},{n:"pa",pt:$n[20].TriangulationPoint,ps:1},{n:"pb",pt:$n[20].TriangulationPoint,ps:2}],sn:"AngleExceeds90Degrees",rt:$n[0].Boolean,p:[$n[20].TriangulationPoint,$n[20].TriangulationPoint,$n[20].TriangulationPoint],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"AngleExceedsPlus90DegreesOrIsNegative",is:!0,t:8,pi:[{n:"origin",pt:$n[20].TriangulationPoint,ps:0},{n:"pa",pt:$n[20].TriangulationPoint,ps:1},{n:"pb",pt:$n[20].TriangulationPoint,ps:2}],sn:"AngleExceedsPlus90DegreesOrIsNegative",rt:$n[0].Boolean,p:[$n[20].TriangulationPoint,$n[20].TriangulationPoint,$n[20].TriangulationPoint],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"BasinAngle",is:!0,t:8,pi:[{n:"node",pt:$n[21].AdvancingFrontNode,ps:0}],sn:"BasinAngle",rt:$n[0].Double,p:[$n[21].AdvancingFrontNode],box:function($v){return Bridge.box($v,System.Double,System.Double.format,System.Double.getHashCode)}},{a:1,n:"EdgeEvent",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"edge",pt:$n[21].DTSweepConstraint,ps:1},{n:"node",pt:$n[21].AdvancingFrontNode,ps:2}],sn:"EdgeEvent",rt:$n[0].Void,p:[$n[21].DTSweepContext,$n[21].DTSweepConstraint,$n[21].AdvancingFrontNode]},{a:1,n:"EdgeEvent",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"ep",pt:$n[20].TriangulationPoint,ps:1},{n:"eq",pt:$n[20].TriangulationPoint,ps:2},{n:"triangle",pt:$n[19].DelaunayTriangle,ps:3},{n:"point",pt:$n[20].TriangulationPoint,ps:4}],sn:"EdgeEvent$1",rt:$n[0].Void,p:[$n[21].DTSweepContext,$n[20].TriangulationPoint,$n[20].TriangulationPoint,$n[19].DelaunayTriangle,$n[20].TriangulationPoint]},{a:1,n:"Fill",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"node",pt:$n[21].AdvancingFrontNode,ps:1}],sn:"Fill",rt:$n[0].Void,p:[$n[21].DTSweepContext,$n[21].AdvancingFrontNode]},{a:1,n:"FillAdvancingFront",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"n",pt:$n[21].AdvancingFrontNode,ps:1}],sn:"FillAdvancingFront",rt:$n[0].Void,p:[$n[21].DTSweepContext,$n[21].AdvancingFrontNode]},{a:1,n:"FillBasin",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"node",pt:$n[21].AdvancingFrontNode,ps:1}],sn:"FillBasin",rt:$n[0].Void,p:[$n[21].DTSweepContext,$n[21].AdvancingFrontNode]},{a:1,n:"FillBasinReq",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"node",pt:$n[21].AdvancingFrontNode,ps:1}],sn:"FillBasinReq",rt:$n[0].Void,p:[$n[21].DTSweepContext,$n[21].AdvancingFrontNode]},{a:1,n:"FillEdgeEvent",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"edge",pt:$n[21].DTSweepConstraint,ps:1},{n:"node",pt:$n[21].AdvancingFrontNode,ps:2}],sn:"FillEdgeEvent",rt:$n[0].Void,p:[$n[21].DTSweepContext,$n[21].DTSweepConstraint,$n[21].AdvancingFrontNode]},{a:1,n:"FillLeftAboveEdgeEvent",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"edge",pt:$n[21].DTSweepConstraint,ps:1},{n:"node",pt:$n[21].AdvancingFrontNode,ps:2}],sn:"FillLeftAboveEdgeEvent",rt:$n[0].Void,p:[$n[21].DTSweepContext,$n[21].DTSweepConstraint,$n[21].AdvancingFrontNode]},{a:1,n:"FillLeftBelowEdgeEvent",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"edge",pt:$n[21].DTSweepConstraint,ps:1},{n:"node",pt:$n[21].AdvancingFrontNode,ps:2}],sn:"FillLeftBelowEdgeEvent",rt:$n[0].Void,p:[$n[21].DTSweepContext,$n[21].DTSweepConstraint,$n[21].AdvancingFrontNode]},{a:1,n:"FillLeftConcaveEdgeEvent",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"edge",pt:$n[21].DTSweepConstraint,ps:1},{n:"node",pt:$n[21].AdvancingFrontNode,ps:2}],sn:"FillLeftConcaveEdgeEvent",rt:$n[0].Void,p:[$n[21].DTSweepContext,$n[21].DTSweepConstraint,$n[21].AdvancingFrontNode]},{a:1,n:"FillLeftConvexEdgeEvent",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"edge",pt:$n[21].DTSweepConstraint,ps:1},{n:"node",pt:$n[21].AdvancingFrontNode,ps:2}],sn:"FillLeftConvexEdgeEvent",rt:$n[0].Void,p:[$n[21].DTSweepContext,$n[21].DTSweepConstraint,$n[21].AdvancingFrontNode]},{a:1,n:"FillRightAboveEdgeEvent",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"edge",pt:$n[21].DTSweepConstraint,ps:1},{n:"node",pt:$n[21].AdvancingFrontNode,ps:2}],sn:"FillRightAboveEdgeEvent",rt:$n[0].Void,p:[$n[21].DTSweepContext,$n[21].DTSweepConstraint,$n[21].AdvancingFrontNode]},{a:1,n:"FillRightBelowEdgeEvent",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"edge",pt:$n[21].DTSweepConstraint,ps:1},{n:"node",pt:$n[21].AdvancingFrontNode,ps:2}],sn:"FillRightBelowEdgeEvent",rt:$n[0].Void,p:[$n[21].DTSweepContext,$n[21].DTSweepConstraint,$n[21].AdvancingFrontNode]},{a:1,n:"FillRightConcaveEdgeEvent",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"edge",pt:$n[21].DTSweepConstraint,ps:1},{n:"node",pt:$n[21].AdvancingFrontNode,ps:2}],sn:"FillRightConcaveEdgeEvent",rt:$n[0].Void,p:[$n[21].DTSweepContext,$n[21].DTSweepConstraint,$n[21].AdvancingFrontNode]},{a:1,n:"FillRightConvexEdgeEvent",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"edge",pt:$n[21].DTSweepConstraint,ps:1},{n:"node",pt:$n[21].AdvancingFrontNode,ps:2}],sn:"FillRightConvexEdgeEvent",rt:$n[0].Void,p:[$n[21].DTSweepContext,$n[21].DTSweepConstraint,$n[21].AdvancingFrontNode]},{a:1,n:"FinalizationConvexHull",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0}],sn:"FinalizationConvexHull",rt:$n[0].Void,p:[$n[21].DTSweepContext]},{a:1,n:"FinalizationPolygon",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0}],sn:"FinalizationPolygon",rt:$n[0].Void,p:[$n[21].DTSweepContext]},{a:1,n:"FlipEdgeEvent",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"ep",pt:$n[20].TriangulationPoint,ps:1},{n:"eq",pt:$n[20].TriangulationPoint,ps:2},{n:"t",pt:$n[19].DelaunayTriangle,ps:3},{n:"p",pt:$n[20].TriangulationPoint,ps:4}],sn:"FlipEdgeEvent",rt:$n[0].Void,p:[$n[21].DTSweepContext,$n[20].TriangulationPoint,$n[20].TriangulationPoint,$n[19].DelaunayTriangle,$n[20].TriangulationPoint]},{a:1,n:"FlipScanEdgeEvent",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"ep",pt:$n[20].TriangulationPoint,ps:1},{n:"eq",pt:$n[20].TriangulationPoint,ps:2},{n:"flipTriangle",pt:$n[19].DelaunayTriangle,ps:3},{n:"t",pt:$n[19].DelaunayTriangle,ps:4},{n:"p",pt:$n[20].TriangulationPoint,ps:5}],sn:"FlipScanEdgeEvent",rt:$n[0].Void,p:[$n[21].DTSweepContext,$n[20].TriangulationPoint,$n[20].TriangulationPoint,$n[19].DelaunayTriangle,$n[19].DelaunayTriangle,$n[20].TriangulationPoint]},{a:1,n:"HoleAngle",is:!0,t:8,pi:[{n:"node",pt:$n[21].AdvancingFrontNode,ps:0}],sn:"HoleAngle",rt:$n[0].Double,p:[$n[21].AdvancingFrontNode],box:function($v){return Bridge.box($v,System.Double,System.Double.format,System.Double.getHashCode)}},{a:1,n:"IsEdgeSideOfTriangle",is:!0,t:8,pi:[{n:"triangle",pt:$n[19].DelaunayTriangle,ps:0},{n:"ep",pt:$n[20].TriangulationPoint,ps:1},{n:"eq",pt:$n[20].TriangulationPoint,ps:2}],sn:"IsEdgeSideOfTriangle",rt:$n[0].Boolean,p:[$n[19].DelaunayTriangle,$n[20].TriangulationPoint,$n[20].TriangulationPoint],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"IsShallow",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"node",pt:$n[21].AdvancingFrontNode,ps:1}],sn:"IsShallow",rt:$n[0].Boolean,p:[$n[21].DTSweepContext,$n[21].AdvancingFrontNode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"LargeHole_DontFill",is:!0,t:8,pi:[{n:"node",pt:$n[21].AdvancingFrontNode,ps:0}],sn:"LargeHole_DontFill",rt:$n[0].Boolean,p:[$n[21].AdvancingFrontNode],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"Legalize",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"t",pt:$n[19].DelaunayTriangle,ps:1}],sn:"Legalize",rt:$n[0].Boolean,p:[$n[21].DTSweepContext,$n[19].DelaunayTriangle],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"NewFrontTriangle",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"point",pt:$n[20].TriangulationPoint,ps:1},{n:"node",pt:$n[21].AdvancingFrontNode,ps:2}],sn:"NewFrontTriangle",rt:$n[21].AdvancingFrontNode,p:[$n[21].DTSweepContext,$n[20].TriangulationPoint,$n[21].AdvancingFrontNode]},{a:1,n:"NextFlipPoint",is:!0,t:8,pi:[{n:"ep",pt:$n[20].TriangulationPoint,ps:0},{n:"eq",pt:$n[20].TriangulationPoint,ps:1},{n:"ot",pt:$n[19].DelaunayTriangle,ps:2},{n:"op",pt:$n[20].TriangulationPoint,ps:3}],sn:"NextFlipPoint",rt:$n[20].TriangulationPoint,p:[$n[20].TriangulationPoint,$n[20].TriangulationPoint,$n[19].DelaunayTriangle,$n[20].TriangulationPoint]},{a:1,n:"NextFlipTriangle",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"o",pt:$n[20].Orientation,ps:1},{n:"t",pt:$n[19].DelaunayTriangle,ps:2},{n:"ot",pt:$n[19].DelaunayTriangle,ps:3},{n:"p",pt:$n[20].TriangulationPoint,ps:4},{n:"op",pt:$n[20].TriangulationPoint,ps:5}],sn:"NextFlipTriangle",rt:$n[19].DelaunayTriangle,p:[$n[21].DTSweepContext,$n[20].Orientation,$n[19].DelaunayTriangle,$n[19].DelaunayTriangle,$n[20].TriangulationPoint,$n[20].TriangulationPoint]},{a:1,n:"PointEvent",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"point",pt:$n[20].TriangulationPoint,ps:1}],sn:"PointEvent",rt:$n[21].AdvancingFrontNode,p:[$n[21].DTSweepContext,$n[20].TriangulationPoint]},{a:1,n:"RotateTrianglePair",is:!0,t:8,pi:[{n:"t",pt:$n[19].DelaunayTriangle,ps:0},{n:"p",pt:$n[20].TriangulationPoint,ps:1},{n:"ot",pt:$n[19].DelaunayTriangle,ps:2},{n:"op",pt:$n[20].TriangulationPoint,ps:3}],sn:"RotateTrianglePair",rt:$n[0].Void,p:[$n[19].DelaunayTriangle,$n[20].TriangulationPoint,$n[19].DelaunayTriangle,$n[20].TriangulationPoint]},{a:1,n:"Sweep",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0}],sn:"Sweep",rt:$n[0].Void,p:[$n[21].DTSweepContext]},{a:2,n:"Triangulate",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0}],sn:"Triangulate",rt:$n[0].Void,p:[$n[21].DTSweepContext]},{a:1,n:"TurnAdvancingFrontConvex",is:!0,t:8,pi:[{n:"tcx",pt:$n[21].DTSweepContext,ps:0},{n:"b",pt:$n[21].AdvancingFrontNode,ps:1},{n:"c",pt:$n[21].AdvancingFrontNode,ps:2}],sn:"TurnAdvancingFrontConvex",rt:$n[0].Void,p:[$n[21].DTSweepContext,$n[21].AdvancingFrontNode,$n[21].AdvancingFrontNode]},{a:1,n:"PI_3div4",is:!0,t:4,rt:$n[0].Double,sn:"PI_3div4",box:function($v){return Bridge.box($v,System.Double,System.Double.format,System.Double.getHashCode)}},{a:1,n:"PI_div2",is:!0,t:4,rt:$n[0].Double,sn:"PI_div2",box:function($v){return Bridge.box($v,System.Double,System.Double.format,System.Double.getHashCode)}}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepConstraint",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[20].TriangulationPoint,$n[20].TriangulationPoint],pi:[{n:"p1",pt:$n[20].TriangulationPoint,ps:0},{n:"p2",pt:$n[20].TriangulationPoint,ps:1}],sn:"ctor"}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext",function(){return{nested:[$n[21].DTSweepContext.DTSweepBasin,$n[21].DTSweepContext.DTSweepEdgeEvent],att:1048576,a:4,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:"AddNode",t:8,pi:[{n:"node",pt:$n[21].AdvancingFrontNode,ps:0}],sn:"AddNode",rt:$n[0].Void,p:[$n[21].AdvancingFrontNode]},{ov:!0,a:2,n:"Clear",t:8,sn:"Clear",rt:$n[0].Void},{a:2,n:"CreateAdvancingFront",t:8,sn:"CreateAdvancingFront",rt:$n[0].Void},{a:2,n:"FinalizeTriangulation",t:8,sn:"FinalizeTriangulation",rt:$n[0].Void},{a:2,n:"LocateNode",t:8,pi:[{n:"point",pt:$n[20].TriangulationPoint,ps:0}],sn:"LocateNode",rt:$n[21].AdvancingFrontNode,p:[$n[20].TriangulationPoint]},{a:2,n:"MapTriangleToNodes",t:8,pi:[{n:"t",pt:$n[19].DelaunayTriangle,ps:0}],sn:"MapTriangleToNodes",rt:$n[0].Void,p:[$n[19].DelaunayTriangle]},{a:2,n:"MeshClean",t:8,pi:[{n:"triangle",pt:$n[19].DelaunayTriangle,ps:0}],sn:"MeshClean",rt:$n[0].Void,p:[$n[19].DelaunayTriangle]},{a:1,n:"MeshCleanReq",t:8,pi:[{n:"triangle",pt:$n[19].DelaunayTriangle,ps:0}],sn:"MeshCleanReq",rt:$n[0].Void,p:[$n[19].DelaunayTriangle]},{ov:!0,a:2,n:"NewConstraint",t:8,pi:[{n:"a",pt:$n[20].TriangulationPoint,ps:0},{n:"b",pt:$n[20].TriangulationPoint,ps:1}],sn:"NewConstraint",rt:$n[20].TriangulationConstraint,p:[$n[20].TriangulationPoint,$n[20].TriangulationPoint]},{ov:!0,a:2,n:"PrepareTriangulation",t:8,pi:[{n:"t",pt:$n[20].Triangulatable,ps:0}],sn:"PrepareTriangulation",rt:$n[0].Void,p:[$n[20].Triangulatable]},{a:2,n:"RemoveFromList",t:8,pi:[{n:"triangle",pt:$n[19].DelaunayTriangle,ps:0}],sn:"RemoveFromList",rt:$n[0].Void,p:[$n[19].DelaunayTriangle]},{a:2,n:"RemoveNode",t:8,pi:[{n:"node",pt:$n[21].AdvancingFrontNode,ps:0}],sn:"RemoveNode",rt:$n[0].Void,p:[$n[21].AdvancingFrontNode]},{a:2,n:"Head",t:16,rt:$n[20].TriangulationPoint,g:{a:2,n:"get_Head",t:8,rt:$n[20].TriangulationPoint,fg:"Head"},s:{a:2,n:"set_Head",t:8,p:[$n[20].TriangulationPoint],rt:$n[0].Void,fs:"Head"},fn:"Head"},{a:2,n:"Tail",t:16,rt:$n[20].TriangulationPoint,g:{a:2,n:"get_Tail",t:8,rt:$n[20].TriangulationPoint,fg:"Tail"},s:{a:2,n:"set_Tail",t:8,p:[$n[20].TriangulationPoint],rt:$n[0].Void,fs:"Tail"},fn:"Tail"},{a:1,n:"ALPHA",is:!0,t:4,rt:$n[0].Single,sn:"ALPHA",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Basin",t:4,rt:$n[21].DTSweepContext.DTSweepBasin,sn:"Basin"},{a:2,n:"EdgeEvent",t:4,rt:$n[21].DTSweepContext.DTSweepEdgeEvent,sn:"EdgeEvent"},{a:1,n:"_comparator",t:4,rt:$n[21].DTSweepPointComparator,sn:"_comparator"},{a:2,n:"aFront",t:4,rt:$n[21].AdvancingFront,sn:"aFront"}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext.DTSweepBasin",function(){return{td:$n[21].DTSweepContext,att:1048578,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"bottomNode",t:4,rt:$n[21].AdvancingFrontNode,sn:"bottomNode"},{a:2,n:"leftHighest",t:4,rt:$n[0].Boolean,sn:"leftHighest",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"leftNode",t:4,rt:$n[21].AdvancingFrontNode,sn:"leftNode"},{a:2,n:"rightNode",t:4,rt:$n[21].AdvancingFrontNode,sn:"rightNode"},{a:2,n:"width",t:4,rt:$n[0].Double,sn:"width",box:function($v){return Bridge.box($v,System.Double,System.Double.format,System.Double.getHashCode)}}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext.DTSweepEdgeEvent",function(){return{td:$n[21].DTSweepContext,att:1048578,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"ConstrainedEdge",t:4,rt:$n[21].DTSweepConstraint,sn:"ConstrainedEdge"},{a:2,n:"Right",t:4,rt:$n[0].Boolean,sn:"Right",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepPointComparator",function(){return{att:1048576,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Compare",t:8,pi:[{n:"p1",pt:$n[20].TriangulationPoint,ps:0},{n:"p2",pt:$n[20].TriangulationPoint,ps:1}],sn:"compare",rt:$n[0].Int32,p:[$n[20].TriangulationPoint,$n[20].TriangulationPoint],box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep.PointOnEdgeException",function(){return{att:1048576,a:4,m:[{a:2,n:".ctor",t:1,p:[$n[0].String],pi:[{n:"message",pt:$n[0].String,ps:0}],sn:"ctor"}]}},$n);$m("FarseerPhysics.Common.ConvexHull.ChainHull",function(){return{nested:[$n[24].ChainHull.PointComparer],att:1048961,a:2,s:!0,m:[{a:2,n:"GetConvexHull",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0}],sn:"GetConvexHull",rt:$n[4].Vertices,p:[$n[4].Vertices]},{a:1,n:"_pointComparer",is:!0,t:4,rt:$n[24].ChainHull.PointComparer,sn:"_pointComparer"}]}},$n);$m("FarseerPhysics.Common.ConvexHull.ChainHull.PointComparer",function(){return{td:$n[24].ChainHull,att:1048579,a:1,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{ov:!0,a:2,n:"Compare",t:8,pi:[{n:"a",pt:$n[1].Vector2,ps:0},{n:"b",pt:$n[1].Vector2,ps:1}],sn:"compare",rt:$n[0].Int32,p:[$n[1].Vector2,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("FarseerPhysics.Common.ConvexHull.GiftWrap",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"GetConvexHull",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0}],sn:"GetConvexHull",rt:$n[4].Vertices,p:[$n[4].Vertices]}]}},$n);$m("FarseerPhysics.Common.ConvexHull.Melkman",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"GetConvexHull",is:!0,t:8,pi:[{n:"vertices",pt:$n[4].Vertices,ps:0}],sn:"GetConvexHull",rt:$n[4].Vertices,p:[$n[4].Vertices]}]}},$n);$m("FarseerPhysics.Collision.ContactFeatureType",function(){return{att:256,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Face",is:!0,t:4,rt:$n[11].ContactFeatureType,sn:"Face",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.ContactFeatureType,System.Enum.toStringFn(FarseerPhysics.Collision.ContactFeatureType))}},{a:2,n:"Vertex",is:!0,t:4,rt:$n[11].ContactFeatureType,sn:"Vertex",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.ContactFeatureType,System.Enum.toStringFn(FarseerPhysics.Collision.ContactFeatureType))}}]}},$n);$m("FarseerPhysics.Collision.ContactFeature",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"IndexA",t:4,rt:$n[0].Byte,sn:"IndexA",box:function($v){return Bridge.box($v,System.Byte)}},{a:2,n:"IndexB",t:4,rt:$n[0].Byte,sn:"IndexB",box:function($v){return Bridge.box($v,System.Byte)}},{a:2,n:"TypeA",t:4,rt:$n[0].Byte,sn:"TypeA",box:function($v){return Bridge.box($v,System.Byte)}},{a:2,n:"TypeB",t:4,rt:$n[0].Byte,sn:"TypeB",box:function($v){return Bridge.box($v,System.Byte)}}]}},$n);$m("FarseerPhysics.Collision.ContactID",function(){return{att:1048849,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Features",t:4,rt:$n[11].ContactFeature,sn:"Features"},{a:2,n:"Key",t:4,rt:$n[0].UInt32,sn:"Key",box:function($v){return Bridge.box($v,System.UInt32)}}]}},$n);$m("FarseerPhysics.Collision.ManifoldPoint",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Id",t:4,rt:$n[11].ContactID,sn:"Id"},{a:2,n:"LocalPoint",t:4,rt:$n[1].Vector2,sn:"LocalPoint"},{a:2,n:"NormalImpulse",t:4,rt:$n[0].Single,sn:"NormalImpulse",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"TangentImpulse",t:4,rt:$n[0].Single,sn:"TangentImpulse",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Collision.ManifoldType",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Circles",is:!0,t:4,rt:$n[11].ManifoldType,sn:"Circles",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.ManifoldType,System.Enum.toStringFn(FarseerPhysics.Collision.ManifoldType))}},{a:2,n:"FaceA",is:!0,t:4,rt:$n[11].ManifoldType,sn:"FaceA",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.ManifoldType,System.Enum.toStringFn(FarseerPhysics.Collision.ManifoldType))}},{a:2,n:"FaceB",is:!0,t:4,rt:$n[11].ManifoldType,sn:"FaceB",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.ManifoldType,System.Enum.toStringFn(FarseerPhysics.Collision.ManifoldType))}}]}},$n);$m("FarseerPhysics.Collision.Manifold",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"LocalNormal",t:4,rt:$n[1].Vector2,sn:"LocalNormal"},{a:2,n:"LocalPoint",t:4,rt:$n[1].Vector2,sn:"LocalPoint"},{a:2,n:"PointCount",t:4,rt:$n[0].Int32,sn:"PointCount",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Points",t:4,rt:$n[4].FixedArray2$1(FarseerPhysics.Collision.ManifoldPoint),sn:"Points"},{a:2,n:"Type",t:4,rt:$n[11].ManifoldType,sn:"Type",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.ManifoldType,System.Enum.toStringFn(FarseerPhysics.Collision.ManifoldType))}}]}},$n);$m("FarseerPhysics.Collision.PointState",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Add",is:!0,t:4,rt:$n[11].PointState,sn:"Add",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.PointState,System.Enum.toStringFn(FarseerPhysics.Collision.PointState))}},{a:2,n:"Null",is:!0,t:4,rt:$n[11].PointState,sn:"Null",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.PointState,System.Enum.toStringFn(FarseerPhysics.Collision.PointState))}},{a:2,n:"Persist",is:!0,t:4,rt:$n[11].PointState,sn:"Persist",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.PointState,System.Enum.toStringFn(FarseerPhysics.Collision.PointState))}},{a:2,n:"Remove",is:!0,t:4,rt:$n[11].PointState,sn:"Remove",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.PointState,System.Enum.toStringFn(FarseerPhysics.Collision.PointState))}}]}},$n);$m("FarseerPhysics.Collision.ClipVertex",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"ID",t:4,rt:$n[11].ContactID,sn:"ID"},{a:2,n:"V",t:4,rt:$n[1].Vector2,sn:"V"}]}},$n);$m("FarseerPhysics.Collision.RayCastInput",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"MaxFraction",t:4,rt:$n[0].Single,sn:"MaxFraction",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Point1",t:4,rt:$n[1].Vector2,sn:"Point1"},{a:2,n:"Point2",t:4,rt:$n[1].Vector2,sn:"Point2"}]}},$n);$m("FarseerPhysics.Collision.RayCastOutput",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Fraction",t:4,rt:$n[0].Single,sn:"Fraction",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Normal",t:4,rt:$n[1].Vector2,sn:"Normal"}]}},$n);$m("FarseerPhysics.Collision.AABB",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[1].Vector2,$n[1].Vector2],pi:[{n:"min",ref:!0,pt:$n[1].Vector2,ps:0},{n:"max",ref:!0,pt:$n[1].Vector2,ps:1}],sn:"$ctor3"},{a:2,n:".ctor",t:1,p:[$n[1].Vector2,$n[1].Vector2],pi:[{n:"min",pt:$n[1].Vector2,ps:0},{n:"max",pt:$n[1].Vector2,ps:1}],sn:"$ctor1"},{a:2,n:".ctor",t:1,p:[$n[1].Vector2,$n[0].Single,$n[0].Single],pi:[{n:"center",pt:$n[1].Vector2,ps:0},{n:"width",pt:$n[0].Single,ps:1},{n:"height",pt:$n[0].Single,ps:2}],sn:"$ctor2"},{a:2,n:"Combine",t:8,pi:[{n:"aabb",ref:!0,pt:$n[11].AABB,ps:0}],sn:"Combine",rt:$n[0].Void,p:[$n[11].AABB]},{a:2,n:"Combine",t:8,pi:[{n:"aabb1",ref:!0,pt:$n[11].AABB,ps:0},{n:"aabb2",ref:!0,pt:$n[11].AABB,ps:1}],sn:"Combine$1",rt:$n[0].Void,p:[$n[11].AABB,$n[11].AABB]},{a:2,n:"Contains",t:8,pi:[{n:"aabb",ref:!0,pt:$n[11].AABB,ps:0}],sn:"Contains",rt:$n[0].Boolean,p:[$n[11].AABB],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Contains",t:8,pi:[{n:"point",ref:!0,pt:$n[1].Vector2,ps:0}],sn:"Contains$1",rt:$n[0].Boolean,p:[$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsValid",t:8,sn:"IsValid",rt:$n[0].Boolean,box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"RayCast",t:8,pi:[{n:"output",out:!0,pt:$n[11].RayCastOutput,ps:0},{n:"input",ref:!0,pt:$n[11].RayCastInput,ps:1},{n:"doInteriorCheck",dv:!0,o:!0,pt:$n[0].Boolean,ps:2}],sn:"RayCast",rt:$n[0].Boolean,p:[$n[11].RayCastOutput,$n[11].RayCastInput,$n[0].Boolean],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"TestOverlap",is:!0,t:8,pi:[{n:"a",ref:!0,pt:$n[11].AABB,ps:0},{n:"b",ref:!0,pt:$n[11].AABB,ps:1}],sn:"TestOverlap",rt:$n[0].Boolean,p:[$n[11].AABB,$n[11].AABB],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Center",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_Center",t:8,rt:$n[1].Vector2,fg:"Center"},fn:"Center"},{a:2,n:"Extents",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_Extents",t:8,rt:$n[1].Vector2,fg:"Extents"},fn:"Extents"},{a:2,n:"Height",t:16,rt:$n[0].Single,g:{a:2,n:"get_Height",t:8,rt:$n[0].Single,fg:"Height",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},fn:"Height"},{a:2,n:"Perimeter",t:16,rt:$n[0].Single,g:{a:2,n:"get_Perimeter",t:8,rt:$n[0].Single,fg:"Perimeter",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},fn:"Perimeter"},{a:2,n:"Q1",t:16,rt:$n[11].AABB,g:{a:2,n:"get_Q1",t:8,rt:$n[11].AABB,fg:"Q1"},fn:"Q1"},{a:2,n:"Q2",t:16,rt:$n[11].AABB,g:{a:2,n:"get_Q2",t:8,rt:$n[11].AABB,fg:"Q2"},fn:"Q2"},{a:2,n:"Q3",t:16,rt:$n[11].AABB,g:{a:2,n:"get_Q3",t:8,rt:$n[11].AABB,fg:"Q3"},fn:"Q3"},{a:2,n:"Q4",t:16,rt:$n[11].AABB,g:{a:2,n:"get_Q4",t:8,rt:$n[11].AABB,fg:"Q4"},fn:"Q4"},{a:2,n:"Vertices",t:16,rt:$n[4].Vertices,g:{a:2,n:"get_Vertices",t:8,rt:$n[4].Vertices,fg:"Vertices"},fn:"Vertices"},{a:2,n:"Width",t:16,rt:$n[0].Single,g:{a:2,n:"get_Width",t:8,rt:$n[0].Single,fg:"Width",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},fn:"Width"},{a:2,n:"LowerBound",t:4,rt:$n[1].Vector2,sn:"LowerBound"},{a:2,n:"UpperBound",t:4,rt:$n[1].Vector2,sn:"UpperBound"}]}},$n);$m("FarseerPhysics.Collision.TempPolygon",function(){return{att:1048577,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Count",t:4,rt:$n[0].Int32,sn:"Count",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Normals",t:4,rt:System.Array.type(Microsoft.Xna.Framework.Vector2),sn:"Normals"},{a:2,n:"Vertices",t:4,rt:System.Array.type(Microsoft.Xna.Framework.Vector2),sn:"Vertices"}]}},$n);$m("FarseerPhysics.Collision.EPAxis",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Index",t:4,rt:$n[0].Int32,sn:"Index",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Separation",t:4,rt:$n[0].Single,sn:"Separation",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Type",t:4,rt:$n[11].EPAxisType,sn:"Type",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.EPAxisType,System.Enum.toStringFn(FarseerPhysics.Collision.EPAxisType))}}]}},$n);$m("FarseerPhysics.Collision.ReferenceFace",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"i1",t:4,rt:$n[0].Int32,sn:"i1",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"i2",t:4,rt:$n[0].Int32,sn:"i2",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"normal",t:4,rt:$n[1].Vector2,sn:"normal"},{a:2,n:"sideNormal1",t:4,rt:$n[1].Vector2,sn:"sideNormal1"},{a:2,n:"sideNormal2",t:4,rt:$n[1].Vector2,sn:"sideNormal2"},{a:2,n:"sideOffset1",t:4,rt:$n[0].Single,sn:"sideOffset1",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"sideOffset2",t:4,rt:$n[0].Single,sn:"sideOffset2",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"v1",t:4,rt:$n[1].Vector2,sn:"v1"},{a:2,n:"v2",t:4,rt:$n[1].Vector2,sn:"v2"}]}},$n);$m("FarseerPhysics.Collision.EPAxisType",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"EdgeA",is:!0,t:4,rt:$n[11].EPAxisType,sn:"EdgeA",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.EPAxisType,System.Enum.toStringFn(FarseerPhysics.Collision.EPAxisType))}},{a:2,n:"EdgeB",is:!0,t:4,rt:$n[11].EPAxisType,sn:"EdgeB",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.EPAxisType,System.Enum.toStringFn(FarseerPhysics.Collision.EPAxisType))}},{a:2,n:"Unknown",is:!0,t:4,rt:$n[11].EPAxisType,sn:"Unknown",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.EPAxisType,System.Enum.toStringFn(FarseerPhysics.Collision.EPAxisType))}}]}},$n);$m("FarseerPhysics.Collision.Collision",function(){return{nested:[$n[11].Collision.EPCollider],att:1048961,a:2,s:!0,m:[{a:1,n:"ClipSegmentToLine",is:!0,t:8,pi:[{n:"vOut",out:!0,pt:$n[4].FixedArray2$1(FarseerPhysics.Collision.ClipVertex),ps:0},{n:"vIn",ref:!0,pt:$n[4].FixedArray2$1(FarseerPhysics.Collision.ClipVertex),ps:1},{n:"normal",pt:$n[1].Vector2,ps:2},{n:"offset",pt:$n[0].Single,ps:3},{n:"vertexIndexA",pt:$n[0].Int32,ps:4}],sn:"ClipSegmentToLine",rt:$n[0].Int32,p:[$n[4].FixedArray2$1(FarseerPhysics.Collision.ClipVertex),$n[4].FixedArray2$1(FarseerPhysics.Collision.ClipVertex),$n[1].Vector2,$n[0].Single,$n[0].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"CollideCircles",is:!0,t:8,pi:[{n:"manifold",ref:!0,pt:$n[11].Manifold,ps:0},{n:"circleA",pt:$n[7].CircleShape,ps:1},{n:"xfA",ref:!0,pt:$n[4].Transform,ps:2},{n:"circleB",pt:$n[7].CircleShape,ps:3},{n:"xfB",ref:!0,pt:$n[4].Transform,ps:4}],sn:"CollideCircles",rt:$n[0].Void,p:[$n[11].Manifold,$n[7].CircleShape,$n[4].Transform,$n[7].CircleShape,$n[4].Transform]},{a:2,n:"CollideEdgeAndCircle",is:!0,t:8,pi:[{n:"manifold",ref:!0,pt:$n[11].Manifold,ps:0},{n:"edgeA",pt:$n[7].EdgeShape,ps:1},{n:"transformA",ref:!0,pt:$n[4].Transform,ps:2},{n:"circleB",pt:$n[7].CircleShape,ps:3},{n:"transformB",ref:!0,pt:$n[4].Transform,ps:4}],sn:"CollideEdgeAndCircle",rt:$n[0].Void,p:[$n[11].Manifold,$n[7].EdgeShape,$n[4].Transform,$n[7].CircleShape,$n[4].Transform]},{a:2,n:"CollideEdgeAndPolygon",is:!0,t:8,pi:[{n:"manifold",ref:!0,pt:$n[11].Manifold,ps:0},{n:"edgeA",pt:$n[7].EdgeShape,ps:1},{n:"xfA",ref:!0,pt:$n[4].Transform,ps:2},{n:"polygonB",pt:$n[7].PolygonShape,ps:3},{n:"xfB",ref:!0,pt:$n[4].Transform,ps:4}],sn:"CollideEdgeAndPolygon",rt:$n[0].Void,p:[$n[11].Manifold,$n[7].EdgeShape,$n[4].Transform,$n[7].PolygonShape,$n[4].Transform]},{a:2,n:"CollidePolygonAndCircle",is:!0,t:8,pi:[{n:"manifold",ref:!0,pt:$n[11].Manifold,ps:0},{n:"polygonA",pt:$n[7].PolygonShape,ps:1},{n:"xfA",ref:!0,pt:$n[4].Transform,ps:2},{n:"circleB",pt:$n[7].CircleShape,ps:3},{n:"xfB",ref:!0,pt:$n[4].Transform,ps:4}],sn:"CollidePolygonAndCircle",rt:$n[0].Void,p:[$n[11].Manifold,$n[7].PolygonShape,$n[4].Transform,$n[7].CircleShape,$n[4].Transform]},{a:2,n:"CollidePolygons",is:!0,t:8,pi:[{n:"manifold",ref:!0,pt:$n[11].Manifold,ps:0},{n:"polyA",pt:$n[7].PolygonShape,ps:1},{n:"transformA",ref:!0,pt:$n[4].Transform,ps:2},{n:"polyB",pt:$n[7].PolygonShape,ps:3},{n:"transformB",ref:!0,pt:$n[4].Transform,ps:4}],sn:"CollidePolygons",rt:$n[0].Void,p:[$n[11].Manifold,$n[7].PolygonShape,$n[4].Transform,$n[7].PolygonShape,$n[4].Transform]},{a:1,n:"EdgeSeparation",is:!0,t:8,pi:[{n:"poly1",pt:$n[7].PolygonShape,ps:0},{n:"xf1",ref:!0,pt:$n[4].Transform,ps:1},{n:"edge1",pt:$n[0].Int32,ps:2},{n:"poly2",pt:$n[7].PolygonShape,ps:3},{n:"xf2",ref:!0,pt:$n[4].Transform,ps:4}],sn:"EdgeSeparation",rt:$n[0].Single,p:[$n[7].PolygonShape,$n[4].Transform,$n[0].Int32,$n[7].PolygonShape,$n[4].Transform],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"FindIncidentEdge",is:!0,t:8,pi:[{n:"c",out:!0,pt:$n[4].FixedArray2$1(FarseerPhysics.Collision.ClipVertex),ps:0},{n:"poly1",pt:$n[7].PolygonShape,ps:1},{n:"xf1",ref:!0,pt:$n[4].Transform,ps:2},{n:"edge1",pt:$n[0].Int32,ps:3},{n:"poly2",pt:$n[7].PolygonShape,ps:4},{n:"xf2",ref:!0,pt:$n[4].Transform,ps:5}],sn:"FindIncidentEdge",rt:$n[0].Void,p:[$n[4].FixedArray2$1(FarseerPhysics.Collision.ClipVertex),$n[7].PolygonShape,$n[4].Transform,$n[0].Int32,$n[7].PolygonShape,$n[4].Transform]},{a:1,n:"FindMaxSeparation",is:!0,t:8,pi:[{n:"edgeIndex",out:!0,pt:$n[0].Int32,ps:0},{n:"poly1",pt:$n[7].PolygonShape,ps:1},{n:"xf1",ref:!0,pt:$n[4].Transform,ps:2},{n:"poly2",pt:$n[7].PolygonShape,ps:3},{n:"xf2",ref:!0,pt:$n[4].Transform,ps:4}],sn:"FindMaxSeparation",rt:$n[0].Single,p:[$n[0].Int32,$n[7].PolygonShape,$n[4].Transform,$n[7].PolygonShape,$n[4].Transform],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"GetPointStates",is:!0,t:8,pi:[{n:"state1",out:!0,pt:$n[4].FixedArray2$1(FarseerPhysics.Collision.PointState),ps:0},{n:"state2",out:!0,pt:$n[4].FixedArray2$1(FarseerPhysics.Collision.PointState),ps:1},{n:"manifold1",ref:!0,pt:$n[11].Manifold,ps:2},{n:"manifold2",ref:!0,pt:$n[11].Manifold,ps:3}],sn:"GetPointStates",rt:$n[0].Void,p:[$n[4].FixedArray2$1(FarseerPhysics.Collision.PointState),$n[4].FixedArray2$1(FarseerPhysics.Collision.PointState),$n[11].Manifold,$n[11].Manifold]},{a:2,n:"TestOverlap",is:!0,t:8,pi:[{n:"shapeA",pt:$n[7].Shape,ps:0},{n:"indexA",pt:$n[0].Int32,ps:1},{n:"shapeB",pt:$n[7].Shape,ps:2},{n:"indexB",pt:$n[0].Int32,ps:3},{n:"xfA",ref:!0,pt:$n[4].Transform,ps:4},{n:"xfB",ref:!0,pt:$n[4].Transform,ps:5}],sn:"TestOverlap",rt:$n[0].Boolean,p:[$n[7].Shape,$n[0].Int32,$n[7].Shape,$n[0].Int32,$n[4].Transform,$n[4].Transform],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_input",is:!0,t:4,rt:$n[11].DistanceInput,sn:"_input"}]}},$n);$m("FarseerPhysics.Collision.Collision.EPCollider",function(){return{td:$n[11].Collision,att:1048579,a:1,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Collide",t:8,pi:[{n:"manifold",ref:!0,pt:$n[11].Manifold,ps:0},{n:"edgeA",pt:$n[7].EdgeShape,ps:1},{n:"xfA",ref:!0,pt:$n[4].Transform,ps:2},{n:"polygonB",pt:$n[7].PolygonShape,ps:3},{n:"xfB",ref:!0,pt:$n[4].Transform,ps:4}],sn:"Collide",rt:$n[0].Void,p:[$n[11].Manifold,$n[7].EdgeShape,$n[4].Transform,$n[7].PolygonShape,$n[4].Transform]},{a:1,n:"ComputeEdgeSeparation",t:8,sn:"ComputeEdgeSeparation",rt:$n[11].EPAxis},{a:1,n:"ComputePolygonSeparation",t:8,sn:"ComputePolygonSeparation",rt:$n[11].EPAxis},{a:1,n:"_centroidB",t:4,rt:$n[1].Vector2,sn:"_centroidB"},{a:1,n:"_front",t:4,rt:$n[0].Boolean,sn:"_front",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_lowerLimit",t:4,rt:$n[1].Vector2,sn:"_lowerLimit"},{a:1,n:"_normal",t:4,rt:$n[1].Vector2,sn:"_normal"},{a:1,n:"_normal0",t:4,rt:$n[1].Vector2,sn:"_normal0"},{a:1,n:"_normal1",t:4,rt:$n[1].Vector2,sn:"_normal1"},{a:1,n:"_normal2",t:4,rt:$n[1].Vector2,sn:"_normal2"},{a:1,n:"_polygonB",t:4,rt:$n[11].TempPolygon,sn:"_polygonB"},{a:1,n:"_radius",t:4,rt:$n[0].Single,sn:"_radius",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_upperLimit",t:4,rt:$n[1].Vector2,sn:"_upperLimit"},{a:1,n:"_v0",t:4,rt:$n[1].Vector2,sn:"_v0"},{a:1,n:"_v1",t:4,rt:$n[1].Vector2,sn:"_v1"},{a:1,n:"_v2",t:4,rt:$n[1].Vector2,sn:"_v2"},{a:1,n:"_v3",t:4,rt:$n[1].Vector2,sn:"_v3"},{a:1,n:"_xf",t:4,rt:$n[4].Transform,sn:"_xf"}]}},$n);$m("FarseerPhysics.Collision.DistanceProxy",function(){return{att:1048577,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"GetSupport",t:8,pi:[{n:"direction",pt:$n[1].Vector2,ps:0}],sn:"GetSupport",rt:$n[0].Int32,p:[$n[1].Vector2],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"GetSupportVertex",t:8,pi:[{n:"direction",pt:$n[1].Vector2,ps:0}],sn:"GetSupportVertex",rt:$n[1].Vector2,p:[$n[1].Vector2]},{a:2,n:"Set",t:8,pi:[{n:"shape",pt:$n[7].Shape,ps:0},{n:"index",pt:$n[0].Int32,ps:1}],sn:"Set",rt:$n[0].Void,p:[$n[7].Shape,$n[0].Int32]},{a:4,n:"Radius",t:4,rt:$n[0].Single,sn:"Radius",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:4,n:"Vertices",t:4,rt:$n[4].Vertices,sn:"Vertices"}]}},$n);$m("FarseerPhysics.Collision.SimplexCache",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Count",t:4,rt:$n[0].UInt16,sn:"Count",box:function($v){return Bridge.box($v,System.UInt16)}},{a:2,n:"IndexA",t:4,rt:$n[4].FixedArray3$1(System.Byte),sn:"IndexA"},{a:2,n:"IndexB",t:4,rt:$n[4].FixedArray3$1(System.Byte),sn:"IndexB"},{a:2,n:"Metric",t:4,rt:$n[0].Single,sn:"Metric",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Collision.DistanceInput",function(){return{att:1048577,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"ProxyA",t:4,rt:$n[11].DistanceProxy,sn:"ProxyA"},{a:2,n:"ProxyB",t:4,rt:$n[11].DistanceProxy,sn:"ProxyB"},{a:2,n:"TransformA",t:4,rt:$n[4].Transform,sn:"TransformA"},{a:2,n:"TransformB",t:4,rt:$n[4].Transform,sn:"TransformB"},{a:2,n:"UseRadii",t:4,rt:$n[0].Boolean,sn:"UseRadii",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("FarseerPhysics.Collision.DistanceOutput",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Distance",t:4,rt:$n[0].Single,sn:"Distance",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Iterations",t:4,rt:$n[0].Int32,sn:"Iterations",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"PointA",t:4,rt:$n[1].Vector2,sn:"PointA"},{a:2,n:"PointB",t:4,rt:$n[1].Vector2,sn:"PointB"}]}},$n);$m("FarseerPhysics.Collision.SimplexVertex",function(){return{att:1048840,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"A",t:4,rt:$n[0].Single,sn:"A",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"IndexA",t:4,rt:$n[0].Int32,sn:"IndexA",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"IndexB",t:4,rt:$n[0].Int32,sn:"IndexB",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"W",t:4,rt:$n[1].Vector2,sn:"W"},{a:2,n:"WA",t:4,rt:$n[1].Vector2,sn:"WA"},{a:2,n:"WB",t:4,rt:$n[1].Vector2,sn:"WB"}]}},$n);$m("FarseerPhysics.Collision.Simplex",function(){return{att:1048840,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:4,n:"GetClosestPoint",t:8,sn:"GetClosestPoint",rt:$n[1].Vector2},{a:4,n:"GetMetric",t:8,sn:"GetMetric",rt:$n[0].Single,box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:4,n:"GetSearchDirection",t:8,sn:"GetSearchDirection",rt:$n[1].Vector2},{a:4,n:"GetWitnessPoints",t:8,pi:[{n:"pA",out:!0,pt:$n[1].Vector2,ps:0},{n:"pB",out:!0,pt:$n[1].Vector2,ps:1}],sn:"GetWitnessPoints",rt:$n[0].Void,p:[$n[1].Vector2,$n[1].Vector2]},{a:4,n:"ReadCache",t:8,pi:[{n:"cache",ref:!0,pt:$n[11].SimplexCache,ps:0},{n:"proxyA",pt:$n[11].DistanceProxy,ps:1},{n:"transformA",ref:!0,pt:$n[4].Transform,ps:2},{n:"proxyB",pt:$n[11].DistanceProxy,ps:3},{n:"transformB",ref:!0,pt:$n[4].Transform,ps:4}],sn:"ReadCache",rt:$n[0].Void,p:[$n[11].SimplexCache,$n[11].DistanceProxy,$n[4].Transform,$n[11].DistanceProxy,$n[4].Transform]},{a:4,n:"Solve2",t:8,sn:"Solve2",rt:$n[0].Void},{a:4,n:"Solve3",t:8,sn:"Solve3",rt:$n[0].Void},{a:4,n:"WriteCache",t:8,pi:[{n:"cache",ref:!0,pt:$n[11].SimplexCache,ps:0}],sn:"WriteCache",rt:$n[0].Void,p:[$n[11].SimplexCache]},{a:4,n:"Count",t:4,rt:$n[0].Int32,sn:"Count",box:function($v){return Bridge.box($v,System.Int32)}},{a:4,n:"V",t:4,rt:$n[4].FixedArray3$1(FarseerPhysics.Collision.SimplexVertex),sn:"V"}]}},$n);$m("FarseerPhysics.Collision.Distance",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"ComputeDistance",is:!0,t:8,pi:[{n:"output",out:!0,pt:$n[11].DistanceOutput,ps:0},{n:"cache",out:!0,pt:$n[11].SimplexCache,ps:1},{n:"input",pt:$n[11].DistanceInput,ps:2}],sn:"ComputeDistance",rt:$n[0].Void,p:[$n[11].DistanceOutput,$n[11].SimplexCache,$n[11].DistanceInput]},{a:2,n:"GJKCalls",is:!0,t:4,rt:$n[0].Int32,sn:"GJKCalls",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"GJKIters",is:!0,t:4,rt:$n[0].Int32,sn:"GJKIters",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"GJKMaxIters",is:!0,t:4,rt:$n[0].Int32,sn:"GJKMaxIters",box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("FarseerPhysics.Collision.TreeNode$1",function(T){return{att:1048576,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:4,n:"IsLeaf",t:8,sn:"IsLeaf",rt:$n[0].Boolean,box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:4,n:"AABB",t:4,rt:$n[11].AABB,sn:"AABB"},{a:4,n:"Child1",t:4,rt:$n[0].Int32,sn:"Child1",box:function($v){return Bridge.box($v,System.Int32)}},{a:4,n:"Child2",t:4,rt:$n[0].Int32,sn:"Child2",box:function($v){return Bridge.box($v,System.Int32)}},{a:4,n:"Height",t:4,rt:$n[0].Int32,sn:"Height",box:function($v){return Bridge.box($v,System.Int32)}},{a:4,n:"ParentOrNext",t:4,rt:$n[0].Int32,sn:"ParentOrNext",box:function($v){return Bridge.box($v,System.Int32)}},{a:4,n:"UserData",t:4,rt:T,sn:"UserData"}]}},$n);$m("FarseerPhysics.Collision.DynamicTree$1",function(T){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:"AddProxy",t:8,pi:[{n:"aabb",ref:!0,pt:$n[11].AABB,ps:0},{n:"userData",pt:T,ps:1}],sn:"AddProxy",rt:$n[0].Int32,p:[$n[11].AABB,T],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"AllocateNode",t:8,sn:"AllocateNode",rt:$n[0].Int32,box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"Balance",t:8,pi:[{n:"iA",pt:$n[0].Int32,ps:0}],sn:"Balance",rt:$n[0].Int32,p:[$n[0].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"ComputeHeight",t:8,sn:"ComputeHeight",rt:$n[0].Int32,box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"ComputeHeight",t:8,pi:[{n:"nodeId",pt:$n[0].Int32,ps:0}],sn:"ComputeHeight$1",rt:$n[0].Int32,p:[$n[0].Int32],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"FreeNode",t:8,pi:[{n:"nodeId",pt:$n[0].Int32,ps:0}],sn:"FreeNode",rt:$n[0].Void,p:[$n[0].Int32]},{a:2,n:"GetFatAABB",t:8,pi:[{n:"proxyId",pt:$n[0].Int32,ps:0},{n:"fatAABB",out:!0,pt:$n[11].AABB,ps:1}],sn:"GetFatAABB",rt:$n[0].Void,p:[$n[0].Int32,$n[11].AABB]},{a:2,n:"GetUserData",t:8,pi:[{n:"proxyId",pt:$n[0].Int32,ps:0}],sn:"GetUserData",rt:T,p:[$n[0].Int32]},{a:1,n:"InsertLeaf",t:8,pi:[{n:"leaf",pt:$n[0].Int32,ps:0}],sn:"InsertLeaf",rt:$n[0].Void,p:[$n[0].Int32]},{a:2,n:"MoveProxy",t:8,pi:[{n:"proxyId",pt:$n[0].Int32,ps:0},{n:"aabb",ref:!0,pt:$n[11].AABB,ps:1},{n:"displacement",pt:$n[1].Vector2,ps:2}],sn:"MoveProxy",rt:$n[0].Boolean,p:[$n[0].Int32,$n[11].AABB,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Query",t:8,pi:[{n:"callback",pt:Function,ps:0},{n:"aabb",ref:!0,pt:$n[11].AABB,ps:1}],sn:"Query",rt:$n[0].Void,p:[Function,$n[11].AABB]},{a:2,n:"RayCast",t:8,pi:[{n:"callback",pt:Function,ps:0},{n:"input",ref:!0,pt:$n[11].RayCastInput,ps:1}],sn:"RayCast",rt:$n[0].Void,p:[Function,$n[11].RayCastInput]},{a:2,n:"RebuildBottomUp",t:8,sn:"RebuildBottomUp",rt:$n[0].Void},{a:1,n:"RemoveLeaf",t:8,pi:[{n:"leaf",pt:$n[0].Int32,ps:0}],sn:"RemoveLeaf",rt:$n[0].Void,p:[$n[0].Int32]},{a:2,n:"RemoveProxy",t:8,pi:[{n:"proxyId",pt:$n[0].Int32,ps:0}],sn:"RemoveProxy",rt:$n[0].Void,p:[$n[0].Int32]},{a:2,n:"ShiftOrigin",t:8,pi:[{n:"newOrigin",pt:$n[1].Vector2,ps:0}],sn:"ShiftOrigin",rt:$n[0].Void,p:[$n[1].Vector2]},{a:2,n:"Validate",t:8,sn:"Validate",rt:$n[0].Void},{a:2,n:"ValidateMetrics",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0}],sn:"ValidateMetrics",rt:$n[0].Void,p:[$n[0].Int32]},{a:2,n:"ValidateStructure",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0}],sn:"ValidateStructure",rt:$n[0].Void,p:[$n[0].Int32]},{a:2,n:"AreaRatio",t:16,rt:$n[0].Single,g:{a:2,n:"get_AreaRatio",t:8,rt:$n[0].Single,fg:"AreaRatio",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},fn:"AreaRatio"},{a:2,n:"Height",t:16,rt:$n[0].Int32,g:{a:2,n:"get_Height",t:8,rt:$n[0].Int32,fg:"Height",box:function($v){return Bridge.box($v,System.Int32)}},fn:"Height"},{a:2,n:"MaxBalance",t:16,rt:$n[0].Int32,g:{a:2,n:"get_MaxBalance",t:8,rt:$n[0].Int32,fg:"MaxBalance",box:function($v){return Bridge.box($v,System.Int32)}},fn:"MaxBalance"},{a:4,n:"NullNode",is:!0,t:4,rt:$n[0].Int32,sn:"NullNode",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_freeList",t:4,rt:$n[0].Int32,sn:"_freeList",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_nodeCapacity",t:4,rt:$n[0].Int32,sn:"_nodeCapacity",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_nodeCount",t:4,rt:$n[0].Int32,sn:"_nodeCount",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_nodes",t:4,rt:System.Array.type(FarseerPhysics.Collision.TreeNode$1(T)),sn:"_nodes"},{a:1,n:"_queryStack",t:4,rt:$n[5].Stack$1(System.Int32),sn:"_queryStack"},{a:1,n:"_raycastStack",t:4,rt:$n[5].Stack$1(System.Int32),sn:"_raycastStack"},{a:1,n:"_root",t:4,rt:$n[0].Int32,sn:"_root",box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("FarseerPhysics.Collision.Pair",function(){return{att:1048840,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"CompareTo",t:8,pi:[{n:"other",pt:$n[11].Pair,ps:0}],sn:"compareTo",rt:$n[0].Int32,p:[$n[11].Pair],box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"ProxyIdA",t:4,rt:$n[0].Int32,sn:"ProxyIdA",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"ProxyIdB",t:4,rt:$n[0].Int32,sn:"ProxyIdB",box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("FarseerPhysics.Collision.DynamicTreeBroadPhase",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:"AddProxy",t:8,pi:[{n:"proxy",ref:!0,pt:$n[3].FixtureProxy,ps:0}],sn:"AddProxy",rt:$n[0].Int32,p:[$n[3].FixtureProxy],box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"BufferMove",t:8,pi:[{n:"proxyId",pt:$n[0].Int32,ps:0}],sn:"BufferMove",rt:$n[0].Void,p:[$n[0].Int32]},{a:2,n:"GetFatAABB",t:8,pi:[{n:"proxyId",pt:$n[0].Int32,ps:0},{n:"aabb",out:!0,pt:$n[11].AABB,ps:1}],sn:"GetFatAABB",rt:$n[0].Void,p:[$n[0].Int32,$n[11].AABB]},{a:2,n:"GetProxy",t:8,pi:[{n:"proxyId",pt:$n[0].Int32,ps:0}],sn:"GetProxy",rt:$n[3].FixtureProxy,p:[$n[0].Int32]},{a:2,n:"MoveProxy",t:8,pi:[{n:"proxyId",pt:$n[0].Int32,ps:0},{n:"aabb",ref:!0,pt:$n[11].AABB,ps:1},{n:"displacement",pt:$n[1].Vector2,ps:2}],sn:"MoveProxy",rt:$n[0].Void,p:[$n[0].Int32,$n[11].AABB,$n[1].Vector2]},{a:2,n:"Query",t:8,pi:[{n:"callback",pt:Function,ps:0},{n:"aabb",ref:!0,pt:$n[11].AABB,ps:1}],sn:"Query",rt:$n[0].Void,p:[Function,$n[11].AABB]},{a:1,n:"QueryCallback",t:8,pi:[{n:"proxyId",pt:$n[0].Int32,ps:0}],sn:"QueryCallback",rt:$n[0].Boolean,p:[$n[0].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"RayCast",t:8,pi:[{n:"callback",pt:Function,ps:0},{n:"input",ref:!0,pt:$n[11].RayCastInput,ps:1}],sn:"RayCast",rt:$n[0].Void,p:[Function,$n[11].RayCastInput]},{a:2,n:"RemoveProxy",t:8,pi:[{n:"proxyId",pt:$n[0].Int32,ps:0}],sn:"RemoveProxy",rt:$n[0].Void,p:[$n[0].Int32]},{a:2,n:"ShiftOrigin",t:8,pi:[{n:"newOrigin",pt:$n[1].Vector2,ps:0}],sn:"ShiftOrigin",rt:$n[0].Void,p:[$n[1].Vector2]},{a:2,n:"TestOverlap",t:8,pi:[{n:"proxyIdA",pt:$n[0].Int32,ps:0},{n:"proxyIdB",pt:$n[0].Int32,ps:1}],sn:"TestOverlap",rt:$n[0].Boolean,p:[$n[0].Int32,$n[0].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"TouchProxy",t:8,pi:[{n:"proxyId",pt:$n[0].Int32,ps:0}],sn:"TouchProxy",rt:$n[0].Void,p:[$n[0].Int32]},{a:1,n:"UnBufferMove",t:8,pi:[{n:"proxyId",pt:$n[0].Int32,ps:0}],sn:"UnBufferMove",rt:$n[0].Void,p:[$n[0].Int32]},{a:2,n:"UpdatePairs",t:8,pi:[{n:"callback",pt:Function,ps:0}],sn:"UpdatePairs",rt:$n[0].Void,p:[Function]},{a:2,n:"ProxyCount",t:16,rt:$n[0].Int32,g:{a:2,n:"get_ProxyCount",t:8,rt:$n[0].Int32,fg:"ProxyCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ProxyCount"},{a:2,n:"TreeBalance",t:16,rt:$n[0].Int32,g:{a:2,n:"get_TreeBalance",t:8,rt:$n[0].Int32,fg:"TreeBalance",box:function($v){return Bridge.box($v,System.Int32)}},fn:"TreeBalance"},{a:2,n:"TreeHeight",t:16,rt:$n[0].Int32,g:{a:2,n:"get_TreeHeight",t:8,rt:$n[0].Int32,fg:"TreeHeight",box:function($v){return Bridge.box($v,System.Int32)}},fn:"TreeHeight"},{a:2,n:"TreeQuality",t:16,rt:$n[0].Single,g:{a:2,n:"get_TreeQuality",t:8,rt:$n[0].Single,fg:"TreeQuality",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},fn:"TreeQuality"},{a:1,n:"NullProxy",is:!0,t:4,rt:$n[0].Int32,sn:"NullProxy",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_moveBuffer",t:4,rt:$n[0].Array.type(System.Int32),sn:"_moveBuffer"},{a:1,n:"_moveCapacity",t:4,rt:$n[0].Int32,sn:"_moveCapacity",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_moveCount",t:4,rt:$n[0].Int32,sn:"_moveCount",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_pairBuffer",t:4,rt:System.Array.type(FarseerPhysics.Collision.Pair),sn:"_pairBuffer"},{a:1,n:"_pairCapacity",t:4,rt:$n[0].Int32,sn:"_pairCapacity",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_pairCount",t:4,rt:$n[0].Int32,sn:"_pairCount",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_proxyCount",t:4,rt:$n[0].Int32,sn:"_proxyCount",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_queryCallback",t:4,rt:Function,sn:"_queryCallback"},{a:1,n:"_queryProxyId",t:4,rt:$n[0].Int32,sn:"_queryProxyId",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_tree",t:4,rt:$n[11].DynamicTree$1(FarseerPhysics.Dynamics.FixtureProxy),sn:"_tree"}]}},$n);$m("FarseerPhysics.Collision.IBroadPhase",function(){return{att:161,a:2,m:[{ab:!0,a:2,n:"AddProxy",t:8,pi:[{n:"proxy",ref:!0,pt:$n[3].FixtureProxy,ps:0}],sn:"FarseerPhysics$Collision$IBroadPhase$AddProxy",rt:$n[0].Int32,p:[$n[3].FixtureProxy],box:function($v){return Bridge.box($v,System.Int32)}},{ab:!0,a:2,n:"GetFatAABB",t:8,pi:[{n:"proxyId",pt:$n[0].Int32,ps:0},{n:"aabb",out:!0,pt:$n[11].AABB,ps:1}],sn:"FarseerPhysics$Collision$IBroadPhase$GetFatAABB",rt:$n[0].Void,p:[$n[0].Int32,$n[11].AABB]},{ab:!0,a:2,n:"GetProxy",t:8,pi:[{n:"proxyId",pt:$n[0].Int32,ps:0}],sn:"FarseerPhysics$Collision$IBroadPhase$GetProxy",rt:$n[3].FixtureProxy,p:[$n[0].Int32]},{ab:!0,a:2,n:"MoveProxy",t:8,pi:[{n:"proxyId",pt:$n[0].Int32,ps:0},{n:"aabb",ref:!0,pt:$n[11].AABB,ps:1},{n:"displacement",pt:$n[1].Vector2,ps:2}],sn:"FarseerPhysics$Collision$IBroadPhase$MoveProxy",rt:$n[0].Void,p:[$n[0].Int32,$n[11].AABB,$n[1].Vector2]},{ab:!0,a:2,n:"Query",t:8,pi:[{n:"callback",pt:Function,ps:0},{n:"aabb",ref:!0,pt:$n[11].AABB,ps:1}],sn:"FarseerPhysics$Collision$IBroadPhase$Query",rt:$n[0].Void,p:[Function,$n[11].AABB]},{ab:!0,a:2,n:"RayCast",t:8,pi:[{n:"callback",pt:Function,ps:0},{n:"input",ref:!0,pt:$n[11].RayCastInput,ps:1}],sn:"FarseerPhysics$Collision$IBroadPhase$RayCast",rt:$n[0].Void,p:[Function,$n[11].RayCastInput]},{ab:!0,a:2,n:"RemoveProxy",t:8,pi:[{n:"proxyId",pt:$n[0].Int32,ps:0}],sn:"FarseerPhysics$Collision$IBroadPhase$RemoveProxy",rt:$n[0].Void,p:[$n[0].Int32]},{ab:!0,a:2,n:"ShiftOrigin",t:8,pi:[{n:"newOrigin",pt:$n[1].Vector2,ps:0}],sn:"FarseerPhysics$Collision$IBroadPhase$ShiftOrigin",rt:$n[0].Void,p:[$n[1].Vector2]},{ab:!0,a:2,n:"TestOverlap",t:8,pi:[{n:"proxyIdA",pt:$n[0].Int32,ps:0},{n:"proxyIdB",pt:$n[0].Int32,ps:1}],sn:"FarseerPhysics$Collision$IBroadPhase$TestOverlap",rt:$n[0].Boolean,p:[$n[0].Int32,$n[0].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ab:!0,a:2,n:"TouchProxy",t:8,pi:[{n:"proxyId",pt:$n[0].Int32,ps:0}],sn:"FarseerPhysics$Collision$IBroadPhase$TouchProxy",rt:$n[0].Void,p:[$n[0].Int32]},{ab:!0,a:2,n:"UpdatePairs",t:8,pi:[{n:"callback",pt:Function,ps:0}],sn:"FarseerPhysics$Collision$IBroadPhase$UpdatePairs",rt:$n[0].Void,p:[Function]},{ab:!0,a:2,n:"ProxyCount",t:16,rt:$n[0].Int32,g:{ab:!0,a:2,n:"get_ProxyCount",t:8,rt:$n[0].Int32,fg:"FarseerPhysics$Collision$IBroadPhase$ProxyCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"FarseerPhysics$Collision$IBroadPhase$ProxyCount"}]}},$n);$m("FarseerPhysics.Collision.TOIInput",function(){return{att:1048577,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"ProxyA",t:4,rt:$n[11].DistanceProxy,sn:"ProxyA"},{a:2,n:"ProxyB",t:4,rt:$n[11].DistanceProxy,sn:"ProxyB"},{a:2,n:"SweepA",t:4,rt:$n[4].Sweep,sn:"SweepA"},{a:2,n:"SweepB",t:4,rt:$n[4].Sweep,sn:"SweepB"},{a:2,n:"TMax",t:4,rt:$n[0].Single,sn:"TMax",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Collision.TOIOutputState",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Failed",is:!0,t:4,rt:$n[11].TOIOutputState,sn:"Failed",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.TOIOutputState,System.Enum.toStringFn(FarseerPhysics.Collision.TOIOutputState))}},{a:2,n:"Overlapped",is:!0,t:4,rt:$n[11].TOIOutputState,sn:"Overlapped",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.TOIOutputState,System.Enum.toStringFn(FarseerPhysics.Collision.TOIOutputState))}},{a:2,n:"Seperated",is:!0,t:4,rt:$n[11].TOIOutputState,sn:"Seperated",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.TOIOutputState,System.Enum.toStringFn(FarseerPhysics.Collision.TOIOutputState))}},{a:2,n:"Touching",is:!0,t:4,rt:$n[11].TOIOutputState,sn:"Touching",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.TOIOutputState,System.Enum.toStringFn(FarseerPhysics.Collision.TOIOutputState))}},{a:2,n:"Unknown",is:!0,t:4,rt:$n[11].TOIOutputState,sn:"Unknown",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.TOIOutputState,System.Enum.toStringFn(FarseerPhysics.Collision.TOIOutputState))}}]}},$n);$m("FarseerPhysics.Collision.TOIOutput",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"State",t:4,rt:$n[11].TOIOutputState,sn:"State",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.TOIOutputState,System.Enum.toStringFn(FarseerPhysics.Collision.TOIOutputState))}},{a:2,n:"T",t:4,rt:$n[0].Single,sn:"T",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("FarseerPhysics.Collision.SeparationFunctionType",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"FaceA",is:!0,t:4,rt:$n[11].SeparationFunctionType,sn:"FaceA",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.SeparationFunctionType,System.Enum.toStringFn(FarseerPhysics.Collision.SeparationFunctionType))}},{a:2,n:"FaceB",is:!0,t:4,rt:$n[11].SeparationFunctionType,sn:"FaceB",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.SeparationFunctionType,System.Enum.toStringFn(FarseerPhysics.Collision.SeparationFunctionType))}},{a:2,n:"Points",is:!0,t:4,rt:$n[11].SeparationFunctionType,sn:"Points",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.SeparationFunctionType,System.Enum.toStringFn(FarseerPhysics.Collision.SeparationFunctionType))}}]}},$n);$m("FarseerPhysics.Collision.SeparationFunction",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"Evaluate",is:!0,t:8,pi:[{n:"indexA",pt:$n[0].Int32,ps:0},{n:"indexB",pt:$n[0].Int32,ps:1},{n:"t",pt:$n[0].Single,ps:2}],sn:"Evaluate",rt:$n[0].Single,p:[$n[0].Int32,$n[0].Int32,$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"FindMinSeparation",is:!0,t:8,pi:[{n:"indexA",out:!0,pt:$n[0].Int32,ps:0},{n:"indexB",out:!0,pt:$n[0].Int32,ps:1},{n:"t",pt:$n[0].Single,ps:2}],sn:"FindMinSeparation",rt:$n[0].Single,p:[$n[0].Int32,$n[0].Int32,$n[0].Single],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"Set",is:!0,t:8,pi:[{n:"cache",ref:!0,pt:$n[11].SimplexCache,ps:0},{n:"proxyA",pt:$n[11].DistanceProxy,ps:1},{n:"sweepA",ref:!0,pt:$n[4].Sweep,ps:2},{n:"proxyB",pt:$n[11].DistanceProxy,ps:3},{n:"sweepB",ref:!0,pt:$n[4].Sweep,ps:4},{n:"t1",pt:$n[0].Single,ps:5}],sn:"Set",rt:$n[0].Void,p:[$n[11].SimplexCache,$n[11].DistanceProxy,$n[4].Sweep,$n[11].DistanceProxy,$n[4].Sweep,$n[0].Single]},{a:1,n:"_axis",is:!0,t:4,rt:$n[1].Vector2,sn:"_axis"},{a:1,n:"_localPoint",is:!0,t:4,rt:$n[1].Vector2,sn:"_localPoint"},{a:1,n:"_proxyA",is:!0,t:4,rt:$n[11].DistanceProxy,sn:"_proxyA"},{a:1,n:"_proxyB",is:!0,t:4,rt:$n[11].DistanceProxy,sn:"_proxyB"},{a:1,n:"_sweepA",is:!0,t:4,rt:$n[4].Sweep,sn:"_sweepA"},{a:1,n:"_sweepB",is:!0,t:4,rt:$n[4].Sweep,sn:"_sweepB"},{a:1,n:"_type",is:!0,t:4,rt:$n[11].SeparationFunctionType,sn:"_type",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.SeparationFunctionType,System.Enum.toStringFn(FarseerPhysics.Collision.SeparationFunctionType))}}]}},$n);$m("FarseerPhysics.Collision.TimeOfImpact",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"CalculateTimeOfImpact",is:!0,t:8,pi:[{n:"output",out:!0,pt:$n[11].TOIOutput,ps:0},{n:"input",pt:$n[11].TOIInput,ps:1}],sn:"CalculateTimeOfImpact",rt:$n[0].Void,p:[$n[11].TOIOutput,$n[11].TOIInput]},{a:2,n:"TOICalls",is:!0,t:4,rt:$n[0].Int32,sn:"TOICalls",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"TOIIters",is:!0,t:4,rt:$n[0].Int32,sn:"TOIIters",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"TOIMaxIters",is:!0,t:4,rt:$n[0].Int32,sn:"TOIMaxIters",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"TOIMaxRootIters",is:!0,t:4,rt:$n[0].Int32,sn:"TOIMaxRootIters",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"TOIRootIters",is:!0,t:4,rt:$n[0].Int32,sn:"TOIRootIters",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_distanceInput",is:!0,t:4,rt:$n[11].DistanceInput,sn:"_distanceInput"}]}},$n);$m("FarseerPhysics.Collision.Shapes.ChainShape",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[4].Vertices,$n[0].Boolean],pi:[{n:"vertices",pt:$n[4].Vertices,ps:0},{n:"createLoop",dv:!1,o:!0,pt:$n[0].Boolean,ps:1}],sn:"$ctor1"},{ov:!0,a:2,n:"Clone",t:8,sn:"Clone",rt:$n[7].Shape},{a:2,n:"CompareTo",t:8,pi:[{n:"shape",pt:$n[7].ChainShape,ps:0}],sn:"CompareTo$1",rt:$n[0].Boolean,p:[$n[7].ChainShape],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ComputeAABB",t:8,pi:[{n:"aabb",out:!0,pt:$n[11].AABB,ps:0},{n:"transform",ref:!0,pt:$n[4].Transform,ps:1},{n:"childIndex",pt:$n[0].Int32,ps:2}],sn:"ComputeAABB",rt:$n[0].Void,p:[$n[11].AABB,$n[4].Transform,$n[0].Int32]},{ov:!0,a:3,n:"ComputeProperties",t:8,sn:"ComputeProperties",rt:$n[0].Void},{ov:!0,a:2,n:"ComputeSubmergedArea",t:8,pi:[{n:"normal",ref:!0,pt:$n[1].Vector2,ps:0},{n:"offset",pt:$n[0].Single,ps:1},{n:"xf",ref:!0,pt:$n[4].Transform,ps:2},{n:"sc",out:!0,pt:$n[1].Vector2,ps:3}],sn:"ComputeSubmergedArea",rt:$n[0].Single,p:[$n[1].Vector2,$n[0].Single,$n[4].Transform,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:2,n:"GetChildEdge",t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0}],sn:"GetChildEdge",rt:$n[7].EdgeShape,p:[$n[0].Int32]},{a:4,n:"GetChildEdge",t:8,pi:[{n:"edge",pt:$n[7].EdgeShape,ps:0},{n:"index",pt:$n[0].Int32,ps:1}],sn:"GetChildEdge$1",rt:$n[0].Void,p:[$n[7].EdgeShape,$n[0].Int32]},{ov:!0,a:2,n:"RayCast",t:8,pi:[{n:"output",out:!0,pt:$n[11].RayCastOutput,ps:0},{n:"input",ref:!0,pt:$n[11].RayCastInput,ps:1},{n:"transform",ref:!0,pt:$n[4].Transform,ps:2},{n:"childIndex",pt:$n[0].Int32,ps:3}],sn:"RayCast",rt:$n[0].Boolean,p:[$n[11].RayCastOutput,$n[11].RayCastInput,$n[4].Transform,$n[0].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"TestPoint",t:8,pi:[{n:"transform",ref:!0,pt:$n[4].Transform,ps:0},{n:"point",ref:!0,pt:$n[1].Vector2,ps:1}],sn:"TestPoint",rt:$n[0].Boolean,p:[$n[4].Transform,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[0].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[0].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"NextVertex",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_NextVertex",t:8,rt:$n[1].Vector2,fg:"NextVertex"},s:{a:2,n:"set_NextVertex",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"NextVertex"},fn:"NextVertex"},{a:2,n:"PrevVertex",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_PrevVertex",t:8,rt:$n[1].Vector2,fg:"PrevVertex"},s:{a:2,n:"set_PrevVertex",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"PrevVertex"},fn:"PrevVertex"},{a:2,n:"Vertices",t:4,rt:$n[4].Vertices,sn:"Vertices"},{a:1,n:"_edgeShape",is:!0,t:4,rt:$n[7].EdgeShape,sn:"_edgeShape"},{a:1,n:"_hasNextVertex",t:4,rt:$n[0].Boolean,sn:"_hasNextVertex",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_hasPrevVertex",t:4,rt:$n[0].Boolean,sn:"_hasPrevVertex",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_nextVertex",t:4,rt:$n[1].Vector2,sn:"_nextVertex"},{a:1,n:"_prevVertex",t:4,rt:$n[1].Vector2,sn:"_prevVertex"}]}},$n);$m("FarseerPhysics.Collision.Shapes.CircleShape",function(){return{att:1048577,a:2,m:[{a:4,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].Single,$n[0].Single],pi:[{n:"radius",pt:$n[0].Single,ps:0},{n:"density",pt:$n[0].Single,ps:1}],sn:"$ctor1"},{ov:!0,a:2,n:"Clone",t:8,sn:"Clone",rt:$n[7].Shape},{a:2,n:"CompareTo",t:8,pi:[{n:"shape",pt:$n[7].CircleShape,ps:0}],sn:"CompareTo$1",rt:$n[0].Boolean,p:[$n[7].CircleShape],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ComputeAABB",t:8,pi:[{n:"aabb",out:!0,pt:$n[11].AABB,ps:0},{n:"transform",ref:!0,pt:$n[4].Transform,ps:1},{n:"childIndex",pt:$n[0].Int32,ps:2}],sn:"ComputeAABB",rt:$n[0].Void,p:[$n[11].AABB,$n[4].Transform,$n[0].Int32]},{ov:!0,a:3,sl:!0,n:"ComputeProperties",t:8,sn:"ComputeProperties",rt:$n[0].Void},{ov:!0,a:2,n:"ComputeSubmergedArea",t:8,pi:[{n:"normal",ref:!0,pt:$n[1].Vector2,ps:0},{n:"offset",pt:$n[0].Single,ps:1},{n:"xf",ref:!0,pt:$n[4].Transform,ps:2},{n:"sc",out:!0,pt:$n[1].Vector2,ps:3}],sn:"ComputeSubmergedArea",rt:$n[0].Single,p:[$n[1].Vector2,$n[0].Single,$n[4].Transform,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{ov:!0,a:2,n:"RayCast",t:8,pi:[{n:"output",out:!0,pt:$n[11].RayCastOutput,ps:0},{n:"input",ref:!0,pt:$n[11].RayCastInput,ps:1},{n:"transform",ref:!0,pt:$n[4].Transform,ps:2},{n:"childIndex",pt:$n[0].Int32,ps:3}],sn:"RayCast",rt:$n[0].Boolean,p:[$n[11].RayCastOutput,$n[11].RayCastInput,$n[4].Transform,$n[0].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"TestPoint",t:8,pi:[{n:"transform",ref:!0,pt:$n[4].Transform,ps:0},{n:"point",ref:!0,pt:$n[1].Vector2,ps:1}],sn:"TestPoint",rt:$n[0].Boolean,p:[$n[4].Transform,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[0].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[0].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Position",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_Position",t:8,rt:$n[1].Vector2,fg:"Position"},s:{a:2,n:"set_Position",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"Position"},fn:"Position"},{a:4,n:"_position",t:4,rt:$n[1].Vector2,sn:"_position"}]}},$n);$m("FarseerPhysics.Collision.Shapes.EdgeShape",function(){return{att:1048577,a:2,m:[{a:4,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[1].Vector2,$n[1].Vector2],pi:[{n:"start",pt:$n[1].Vector2,ps:0},{n:"end",pt:$n[1].Vector2,ps:1}],sn:"$ctor1"},{ov:!0,a:2,n:"Clone",t:8,sn:"Clone",rt:$n[7].Shape},{a:2,n:"CompareTo",t:8,pi:[{n:"shape",pt:$n[7].EdgeShape,ps:0}],sn:"CompareTo$1",rt:$n[0].Boolean,p:[$n[7].EdgeShape],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ComputeAABB",t:8,pi:[{n:"aabb",out:!0,pt:$n[11].AABB,ps:0},{n:"transform",ref:!0,pt:$n[4].Transform,ps:1},{n:"childIndex",pt:$n[0].Int32,ps:2}],sn:"ComputeAABB",rt:$n[0].Void,p:[$n[11].AABB,$n[4].Transform,$n[0].Int32]},{ov:!0,a:3,n:"ComputeProperties",t:8,sn:"ComputeProperties",rt:$n[0].Void},{ov:!0,a:2,n:"ComputeSubmergedArea",t:8,pi:[{n:"normal",ref:!0,pt:$n[1].Vector2,ps:0},{n:"offset",pt:$n[0].Single,ps:1},{n:"xf",ref:!0,pt:$n[4].Transform,ps:2},{n:"sc",out:!0,pt:$n[1].Vector2,ps:3}],sn:"ComputeSubmergedArea",rt:$n[0].Single,p:[$n[1].Vector2,$n[0].Single,$n[4].Transform,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{ov:!0,a:2,n:"RayCast",t:8,pi:[{n:"output",out:!0,pt:$n[11].RayCastOutput,ps:0},{n:"input",ref:!0,pt:$n[11].RayCastInput,ps:1},{n:"transform",ref:!0,pt:$n[4].Transform,ps:2},{n:"childIndex",pt:$n[0].Int32,ps:3}],sn:"RayCast",rt:$n[0].Boolean,p:[$n[11].RayCastOutput,$n[11].RayCastInput,$n[4].Transform,$n[0].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Set",t:8,pi:[{n:"start",pt:$n[1].Vector2,ps:0},{n:"end",pt:$n[1].Vector2,ps:1}],sn:"Set",rt:$n[0].Void,p:[$n[1].Vector2,$n[1].Vector2]},{ov:!0,a:2,n:"TestPoint",t:8,pi:[{n:"transform",ref:!0,pt:$n[4].Transform,ps:0},{n:"point",ref:!0,pt:$n[1].Vector2,ps:1}],sn:"TestPoint",rt:$n[0].Boolean,p:[$n[4].Transform,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[0].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[0].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"HasVertex0",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_HasVertex0",t:8,rt:$n[0].Boolean,fg:"HasVertex0",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_HasVertex0",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"HasVertex0"},fn:"HasVertex0"},{a:2,n:"HasVertex3",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_HasVertex3",t:8,rt:$n[0].Boolean,fg:"HasVertex3",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_HasVertex3",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"HasVertex3"},fn:"HasVertex3"},{a:2,n:"Vertex0",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_Vertex0",t:8,rt:$n[1].Vector2,fg:"Vertex0"},s:{a:2,n:"set_Vertex0",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"Vertex0"},fn:"Vertex0"},{a:2,n:"Vertex1",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_Vertex1",t:8,rt:$n[1].Vector2,fg:"Vertex1"},s:{a:2,n:"set_Vertex1",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"Vertex1"},fn:"Vertex1"},{a:2,n:"Vertex2",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_Vertex2",t:8,rt:$n[1].Vector2,fg:"Vertex2"},s:{a:2,n:"set_Vertex2",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"Vertex2"},fn:"Vertex2"},{a:2,n:"Vertex3",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_Vertex3",t:8,rt:$n[1].Vector2,fg:"Vertex3"},s:{a:2,n:"set_Vertex3",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"Vertex3"},fn:"Vertex3"},{a:4,n:"_vertex1",t:4,rt:$n[1].Vector2,sn:"_vertex1"},{a:4,n:"_vertex2",t:4,rt:$n[1].Vector2,sn:"_vertex2"}]}},$n);$m("FarseerPhysics.Collision.Shapes.PolygonShape",function(){return{att:1048577,a:2,m:[{a:4,n:".ctor",t:1,sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[0].Single],pi:[{n:"density",pt:$n[0].Single,ps:0}],sn:"$ctor2"},{a:2,n:".ctor",t:1,p:[$n[4].Vertices,$n[0].Single],pi:[{n:"vertices",pt:$n[4].Vertices,ps:0},{n:"density",pt:$n[0].Single,ps:1}],sn:"$ctor1"},{ov:!0,a:2,n:"Clone",t:8,sn:"Clone",rt:$n[7].Shape},{a:2,n:"CompareTo",t:8,pi:[{n:"shape",pt:$n[7].PolygonShape,ps:0}],sn:"CompareTo$1",rt:$n[0].Boolean,p:[$n[7].PolygonShape],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ComputeAABB",t:8,pi:[{n:"aabb",out:!0,pt:$n[11].AABB,ps:0},{n:"transform",ref:!0,pt:$n[4].Transform,ps:1},{n:"childIndex",pt:$n[0].Int32,ps:2}],sn:"ComputeAABB",rt:$n[0].Void,p:[$n[11].AABB,$n[4].Transform,$n[0].Int32]},{ov:!0,a:3,n:"ComputeProperties",t:8,sn:"ComputeProperties",rt:$n[0].Void},{ov:!0,a:2,n:"ComputeSubmergedArea",t:8,pi:[{n:"normal",ref:!0,pt:$n[1].Vector2,ps:0},{n:"offset",pt:$n[0].Single,ps:1},{n:"xf",ref:!0,pt:$n[4].Transform,ps:2},{n:"sc",out:!0,pt:$n[1].Vector2,ps:3}],sn:"ComputeSubmergedArea",rt:$n[0].Single,p:[$n[1].Vector2,$n[0].Single,$n[4].Transform,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{ov:!0,a:2,n:"RayCast",t:8,pi:[{n:"output",out:!0,pt:$n[11].RayCastOutput,ps:0},{n:"input",ref:!0,pt:$n[11].RayCastInput,ps:1},{n:"transform",ref:!0,pt:$n[4].Transform,ps:2},{n:"childIndex",pt:$n[0].Int32,ps:3}],sn:"RayCast",rt:$n[0].Boolean,p:[$n[11].RayCastOutput,$n[11].RayCastInput,$n[4].Transform,$n[0].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"TestPoint",t:8,pi:[{n:"transform",ref:!0,pt:$n[4].Transform,ps:0},{n:"point",ref:!0,pt:$n[1].Vector2,ps:1}],sn:"TestPoint",rt:$n[0].Boolean,p:[$n[4].Transform,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"ChildCount",t:16,rt:$n[0].Int32,g:{ov:!0,a:2,n:"get_ChildCount",t:8,rt:$n[0].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Normals",t:16,rt:$n[4].Vertices,g:{a:2,n:"get_Normals",t:8,rt:$n[4].Vertices,fg:"Normals"},fn:"Normals"},{a:2,n:"Vertices",t:16,rt:$n[4].Vertices,g:{a:2,n:"get_Vertices",t:8,rt:$n[4].Vertices,fg:"Vertices"},s:{a:2,n:"set_Vertices",t:8,p:[$n[4].Vertices],rt:$n[0].Void,fs:"Vertices"},fn:"Vertices"},{a:1,n:"_normals",t:4,rt:$n[4].Vertices,sn:"_normals"},{a:1,n:"_vertices",t:4,rt:$n[4].Vertices,sn:"_vertices"}]}},$n);$m("FarseerPhysics.Collision.Shapes.MassData",function(){return{att:1048841,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Equals",t:8,pi:[{n:"other",pt:$n[7].MassData,ps:0}],sn:"equalsT",rt:$n[0].Boolean,p:[$n[7].MassData],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"Equals",t:8,pi:[{n:"obj",pt:$n[0].Object,ps:0}],sn:"equals",rt:$n[0].Boolean,p:[$n[0].Object],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ov:!0,a:2,n:"GetHashCode",t:8,sn:"getHashCode",rt:$n[0].Int32,box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"op_Equality",is:!0,t:8,pi:[{n:"left",pt:$n[7].MassData,ps:0},{n:"right",pt:$n[7].MassData,ps:1}],sn:"op_Equality",rt:$n[0].Boolean,p:[$n[7].MassData,$n[7].MassData],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"op_Inequality",is:!0,t:8,pi:[{n:"left",pt:$n[7].MassData,ps:0},{n:"right",pt:$n[7].MassData,ps:1}],sn:"op_Inequality",rt:$n[0].Boolean,p:[$n[7].MassData,$n[7].MassData],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Area",t:16,rt:$n[0].Single,g:{a:2,n:"get_Area",t:8,rt:$n[0].Single,fg:"Area",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:4,n:"set_Area",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Area"},fn:"Area"},{a:2,n:"Centroid",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_Centroid",t:8,rt:$n[1].Vector2,fg:"Centroid"},s:{a:4,n:"set_Centroid",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"Centroid"},fn:"Centroid"},{a:2,n:"Inertia",t:16,rt:$n[0].Single,g:{a:2,n:"get_Inertia",t:8,rt:$n[0].Single,fg:"Inertia",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:4,n:"set_Inertia",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Inertia"},fn:"Inertia"},{a:2,n:"Mass",t:16,rt:$n[0].Single,g:{a:2,n:"get_Mass",t:8,rt:$n[0].Single,fg:"Mass",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:4,n:"set_Mass",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Mass"},fn:"Mass"}]}},$n);$m("FarseerPhysics.Collision.Shapes.ShapeType",function(){return{att:257,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Chain",is:!0,t:4,rt:$n[7].ShapeType,sn:"Chain",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.Shapes.ShapeType,System.Enum.toStringFn(FarseerPhysics.Collision.Shapes.ShapeType))}},{a:2,n:"Circle",is:!0,t:4,rt:$n[7].ShapeType,sn:"Circle",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.Shapes.ShapeType,System.Enum.toStringFn(FarseerPhysics.Collision.Shapes.ShapeType))}},{a:2,n:"Edge",is:!0,t:4,rt:$n[7].ShapeType,sn:"Edge",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.Shapes.ShapeType,System.Enum.toStringFn(FarseerPhysics.Collision.Shapes.ShapeType))}},{a:2,n:"Polygon",is:!0,t:4,rt:$n[7].ShapeType,sn:"Polygon",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.Shapes.ShapeType,System.Enum.toStringFn(FarseerPhysics.Collision.Shapes.ShapeType))}},{a:2,n:"TypeCount",is:!0,t:4,rt:$n[7].ShapeType,sn:"TypeCount",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.Shapes.ShapeType,System.Enum.toStringFn(FarseerPhysics.Collision.Shapes.ShapeType))}},{a:2,n:"Unknown",is:!0,t:4,rt:$n[7].ShapeType,sn:"Unknown",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.Shapes.ShapeType,System.Enum.toStringFn(FarseerPhysics.Collision.Shapes.ShapeType))}}]}},$n);$m("FarseerPhysics.Collision.Shapes.Shape",function(){return{att:1048705,a:2,m:[{a:3,n:".ctor",t:1,p:[$n[0].Single],pi:[{n:"density",pt:$n[0].Single,ps:0}],sn:"ctor"},{ab:!0,a:2,n:"Clone",t:8,sn:"Clone",rt:$n[7].Shape},{a:2,n:"CompareTo",t:8,pi:[{n:"shape",pt:$n[7].Shape,ps:0}],sn:"CompareTo",rt:$n[0].Boolean,p:[$n[7].Shape],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ab:!0,a:2,n:"ComputeAABB",t:8,pi:[{n:"aabb",out:!0,pt:$n[11].AABB,ps:0},{n:"transform",ref:!0,pt:$n[4].Transform,ps:1},{n:"childIndex",pt:$n[0].Int32,ps:2}],sn:"ComputeAABB",rt:$n[0].Void,p:[$n[11].AABB,$n[4].Transform,$n[0].Int32]},{ab:!0,a:3,n:"ComputeProperties",t:8,sn:"ComputeProperties",rt:$n[0].Void},{ab:!0,a:2,n:"ComputeSubmergedArea",t:8,pi:[{n:"normal",ref:!0,pt:$n[1].Vector2,ps:0},{n:"offset",pt:$n[0].Single,ps:1},{n:"xf",ref:!0,pt:$n[4].Transform,ps:2},{n:"sc",out:!0,pt:$n[1].Vector2,ps:3}],sn:"ComputeSubmergedArea",rt:$n[0].Single,p:[$n[1].Vector2,$n[0].Single,$n[4].Transform,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{ab:!0,a:2,n:"RayCast",t:8,pi:[{n:"output",out:!0,pt:$n[11].RayCastOutput,ps:0},{n:"input",ref:!0,pt:$n[11].RayCastInput,ps:1},{n:"transform",ref:!0,pt:$n[4].Transform,ps:2},{n:"childIndex",pt:$n[0].Int32,ps:3}],sn:"RayCast",rt:$n[0].Boolean,p:[$n[11].RayCastOutput,$n[11].RayCastInput,$n[4].Transform,$n[0].Int32],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ab:!0,a:2,n:"TestPoint",t:8,pi:[{n:"transform",ref:!0,pt:$n[4].Transform,ps:0},{n:"point",ref:!0,pt:$n[1].Vector2,ps:1}],sn:"TestPoint",rt:$n[0].Boolean,p:[$n[4].Transform,$n[1].Vector2],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{ab:!0,a:2,n:"ChildCount",t:16,rt:$n[0].Int32,g:{ab:!0,a:2,n:"get_ChildCount",t:8,rt:$n[0].Int32,fg:"ChildCount",box:function($v){return Bridge.box($v,System.Int32)}},fn:"ChildCount"},{a:2,n:"Density",t:16,rt:$n[0].Single,g:{a:2,n:"get_Density",t:8,rt:$n[0].Single,fg:"Density",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Density",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Density"},fn:"Density"},{a:2,n:"Radius",t:16,rt:$n[0].Single,g:{a:2,n:"get_Radius",t:8,rt:$n[0].Single,fg:"Radius",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},s:{a:2,n:"set_Radius",t:8,p:[$n[0].Single],rt:$n[0].Void,fs:"Radius"},fn:"Radius"},{a:2,n:"ShapeType",t:16,rt:$n[7].ShapeType,g:{a:2,n:"get_ShapeType",t:8,rt:$n[7].ShapeType,fg:"ShapeType",box:function($v){return Bridge.box($v,FarseerPhysics.Collision.Shapes.ShapeType,System.Enum.toStringFn(FarseerPhysics.Collision.Shapes.ShapeType))}},s:{a:4,n:"set_ShapeType",t:8,p:[$n[7].ShapeType],rt:$n[0].Void,fs:"ShapeType"},fn:"ShapeType"},{a:2,n:"MassData",t:4,rt:$n[7].MassData,sn:"MassData"},{a:4,n:"_2radius",t:4,rt:$n[0].Single,sn:"_2radius",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:4,n:"_density",t:4,rt:$n[0].Single,sn:"_density",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:4,n:"_radius",t:4,rt:$n[0].Single,sn:"_radius",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("Pong.GameContent",function(){return{nested:[$n[25].GameContent.Texture,$n[25].GameContent.Font],att:1048961,a:2,s:!0,m:[{a:2,n:"Load",is:!0,t:8,pi:[{n:"content",pt:$n[13].ContentManager,ps:0},{n:"graphics",pt:$n[26].GraphicsDevice,ps:1}],sn:"Load",rt:$n[27].Task,p:[$n[13].ContentManager,$n[26].GraphicsDevice]},{a:2,n:"IsLoaded",is:!0,t:4,rt:$n[0].Boolean,sn:"IsLoaded",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("Pong.GameContent.Texture",function(){return{td:$n[25].GameContent,att:1048962,a:2,s:!0,m:[{a:2,n:"Ball",is:!0,t:4,rt:$n[26].Texture2D,sn:"Ball"},{a:2,n:"Pad",is:!0,t:4,rt:$n[26].Texture2D,sn:"Pad"},{a:2,n:"Pixel",is:!0,t:4,rt:$n[26].Texture2D,sn:"Pixel"}]}},$n);$m("Pong.GameContent.Font",function(){return{td:$n[25].GameContent,att:1048962,a:2,s:!0,m:[{a:2,n:"Default",is:!0,t:4,rt:$n[26].SpriteFont,sn:"Default"}]}},$n);$m("Pong.GameObject",function(){return{att:1048577,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{v:!0,a:2,n:"Draw",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0},{n:"spriteBatch",pt:$n[26].SpriteBatch,ps:1}],sn:"Draw",rt:$n[0].Void,p:[$n[1].GameTime,$n[26].SpriteBatch]},{v:!0,a:2,n:"ResetPosition",t:8,sn:"ResetPosition",rt:$n[0].Void},{v:!0,a:2,n:"Update",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0}],sn:"Update",rt:$n[0].Void,p:[$n[1].GameTime]},{a:2,n:"IsUILayer",t:4,rt:$n[0].Boolean,sn:"IsUILayer",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}}]}},$n);$m("Pong.GameSettings",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"Height",is:!0,t:4,rt:$n[0].Int32,sn:"Height",box:function($v){return Bridge.box($v,System.Int32)}},{a:2,n:"Width",is:!0,t:4,rt:$n[0].Int32,sn:"Width",box:function($v){return Bridge.box($v,System.Int32)}}]}},$n);$m("Pong.InputManager",function(){return{att:1048961,a:2,s:!0,m:[{a:2,n:"IsButtonPressed",is:!0,t:8,pi:[{n:"index",pt:$n[0].Int32,ps:0},{n:"button",pt:$n[28].Buttons,ps:1}],sn:"IsButtonPressed",rt:$n[0].Boolean,p:[$n[0].Int32,$n[28].Buttons],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsKeyDown",is:!0,t:8,pi:[{n:"key",pt:$n[28].Keys,ps:0}],sn:"IsKeyDown",rt:$n[0].Boolean,p:[$n[28].Keys],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"IsKeyPressed",is:!0,t:8,pi:[{n:"key",pt:$n[28].Keys,ps:0}],sn:"IsKeyPressed",rt:$n[0].Boolean,p:[$n[28].Keys],box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:2,n:"Update",is:!0,t:8,sn:"Update",rt:$n[0].Void},{a:2,n:"GStates",is:!0,t:16,rt:System.Array.type(Microsoft.Xna.Framework.Input.GamePadState),g:{a:2,n:"get_GStates",t:8,rt:System.Array.type(Microsoft.Xna.Framework.Input.GamePadState),fg:"GStates",is:!0},fn:"GStates"},{a:1,n:"_gstate1",is:!0,t:4,rt:$n[28].GamePadState,sn:"_gstate1"},{a:1,n:"_gstate2",is:!0,t:4,rt:$n[28].GamePadState,sn:"_gstate2"},{a:1,n:"_kstate",is:!0,t:4,rt:$n[28].KeyboardState,sn:"_kstate"},{a:1,n:"_prevgstate1",is:!0,t:4,rt:$n[28].GamePadState,sn:"_prevgstate1"},{a:1,n:"_prevgstate2",is:!0,t:4,rt:$n[28].GamePadState,sn:"_prevgstate2"},{a:1,n:"_prevkstate",is:!0,t:4,rt:$n[28].KeyboardState,sn:"_prevkstate"}]}},$n);$m("Pong.PhysicsObject",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[3].Body],pi:[{n:"body",pt:$n[3].Body,ps:0}],sn:"ctor"},{a:2,n:".ctor",t:1,p:[$n[26].Texture2D],pi:[{n:"sprite",pt:$n[26].Texture2D,ps:0}],sn:"$ctor1"},{ov:!0,a:2,n:"Draw",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0},{n:"spriteBatch",pt:$n[26].SpriteBatch,ps:1}],sn:"Draw",rt:$n[0].Void,p:[$n[1].GameTime,$n[26].SpriteBatch]},{ov:!0,a:2,n:"ResetPosition",t:8,sn:"ResetPosition",rt:$n[0].Void},{ov:!0,a:2,n:"Update",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0}],sn:"Update",rt:$n[0].Void,p:[$n[1].GameTime]},{a:2,n:"Body",t:16,rt:$n[3].Body,g:{a:2,n:"get_Body",t:8,rt:$n[3].Body,fg:"Body"},fn:"Body"},{a:2,n:"Origin",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_Origin",t:8,rt:$n[1].Vector2,fg:"Origin"},s:{a:2,n:"set_Origin",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"Origin"},fn:"Origin"},{a:2,n:"Position",t:16,rt:$n[1].Vector2,g:{a:2,n:"get_Position",t:8,rt:$n[1].Vector2,fg:"Position"},s:{a:2,n:"set_Position",t:8,p:[$n[1].Vector2],rt:$n[0].Void,fs:"Position"},fn:"Position"},{a:3,n:"_body",t:4,rt:$n[3].Body,sn:"_body"},{a:3,n:"_origin",t:4,rt:$n[1].Vector2,sn:"_origin"},{a:3,n:"_sprite",t:4,rt:$n[26].Texture2D,sn:"_sprite"},{a:3,n:"_startPosition",t:4,rt:$n[0].Nullable$1(Microsoft.Xna.Framework.Vector2),sn:"_startPosition"}]}},$n);$m("Pong.Mode",function(){return{att:256,a:4,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Continue",is:!0,t:4,rt:$n[25].Mode,sn:"Continue",box:function($v){return Bridge.box($v,Pong.Mode,System.Enum.toStringFn(Pong.Mode))}},{a:2,n:"Game",is:!0,t:4,rt:$n[25].Mode,sn:"Game",box:function($v){return Bridge.box($v,Pong.Mode,System.Enum.toStringFn(Pong.Mode))}},{a:2,n:"NextStart",is:!0,t:4,rt:$n[25].Mode,sn:"NextStart",box:function($v){return Bridge.box($v,Pong.Mode,System.Enum.toStringFn(Pong.Mode))}},{a:2,n:"Start",is:!0,t:4,rt:$n[25].Mode,sn:"Start",box:function($v){return Bridge.box($v,Pong.Mode,System.Enum.toStringFn(Pong.Mode))}}]}},$n);$m("Pong.Ball",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,sn:"ctor"}]}},$n);$m("Pong.Edge",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Single,$n[25].PhysicsObject],pi:[{n:"x1",pt:$n[0].Single,ps:0},{n:"y1",pt:$n[0].Single,ps:1},{n:"x2",pt:$n[0].Single,ps:2},{n:"y2",pt:$n[0].Single,ps:3},{n:"ballbody",pt:$n[25].PhysicsObject,ps:4}],sn:"ctor"},{a:1,n:"CreateEdge",is:!0,t:8,pi:[{n:"x1",pt:$n[0].Single,ps:0},{n:"y1",pt:$n[0].Single,ps:1},{n:"x2",pt:$n[0].Single,ps:2},{n:"y2",pt:$n[0].Single,ps:3},{n:"ballbody",dv:null,o:!0,pt:$n[25].PhysicsObject,ps:4}],sn:"CreateEdge",rt:$n[3].Body,p:[$n[0].Single,$n[0].Single,$n[0].Single,$n[0].Single,$n[25].PhysicsObject]},{ov:!0,a:2,n:"Draw",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0},{n:"spriteBatch",pt:$n[26].SpriteBatch,ps:1}],sn:"Draw",rt:$n[0].Void,p:[$n[1].GameTime,$n[26].SpriteBatch]},{a:1,n:"_drawEdge",t:4,rt:$n[0].Boolean,sn:"_drawEdge",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},{a:1,n:"_drawRectangle",t:4,rt:$n[1].Rectangle,sn:"_drawRectangle"}]}},$n);$m("Pong.Paddle",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,p:[$n[1].Vector2,$n[28].Keys,$n[28].Keys],pi:[{n:"position",pt:$n[1].Vector2,ps:0},{n:"down",pt:$n[28].Keys,ps:1},{n:"up",pt:$n[28].Keys,ps:2}],sn:"ctor"},{ov:!0,a:2,n:"Update",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0}],sn:"Update",rt:$n[0].Void,p:[$n[1].GameTime]},{a:1,n:"_index",t:4,rt:$n[0].Int32,sn:"_index",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_keyDown",t:4,rt:$n[28].Keys,sn:"_keyDown",box:function($v){return Bridge.box($v,Microsoft.Xna.Framework.Input.Keys,System.Enum.toStringFn(Microsoft.Xna.Framework.Input.Keys))}},{a:1,n:"_keyUp",t:4,rt:$n[28].Keys,sn:"_keyUp",box:function($v){return Bridge.box($v,Microsoft.Xna.Framework.Input.Keys,System.Enum.toStringFn(Microsoft.Xna.Framework.Input.Keys))}},{a:1,n:"_originRotation",t:4,rt:$n[0].Single,sn:"_originRotation",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}},{a:1,n:"_originX",t:4,rt:$n[0].Single,sn:"_originX",box:function($v){return Bridge.box($v,System.Single,System.Single.format,System.Single.getHashCode)}}]}},$n);$m("Pong.Score",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{ov:!0,a:2,n:"Draw",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0},{n:"spriteBatch",pt:$n[26].SpriteBatch,ps:1}],sn:"Draw",rt:$n[0].Void,p:[$n[1].GameTime,$n[26].SpriteBatch]},{a:2,n:"RecalcPositions",t:8,sn:"RecalcPositions",rt:$n[0].Void},{a:2,n:"ScoreForLeft",t:8,sn:"ScoreForLeft",rt:$n[0].Void},{a:2,n:"ScoreForRight",t:8,sn:"ScoreForRight",rt:$n[0].Void},{a:2,n:"Left",t:16,rt:$n[0].Int32,g:{a:2,n:"get_Left",t:8,rt:$n[0].Int32,fg:"Left",box:function($v){return Bridge.box($v,System.Int32)}},s:{a:2,n:"set_Left",t:8,p:[$n[0].Int32],rt:$n[0].Void,fs:"Left"},fn:"Left"},{a:2,n:"Right",t:16,rt:$n[0].Int32,g:{a:2,n:"get_Right",t:8,rt:$n[0].Int32,fg:"Right",box:function($v){return Bridge.box($v,System.Int32)}},s:{a:2,n:"set_Right",t:8,p:[$n[0].Int32],rt:$n[0].Void,fs:"Right"},fn:"Right"},{a:2,n:"Scored",t:16,rt:$n[0].Boolean,g:{a:2,n:"get_Scored",t:8,rt:$n[0].Boolean,fg:"Scored",box:function($v){return Bridge.box($v,System.Boolean,System.Boolean.toString)}},s:{a:2,n:"set_Scored",t:8,p:[$n[0].Boolean],rt:$n[0].Void,fs:"Scored"},fn:"Scored"},{a:1,n:"_left",t:4,rt:$n[0].Int32,sn:"_left",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_leftPosition",t:4,rt:$n[1].Vector2,sn:"_leftPosition"},{a:1,n:"_leftString",t:4,rt:$n[0].String,sn:"_leftString"},{a:1,n:"_right",t:4,rt:$n[0].Int32,sn:"_right",box:function($v){return Bridge.box($v,System.Int32)}},{a:1,n:"_rightPostion",t:4,rt:$n[1].Vector2,sn:"_rightPostion"},{a:1,n:"_rightString",t:4,rt:$n[0].String,sn:"_rightString"},{a:1,n:"_separatorPosition",t:4,rt:$n[1].Vector2,sn:"_separatorPosition"},{a:1,n:"_separatorString",t:4,rt:$n[0].String,sn:"_separatorString"}]}},$n);$m("Pong.TheGame",function(){return{att:1048577,a:2,m:[{a:2,n:".ctor",t:1,sn:"ctor"},{ov:!0,a:3,n:"Draw",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0}],sn:"Draw",rt:$n[0].Void,p:[$n[1].GameTime]},{ov:!0,a:3,n:"LoadContent",t:8,sn:"LoadContent",rt:$n[0].Void},{a:1,n:"LoadMe",t:8,sn:"LoadMe",rt:$n[0].Void},{ov:!0,a:3,n:"Update",t:8,pi:[{n:"gameTime",pt:$n[1].GameTime,ps:0}],sn:"Update",rt:$n[0].Void,p:[$n[1].GameTime]},{a:2,n:"MainWorld",is:!0,t:4,rt:$n[3].World,sn:"MainWorld"},{a:1,n:"_ball",t:4,rt:$n[25].Ball,sn:"_ball"},{a:1,n:"_graphics",t:4,rt:$n[1].GraphicsDeviceManager,sn:"_graphics"},{a:1,n:"_mode",t:4,rt:$n[25].Mode,sn:"_mode",box:function($v){return Bridge.box($v,Pong.Mode,System.Enum.toStringFn(Pong.Mode))}},{a:1,n:"_objects",t:4,rt:$n[5].List$1(Pong.GameObject),sn:"_objects"},{a:1,n:"_positionContinue",t:4,rt:$n[1].Vector2,sn:"_positionContinue"},{a:1,n:"_positionStart",t:4,rt:$n[1].Vector2,sn:"_positionStart"},{a:1,n:"_renderTargetGame",t:4,rt:$n[26].RenderTarget2D,sn:"_renderTargetGame"},{a:1,n:"_renderTargetUi",t:4,rt:$n[26].RenderTarget2D,sn:"_renderTargetUi"},{a:1,n:"_score",t:4,rt:$n[25].Score,sn:"_score"},{a:1,n:"_spriteBatch",t:4,rt:$n[26].SpriteBatch,sn:"_spriteBatch"},{a:1,n:"_textContinue",t:4,rt:$n[0].String,sn:"_textContinue"},{a:1,n:"_textStart",t:4,rt:$n[0].String,sn:"_textStart"}]}},$n);$m("Pong.Web.App",function(){return{att:1048577,a:2,m:[{a:2,isSynthetic:!0,n:".ctor",t:1,sn:"ctor"},{a:2,n:"Main",is:!0,t:8,sn:"Main",rt:$n[0].Void},{a:1,n:"_game",is:!0,t:4,rt:$n[25].TheGame,sn:"_game"}]}},$n)});